{"remainingRequest":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/src/views/management/user_server/CsvInvitation.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/src/views/management/user_server/CsvInvitation.vue","mtime":1581294959523},{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["CsvInvitation.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6GA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"CsvInvitation.vue","sourceRoot":"src/views/management/user_server","sourcesContent":["<template>\n    <article id=\"contents\" class=\"sub\">\n\t\t<location/>\n\n\t\t<div class=\"content\">\n\t\t\t<p class=\"intro_guide\">샘플 CSV 파일을 다운로드하고 편집하세요.</p>\n\t\t\t<table class=\"board_view\">\n\t\t\t\t<caption>수동으로 초대</caption>\n\t\t\t\t<colgroup>\n\t\t\t\t\t<col style=\"width:180px\" />\n\t\t\t\t\t<col style=\"width:*\" />\n\t\t\t\t</colgroup>\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th scope=\"row\">csv 파일 업로드</th>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<button type=\"button\" class=\"btn_basic\" @click=\"showTheSample\"><img src=\"@/assets/images/sub/ico_csv.png\" alt=\"\" class=\"ico\" />csv 샘플보기</button>\n\t\t\t\t\t\t\t<button type=\"button\" class=\"btn_basic\" @click=\"downloadTheSample\"><img src=\"@/assets/images/sub/ico_csv_download.png\" alt=\"\" class=\"ico\" />csv 샘플 다운로드</button>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td colspan=\"2\" style=\"height:400px;\">\n                            <div class=\"dragAndDrop\" ref=\"dragAndDrop\">\n                                <div class=\"text\">파일 드래그 엔 드랍 영역</div>\n                            </div>\n                            <input type=\"file\" class=\"hide\" ref=\"file\" multiple>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n<!--                    <tr v-show=\"files.length\">-->\n<!--                        <td colspan=\"2\" >-->\n<!--                            <div v-for=\"file in files\">-->\n<!--                                {{file.name}} <span class=\"pointer\" @click=\"deleteFile(file.id)\">X</span>-->\n<!--                            </div>-->\n<!--                        </td>-->\n<!--                    </tr>-->\n\t\t\t\t</tbody>\n\t\t\t</table>\n<!--            <div class=\"board_btn_set\">-->\n<!--                <button type=\"button\" class=\"btn_basic submit\" @click=\"registMembers\">추가</button>-->\n<!--                <router-link to=\"/management/user_server\"><button type=\"button\" class=\"btn_basic cancel\">취소</button></router-link>-->\n<!--            </div>-->\n\t\t\t<ul class=\"desc_list\">\n\t\t\t\t<li>AOSBOX AI plus에 사용자를 초청하려면 <router-link to=\"/management/user_server/mail_invitation\">메일로 초대</router-link>를 사용합니다.</li>\n\t\t\t\t<li>수동으로 유저를 추가하려면 <router-link to=\"/management/user_server/manual_invitation\">수동으로 추가</router-link>를 사용합니다.</li>\n\t\t\t</ul>\n\t\t</div>\n\n        <!-- 엑셀파일 작성 안내 -->\n        <div class=\"layer_popup\" ref=\"exampleCsvLayer\">\n            <h3>엑셀파일 작성 안내</h3>\n            <div class=\"csv_write_guide\">\n                <div class=\"photo\">\n                    <img src=\"@/assets/images/sub/photo_csv_guide.png\" alt=\"\" />\n                </div>\n                <ul class=\"desc_list\">\n                    <li>샘플 파일의 형식을 유지하여 가져오기를 해 주시기 바랍니다.</li>\n                    <li>샘플 파일의 항목을 임의로 추가, 삭제 또는 변경하시면 정보는 저장되지 않습니다.</li>\n                    <li>데이터의 순위는 위와 같이 유지하여 주시고, 데이터가 없는 열은 공란으로 남겨두세요.</li>\n                    <li>데이터에 쉼포(,)가 들어 있으면 데이터가 잘못 들어갈 수 있습니다.</li>\n                </ul>\n            </div>\n\n            <div class=\"btn_set\">\n                <button type=\"button\" class=\"btn_basic cancel\" @click=\"closeLayer\">닫기</button>\n            </div>\n            <button class=\"btn_close\" @click=\"closeLayer\"><img src=\"@/assets/images/component/btn_popup_close.png\" alt=\"닫기\" /></button>\n        </div>\n\n        <!-- 가져오기 - 실패 -->\n        <div class=\"layer_popup\" ref=\"failLoadCsvLayer\">\n            <h3>가져오기</h3>\n            <div class=\"msg warning\">\n                <h4><img src=\"@/assets/images/component/ico_lp_warning.png\" alt=\"가져오기\" /></h4>\n                <p>\n                    <strong>\n                        파일의 형식이 맞지 않습니다.<br />\n                        올바른 CSV 파일의 형식을 선택하십시오.\n                    </strong>\n                </p>\n            </div>\n\n            <div class=\"btn_set\">\n                <button type=\"button\" class=\"btn_basic cancel\" @click=\"closeLayer\">닫기</button>\n            </div>\n            <button class=\"btn_close\" @click=\"closeLayer\"><img src=\"@/assets/images/component/btn_popup_close.png\" alt=\"닫기\"/></button>\n        </div>\n\n        <!-- 가져오기 - 성공 -->\n        <div class=\"layer_popup\" ref=\"successLoadCsvLayer\">\n            <h3>가져오기</h3>\n            <div class=\"msg success\">\n                <h4><img src=\"@/assets/images/component/ico_lp_success.png\" alt=\"가져오기\" /></h4>\n                <p>\n                    <strong>가져오기에 성공하였습니다.</strong>\n                </p>\n            </div>\n\n            <div class=\"btn_set\">\n                <button type=\"button\" class=\"btn_basic cancel\" @click=\"moveToUserPage\">닫기</button>\n            </div>\n            <button class=\"btn_close\" @click=\"moveToUserPage\"><img src=\"@/assets/images/component/btn_popup_close.png\" alt=\"닫기\"/></button>\n        </div>\n\n        <!-- 모달 배경 -->\n        <div class=\"modal_bg\" ref=\"modal\"></div>\n\t</article>\n</template>\n\n<script>\n    import {saveAs} from 'file-saver'\n\n    export default {\n        name: \"CsvInvitation\",\n        data() {\n          return {\n              files: []\n          }\n        },\n        methods: {\n\n            // csv 샘플보기\n            showTheSample() {\n\n                this.openLayer('exampleCsvLayer');\n            },\n\n            // csv 샘플 다운로드\n            downloadTheSample() {\n\n                saveAs('http://dbox-dev.net/AddMultipleUser.csv', 'AddMultipleUser.csv');\n            },\n\n            // 레이어 팝업 보이기\n            openLayer(layerName) {\n\n                $(this.$refs.modal).show();\n                $(this.$refs[layerName]).show();\n            },\n\n            // 레이어 팝업 숨기기\n            closeLayer() {\n\n                $(this.$refs.modal).hide();\n                $(\".layer_popup\").hide();\n            },\n\n            checkFiles(files, callback) {\n\n                let reader = new FileReader(),\n                    index = 0,\n                    valid = true,\n                    that = this,\n                    file,\n                    i;\n\n                /*\n                 * 드롭다운 된 파일이 올바른 CSV파일인지 검사\n                 * 1. CSV 파일인지 검사\n                 * 2. CSV 내용 형식이 맞는지 검사\n                 */\n                // 1\n                for (i = 0; i < files.length; i++) {\n\n                    let file = files[i];\n\n                    if (file.name.lastIndexOf(\".\") == -1 || file.name.slice(file.name.lastIndexOf(\".\") + 1).toLowerCase() !== 'csv') {\n\n                        this.openLayer('failLoadCsvLayer');\n                        this.files = [];\n                        return;\n                    }\n                }\n\n                if (files.length == 0) return;\n\n                reader.readAsBinaryString(files[index]);\n\n                reader.onload = function(e) {\n\n                    let data = e.target.result;\n\n                    let dataArr = data.split(\"\\r\\n\");\n\n                    for (let j = 0; j < dataArr.length; j++) {\n\n                        if (j === 0) continue;\n\n                        let implData = dataArr[j];\n\n                        if (implData === '') break;\n\n                        let implDataArr = implData.split(\",\");\n\n                        let email = implDataArr[2];\n                        // console.log(email)\n                        if (!validEmail(email)) {\n\n                            this.openLayer('failLoadCsvLayer');\n                            that.files = [];\n                            valid = false;\n                            return false;\n                        }\n                    }\n                }\n\n                reader.onloadend = function (e) {\n\n                    if (valid) {\n\n                        if (++index != files.length) {\n\n                            reader.readAsBinaryString(files[index]);\n\n                        } else {\n\n                            for (i = 0; i < files.length; i++) {\n\n                                file = files[i];\n                                file.id = Math.floor(Math.random() * 10000) + \"_\" + new Date().getTime() + \"_\" + file.name;\n                                that.files.push(file);\n                            }\n\n                            callback();\n                        }\n\n                    }\n                }\n\n            },\n\n            deleteFile(fileId) {\n\n                let files = this.files,\n                    file;\n\n                for (let i = 0; i < files.length; i++) {\n\n                    file = files[i];\n\n                    if (fileId === file.id)\n                        this.files.splice(i, 1);\n                }\n\n            },\n\n            // 추가\n            registMembers() {\n\n                let files = this.files;\n\n                // 업로드할 파일이 있는지 확인 후, 진행\n                if (this.files.length === 0) return;\n\n                const formData = new FormData();\n                for (let i = 0; i < files.length; i++) {\n\n                    formData.append('files[' + i + ']', this.files[i], this.files[i].id);\n                }\n\n                axios.post('/management/registMembers/', formData, {\n                    headers: {\n                        'Content-Type': 'multipart/form-data'\n                    }\n                }).then(result => {\n\n                    let data = result.data;\n\n                    if (data.code == 1000) {\n\n                        this.openLayer('successLoadCsvLayer');\n\n                    } else {\n\n                        this.openLayer('failLoadCsvLayer');\n                        this.files = [];\n                    }\n\n                }).catch(ex => {\n\n                    console.log(ex);\n                });\n            },\n\n            moveToUserPage() {\n\n                this.$router.push(\"/management/user_server\");\n            }\n\n        },\n        mounted() {\n\n            let $dropZone = $(this.$refs.dragAndDrop),\n                $file = $(this.$refs.file),\n                that = this;\n\n            //Drag기능\n            $dropZone.on('dragenter',function(e){\n\n                e.stopPropagation();\n                e.preventDefault();\n\n                // 드롭다운 영역 css\n                $dropZone.css('background-color','#E3F2FC');\n\n            }).on('dragleave',function(e){\n\n                e.stopPropagation();\n                e.preventDefault();\n\n                // 드롭다운 영역 css\n                $dropZone.css('background-color','#FFFFFF');\n\n            }).on('dragover',function(e){\n\n                e.stopPropagation();\n                e.preventDefault();\n\n                // 드롭다운 영역 css\n                $dropZone.css('background-color','#E3F2FC');\n\n            }).on('drop',function(e){\n\n                let files = e.originalEvent.dataTransfer.files;\n\n                // console.log(files)\n\n                e.preventDefault();\n\n                // 드롭다운 영역 css\n                $dropZone.css('background-color','#FFFFFF');\n\n                // 첨부한 파일 체크 & 첨부 파일 표시\n                that.checkFiles(files, that.registMembers);\n\n            }).on('click', function(e){\n\n                $file.click();\n            });\n\n            // 파일 선택 시\n            $file.on('change', function(e){\n\n                let files = e.target.files;\n\n                // 첨부한 파일 체크 & 첨부 파일 표시\n                that.checkFiles(files, that.registMembers);\n            });\n        }\n    }\n\n    function validEmail(email) {\n\n        let regex=/([\\w-.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/;\n\n        return (email != '' && email != 'undefined' && regex.test(email));\n    }\n\n    function download(strData, strFileName, strMimeType) {\n        let D = document,\n            a = D.createElement(\"a\");\n            strMimeType= strMimeType || \"application/octet-stream\";\n\n\n        if (navigator.msSaveBlob) { // IE10\n            return navigator.msSaveBlob(new Blob([strData], {type: strMimeType}), strFileName);\n        } /* end if(navigator.msSaveBlob) */\n\n\n        if ('download' in a) { //html5 A[download]\n            a.href = \"data:\" + strMimeType + \",\" + encodeURIComponent(strData);\n            a.setAttribute(\"download\", strFileName);\n            a.innerHTML = \"downloading...\";\n            D.body.appendChild(a);\n            setTimeout(function() {\n                a.click();\n                D.body.removeChild(a);\n            }, 66);\n            return true;\n        } /* end if('download' in a) */\n\n\n        //do iframe dataURL download (old ch+FF):\n        let f = D.createElement(\"iframe\");\n        D.body.appendChild(f);\n        f.src = \"data:\" +  strMimeType   + \",\" + encodeURIComponent(strData);\n\n        setTimeout(function() {\n            D.body.removeChild(f);\n        }, 333);\n        return true;\n    } /* end download() */\n</script>\n\n<style scoped>\n.board_btn_set {\n    text-align: left;\n}\n.dragAndDrop {\n    display: table;\n    height: 100%;\n    width: 100%;\n    text-align: center;\n    border: gray solid 1px;\n}\n.dragAndDrop .text {\n    display: table-cell;\n    vertical-align: middle;\n}\n.hide {\n    display: none;\n}\n</style>\n"]}]}