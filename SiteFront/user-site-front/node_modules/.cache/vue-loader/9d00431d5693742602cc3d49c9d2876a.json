{"remainingRequest":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/src/views/before_login/ResetPasswordForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/src/views/before_login/ResetPasswordForm.vue","mtime":1583887584469},{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgppbXBvcnQgYmVmb3JlX2xvZ2luX2hlYWRlciBmcm9tICcuLi8uLi9jb21wb25lbnRzL2hlYWRlci9iZWZvcmVfbG9naW5faGVhZGVyJwppbXBvcnQgYmVmb3JlX2xvZ2luX2Zvb3RlciBmcm9tICcuLi8uLi9jb21wb25lbnRzL2Zvb3Rlci9iZWZvcmVfbG9naW5fZm9vdGVyJwoKZXhwb3J0IGRlZmF1bHQgewogICAgZGF0YSgpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICBrOiAnJywKICAgICAgICAgICAgZW1haWw6ICcnLAogICAgICAgICAgICBwYXNzd29yZDogJycsCiAgICAgICAgICAgIHJlUGFzc3dvcmQ6ICcnLAogICAgICAgICAgICBlcnJvcjogZmFsc2UsCiAgICAgICAgICAgIGVycm9yTWVzc2FnZTogJ+u5hOuwgOuyiO2YuOqwgCDsnbzsuZjtlZjsp4Ag7JWK7Iq164uI64ukLicKICAgICAgICB9CiAgICB9LAogICAgY29tcHV0ZWQ6IHsKCiAgICB9LAogICAgY29tcG9uZW50czogewogICAgICAgICdiZWZvcmUtbG9naW4taGVhZGVyJzogYmVmb3JlX2xvZ2luX2hlYWRlciwKICAgICAgICAnYmVmb3JlLWxvZ2luLWZvb3Rlcic6IGJlZm9yZV9sb2dpbl9mb290ZXIsCiAgICB9LAogICAgbWV0aG9kczogewoKICAgICAgICBjaGVjayhrZXl3b3JkKSB7CgogICAgICAgICAgICBsZXQgcmVzdWx0ID0gZmFsc2U7CgogICAgICAgICAgICBzd2l0Y2ggKGtleXdvcmQpIHsKCiAgICAgICAgICAgICAgICBjYXNlICdlbWFpbCc6CiAgICAgICAgICAgICAgICAgICAgcmVzdWx0ID0gdGhpcy5jaGVja0VtYWlsKCk7CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgICAgY2FzZSAncGFzc3dvcmQnOgogICAgICAgICAgICAgICAgICAgIHJlc3VsdCA9IHRoaXMuY2hlY2tQYXNzd29yZCgpOwogICAgICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICAgIGNhc2UgJ3JlUGFzc3dvcmQnOgogICAgICAgICAgICAgICAgICAgIHJlc3VsdCA9IHRoaXMuY2hlY2tSZVBhc3N3b3JkKCk7CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHJldHVybiByZXN1bHQ7CiAgICAgICAgfSwKCiAgICAgICAgY2hlY2tFbWFpbCgpIHsKCiAgICAgICAgICAgIGxldCBlbWFpbCA9IHRoaXMuZW1haWwsCiAgICAgICAgICAgICAgICBtZXNzYWdlID0gIuydtOuplOydvCDso7zshozrpbwg7Jis67CU66W06rKMIOyeheugpe2VtOyjvOyEuOyalC4iOwoKICAgICAgICAgICAgaWYgKCF2YWxpZEVtYWlsKGVtYWlsKSkgewoKICAgICAgICAgICAgICAgIGlmIChlbWFpbC50cmltKCkgPT0gJycpCiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZSA9ICfsnbTrqZTsnbwg7KO87IaM66W8IOyeheugpe2VtOyjvOyEuOyalC4nCgogICAgICAgICAgICAgICAgdGhpcy5zaG93RXJyb3IodHJ1ZSwgbWVzc2FnZSk7CiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgIH0sCgogICAgICAgIGNoZWNrUGFzc3dvcmQoKSB7CgogICAgICAgICAgICBsZXQgcGFzc3dvcmQgPSB0aGlzLnBhc3N3b3JkLnRyaW0oKSwKICAgICAgICAgICAgICAgIG1lc3NhZ2UgPSAnJzsKCiAgICAgICAgICAgIGlmIChwYXNzd29yZCA9PSAnJykgewoKICAgICAgICAgICAgICAgIG1lc3NhZ2UgPSAn67mE67CA67KI7Zi466W8IOyeheugpe2VtOyjvOyEuOyalC4nOwogICAgICAgICAgICAgICAgdGhpcy5zaG93RXJyb3IodHJ1ZSwgbWVzc2FnZSk7CiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmIChwYXNzd29yZC5sZW5ndGggPCA2KSB7CgogICAgICAgICAgICAgICAgbWVzc2FnZSA9ICfruYTrsIDrsojtmLjripQgNuyekCDsnbTsg4HsnbTslrTslbwg7ZWp64uI64ukLic7CiAgICAgICAgICAgICAgICB0aGlzLnNob3dFcnJvcih0cnVlLCBtZXNzYWdlKTsKICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgfSwKCiAgICAgICAgY2hlY2tSZVBhc3N3b3JkKCkgewoKICAgICAgICAgICAgbGV0IHJlUGFzc3dvcmQgPSB0aGlzLnJlUGFzc3dvcmQudHJpbSgpLAogICAgICAgICAgICAgICAgbWVzc2FnZSA9ICfruYTrsIDrsojtmLgg7ZmV7J247J2EIOyeheugpe2VtOyjvOyEuOyalC4nOwoKICAgICAgICAgICAgaWYgKHJlUGFzc3dvcmQgPT0gJycpIHsKCiAgICAgICAgICAgICAgICB0aGlzLnNob3dFcnJvcih0cnVlLCBtZXNzYWdlKTsKICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKHRoaXMucGFzc3dvcmQudHJpbSgpICE9IHRoaXMucmVQYXNzd29yZC50cmltKCkpIHsKCiAgICAgICAgICAgICAgICBtZXNzYWdlID0gJ+u5hOuwgOuyiO2YuOyZgCDruYTrsIDrsojtmLgg7ZmV7J247J20IOqwmeyngCDslYrsirXri4jri6QuJzsKICAgICAgICAgICAgICAgIHRoaXMuc2hvd0Vycm9yKHRydWUsIG1lc3NhZ2UpOwogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgICAgICB9CgogICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICB9LAoKICAgICAgICBzaG93RXJyb3Ioc2hvdywgbWVzc2FnZSA9ICcnKSB7CgogICAgICAgICAgICB0aGlzLmVycm9yID0gc2hvdzsKICAgICAgICAgICAgdGhpcy5lcnJvck1lc3NhZ2UgPSBtZXNzYWdlOwogICAgICAgIH0sCgogICAgICAgIC8vIOuztOuCtOq4sAogICAgICAgIHNlbmQoKSB7CgogICAgICAgICAgICBpZiAoIXRoaXMuY2hlY2soJ2VtYWlsJykpIHJldHVybjsKICAgICAgICAgICAgaWYgKCF0aGlzLmNoZWNrKCdwYXNzd29yZCcpKSByZXR1cm47CiAgICAgICAgICAgIGlmICghdGhpcy5jaGVjaygncmVQYXNzd29yZCcpKSByZXR1cm47CgogICAgICAgICAgICBheGlvcy5wb3N0KCIvYmVmb3JlX2xvZ2luL3Jlc2V0UGFzc3dvcmQvIiwgewogICAgICAgICAgICAgICAgazogdGhpcy5rLAogICAgICAgICAgICAgICAgZW1haWw6IHRoaXMuZW1haWwsCiAgICAgICAgICAgICAgICBwYXNzd29yZDogdGhpcy5wYXNzd29yZCwKICAgICAgICAgICAgICAgIHJlUGFzc3dvcmQ6IHRoaXMucmVQYXNzd29yZCwKICAgICAgICAgICAgfSkudGhlbihyZXNwb25zZSA9PiB7CgogICAgICAgICAgICAgICAgbGV0IGRhdGEgPSByZXNwb25zZS5kYXRhLAogICAgICAgICAgICAgICAgICAgIG1lc3NhZ2UgPSAnJzsKCiAgICAgICAgICAgICAgICAvLyDquLDsobQg67mE67CAIOuyiO2YuOyZgCDqsJnslYTrj4Qg65CoCiAgICAgICAgICAgICAgICBpZiAoZGF0YS5jb2RlID09PSAxMDAwKSB7CgogICAgICAgICAgICAgICAgICAgIGFsZXJ0KCLruYTrsIDrsojtmLjqsIAg67OA6rK965CY7JeI7Iq164uI64ukLiDroZzqt7jsnbjtlbTso7zshLjsmpQuIik7CiAgICAgICAgICAgICAgICAgICAgdGhpcy4kcm91dGVyLnB1c2goIi9iZWZvcmVfbG9naW4vbG9naW4vIik7CgogICAgICAgICAgICAgICAgfSBlbHNlIHsKCiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZGF0YSk7CgogICAgICAgICAgICAgICAgICAgIC8vIFdST05HX1BBU1NXT1JECiAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGEuY29kZSA9PT0gLTIwMDEpIHsKCiAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2UgPSAi67mE67CA67KI7Zi464qUIDbsnpAg7J207IOB7J207Ja07JW8IO2VqeuLiOuLpC4iOwoKICAgICAgICAgICAgICAgICAgICAvLyBXUk9OR19SRV9QQVNTV09SRAogICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoZGF0YS5jb2RlID09PSAtMjAwNCkgIHsKCiAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2UgPSAn67mE67CA67KI7Zi47JmAIOu5hOuwgOuyiO2YuCDtmZXsnbjsnbQg6rCZ7KeAIOyViuyKteuLiOuLpC4nOwoKICAgICAgICAgICAgICAgICAgICAvLyBOT19BVVRIT1JJVFkKICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGRhdGEuY29kZSA9PT0gLTQwMDEpICB7CgogICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlID0gIuuzuOyduOydmCDsnbTrqZTsnbwg7KO87IaM66W8IOyeheugpe2VtOyjvOyEuOyalC4iOwoKICAgICAgICAgICAgICAgICAgICAvLyBOT19FWElTVF9VU0VSCiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChkYXRhLmNvZGUgPT09IC0yMDE0KSAgewoKICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZSA9ICLsobTsnqztlZjsp4Ag7JWK64qUIOydtOuplOydvCDso7zshozsnoXri4jri6QuIjsKCiAgICAgICAgICAgICAgICAgICAgLy8gSU1QUk9QRVJfTUFJTF9MSU5LCiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChkYXRhLmNvZGUgPT09IC03MDAzKSAgewoKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy4kcm91dGVyLnB1c2goIi9wYWdlTm90Rm91bmQiKTsKICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd0Vycm9yKHRydWUsIG1lc3NhZ2UpOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgfSkuY2F0Y2goZXggPT4gewoKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGV4KTsKICAgICAgICAgICAgfSk7CiAgICAgICAgfQogICAgfSwKICAgIGNyZWF0ZWQoKSB7CgogICAgICAgIHRoaXMuayA9IHRoaXMuJHJvdXRlLnF1ZXJ5Lms7CgogICAgICAgIC8vIOycoO2aqO2VnCDrp4Htgazsnbjsp4Ag7ZmV7J24CiAgICAgICAgYXhpb3MucG9zdCgiL2JlZm9yZV9sb2dpbi9jaGVja1ZhbGlkS2V5LyIsIHsKICAgICAgICAgICAga1R5cGU6ICdwYXNzd29yZCcsCiAgICAgICAgICAgIGs6IHRoaXMuawogICAgICAgIH0pLnRoZW4ocmVzcG9uc2UgPT4gewoKICAgICAgICAgICAgbGV0IGRhdGEgPSByZXNwb25zZS5kYXRhOwoKICAgICAgICAgICAgaWYgKGRhdGEuY29kZSA9PT0gMTAwMCkgewoKICAgICAgICAgICAgICAgIHRoaXMuZW1haWwgPSBkYXRhLmVtYWlsOwoKICAgICAgICAgICAgfSBlbHNlIHsKCiAgICAgICAgICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCgnL3BhZ2VOb3RGb3VuZCcpOwogICAgICAgICAgICB9CgogICAgICAgIH0pLmNhdGNoKGV4ID0+IHsKCiAgICAgICAgICAgIGNvbnNvbGUubG9nKGV4KTsKICAgICAgICB9KTsKICAgIH0KfQoKZnVuY3Rpb24gdmFsaWRFbWFpbChlbWFpbCkgewoKICAgIGxldCByZWdleD0vKFtcdy0uXSspQCgoXFtbMC05XXsxLDN9XC5bMC05XXsxLDN9XC5bMC05XXsxLDN9XC4pfCgoW1x3LV0rXC4pKykpKFthLXpBLVpdezIsNH18WzAtOV17MSwzfSkoXF0/KSQvOwoKICAgIHJldHVybiAoZW1haWwgIT0gJycgJiYgZW1haWwgIT0gJ3VuZGVmaW5lZCcgJiYgcmVnZXgudGVzdChlbWFpbCkpOwp9Cg=="},{"version":3,"sources":["ResetPasswordForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA","file":"ResetPasswordForm.vue","sourceRoot":"src/views/before_login","sourcesContent":["<!--    메인 표시되는 화면은 폴더명 == 파일명으로 사용바랍니다.            -->\n<template>\n    <div id=\"member_container\">\n        <section id=\"member_info\">\n            <before-login-header/>\n            <div class=\"member_form\">\n                <h2>비밀번호 변경</h2>\n                <div class=\"visual\">\n                    <img src=\"@/assets/images/member/visual_login.png\" alt=\"\" />\n                </div>\n                <p class=\"ask_msg\">\n                    새 비밀번호를 입력하세요.\n                </p>\n                <fieldset>\n                    <legend>정보 입력</legend>\n                    <p class=\"field\"><input type=\"text\" placeholder=\"이메일 주소\" v-model=\"email\" disabled/></p>\n                    <p class=\"field\"><input type=\"password\" placeholder=\"비밀번호\" v-model=\"password\" /></p>\n                    <p class=\"field\"><input type=\"password\" placeholder=\"비밀번호 확인\" v-model=\"rePassword\" /></p>\n                    <p class=\"error_msg\" v-show=\"error\">{{errorMessage}}</p>\n                    <p class=\"btn_set\"><button type=\"button\" @click=\"send\">보내기</button></p>\n                </fieldset>\n            </div>\n            <before-login-footer/>\n        </section>\n    </div>\n</template>\n\n<script>\n\n    import before_login_header from '../../components/header/before_login_header'\n    import before_login_footer from '../../components/footer/before_login_footer'\n\n    export default {\n        data() {\n            return {\n                k: '',\n                email: '',\n                password: '',\n                rePassword: '',\n                error: false,\n                errorMessage: '비밀번호가 일치하지 않습니다.'\n            }\n        },\n        computed: {\n\n        },\n        components: {\n            'before-login-header': before_login_header,\n            'before-login-footer': before_login_footer,\n        },\n        methods: {\n\n            check(keyword) {\n\n                let result = false;\n\n                switch (keyword) {\n\n                    case 'email':\n                        result = this.checkEmail();\n                        break;\n\n                    case 'password':\n                        result = this.checkPassword();\n                        break;\n\n                    case 'rePassword':\n                        result = this.checkRePassword();\n                        break;\n                }\n\n                return result;\n            },\n\n            checkEmail() {\n\n                let email = this.email,\n                    message = \"이메일 주소를 올바르게 입력해주세요.\";\n\n                if (!validEmail(email)) {\n\n                    if (email.trim() == '')\n                        message = '이메일 주소를 입력해주세요.'\n\n                    this.showError(true, message);\n                    return false;\n                }\n\n                return true;\n            },\n\n            checkPassword() {\n\n                let password = this.password.trim(),\n                    message = '';\n\n                if (password == '') {\n\n                    message = '비밀번호를 입력해주세요.';\n                    this.showError(true, message);\n                    return false;\n                }\n\n                if (password.length < 6) {\n\n                    message = '비밀번호는 6자 이상이어야 합니다.';\n                    this.showError(true, message);\n                    return false;\n                }\n\n                return true;\n            },\n\n            checkRePassword() {\n\n                let rePassword = this.rePassword.trim(),\n                    message = '비밀번호 확인을 입력해주세요.';\n\n                if (rePassword == '') {\n\n                    this.showError(true, message);\n                    return false;\n                }\n\n                if (this.password.trim() != this.rePassword.trim()) {\n\n                    message = '비밀번호와 비밀번호 확인이 같지 않습니다.';\n                    this.showError(true, message);\n                    return false;\n                }\n\n                return true;\n            },\n\n            showError(show, message = '') {\n\n                this.error = show;\n                this.errorMessage = message;\n            },\n\n            // 보내기\n            send() {\n\n                if (!this.check('email')) return;\n                if (!this.check('password')) return;\n                if (!this.check('rePassword')) return;\n\n                axios.post(\"/before_login/resetPassword/\", {\n                    k: this.k,\n                    email: this.email,\n                    password: this.password,\n                    rePassword: this.rePassword,\n                }).then(response => {\n\n                    let data = response.data,\n                        message = '';\n\n                    // 기존 비밀 번호와 같아도 됨\n                    if (data.code === 1000) {\n\n                        alert(\"비밀번호가 변경되었습니다. 로그인해주세요.\");\n                        this.$router.push(\"/before_login/login/\");\n\n                    } else {\n\n                        console.log(data);\n\n                        // WRONG_PASSWORD\n                        if (data.code === -2001) {\n\n                            message = \"비밀번호는 6자 이상이어야 합니다.\";\n\n                        // WRONG_RE_PASSWORD\n                        } else if (data.code === -2004)  {\n\n                            message = '비밀번호와 비밀번호 확인이 같지 않습니다.';\n\n                        // NO_AUTHORITY\n                        } else if (data.code === -4001)  {\n\n                            message = \"본인의 이메일 주소를 입력해주세요.\";\n\n                        // NO_EXIST_USER\n                        } else if (data.code === -2014)  {\n\n                            message = \"존재하지 않는 이메일 주소입니다.\";\n\n                        // IMPROPER_MAIL_LINK\n                        } else if (data.code === -7003)  {\n\n                            this.$router.push(\"/pageNotFound\");\n                        }\n\n                        this.showError(true, message);\n                    }\n\n                }).catch(ex => {\n\n                    console.log(ex);\n                });\n            }\n        },\n        created() {\n\n            this.k = this.$route.query.k;\n\n            // 유효한 링크인지 확인\n            axios.post(\"/before_login/checkValidKey/\", {\n                kType: 'password',\n                k: this.k\n            }).then(response => {\n\n                let data = response.data;\n\n                if (data.code === 1000) {\n\n                    this.email = data.email;\n\n                } else {\n\n                    this.$router.push('/pageNotFound');\n                }\n\n            }).catch(ex => {\n\n                console.log(ex);\n            });\n        }\n    }\n\n    function validEmail(email) {\n\n        let regex=/([\\w-.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/;\n\n        return (email != '' && email != 'undefined' && regex.test(email));\n    }\n</script>\n\n<style>\n</style>\n"]}]}