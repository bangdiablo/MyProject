{"remainingRequest":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/src/views/management/policy/policy_popup.vue?vue&type=style&index=0&id=c905d42c&scoped=true&lang=css&","dependencies":[{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/src/views/management/policy/policy_popup.vue","mtime":1578380536984},{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmxheWVyX3BvcHVwIHsKICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsKfQo="},{"version":3,"sources":["policy_popup.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2HA;AACA;AACA","file":"policy_popup.vue","sourceRoot":"src/views/management/policy","sourcesContent":["<template>\n    <!-- 정책이 할당되어 있는 유저 -->\n    <div class=\"layer_popup preview\">\n        <h3>{{ $t('policy.policy_pop.policy_assign_user') }}</h3>\n        <table class=\"board_list\">\n            <caption>{{ $t('policy.policy_pop.policy_assign_user') }}</caption>\n            <colgroup>\n                <col style=\"width:150px\"/>\n                <col style=\"width:200px\"/>\n                <col style=\"width:200px\"/>\n                <col style=\"width:200px\"/>\n                <col style=\"width:180px\"/>\n            </colgroup>\n            <thead>\n            <tr>\n                <th scope=\"col\">{{ $t('policy.policy_pop.user_coputer_name') }}</th>\n                <th scope=\"col\">{{ $t('policy.policy_pop.user_coputer_name') }}</th>\n                <th scope=\"col\">{{ $t('policy.policy_pop.user_coputer_name') }}</th>\n                <th scope=\"col\">{{ $t('policy.policy_pop.user_coputer_name') }}</th>\n                <th scope=\"col\">{{ $t('policy.policy_pop.user_coputer_name') }}</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr v-if=\"usercntList.length == 0\" class=\"board_empty\">\n                <td colspan=\"5\">\n                    <p>DATA EMPTY</p>\n                </td>\n            </tr>\n            <tr v-for=\"(item, index) in usercntList\">\n                <td class=\"left\">{{item.bs_name}}</td>\n                <td class=\"left\">{{item.bs_email}}</td>\n                <td>{{item.bs_gnrlsto | prettyBytes}} / 제한 없이</td>\n                <td>{{item.bs_coldsto}} / 제한 없이</td>\n                <td>0 bytes / 제한 없이</td>\n            </tr>\n            </tbody>\n        </table>\n\n        <div class=\"btn_set\">\n            <button type=\"button\" @click=\"$emit('close')\" class=\"btn_basic cancel\">닫기</button>\n        </div>\n        <button class=\"btn_close\" @click=\"$emit('close')\"><img src=\"@/assets/images/component/btn_popup_close.png\"\n                                                               alt=\"닫기\"/></button>\n    </div>\n</template>\n\n<script>\n    export default {\n        name: \"policy_popup\",\n        props: {\n            bp_id: {\n                type: Number,\n                require: false\n            },\n            bp_div: {\n                type: String,\n                require: false\n            }\n        },\n        data() {\n            return {\n                list: [],\n            }\n        },\n        computed: {\n            usercntList() {\n                return this.list;\n            }\n        },\n        methods: {\n            get_policy_list_usercnt(data) {\n                axios.get('/management/policy_list_usercnt/',\n                    {\n                        params: {\n                            bp_id: data.bp_id,\n                            bp_div: data.bp_div\n                        }\n                    }\n                )\n                    .then((response) => {\n                        console.log(\"get_policy_list_usercnt.data===\", response.data)\n                        this.list = response.data\n                    })\n            },\n        },\n        filters: {\n            prettyBytes: function (num) {\n                console.log(\"num=====\", num)\n                if (typeof num !== 'number' || isNaN(num)) {\n                    throw new TypeError('Expected a number');\n                }\n\n                var exponent;\n                var unit;\n                var neg = num < 0;\n                var units = ['bytes', 'Kbytes', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n                if (neg) {\n                    num = -num;\n                }\n\n                if (num < 1) {\n                    return (neg ? '-' : '') + num + ' B';\n                }\n\n                exponent = Math.min(Math.floor(Math.log(num) / Math.log(1000)), units.length - 1);\n                num = (num / Math.pow(1000, exponent)).toFixed(2) * 1;\n                unit = units[exponent];\n\n                return (neg ? '-' : '') + num + ' ' + unit;\n            }\n        },\n        created() {\n            let data = {\n                bp_id: this.bp_id,\n                bp_div: this.bp_div\n            }\n            this.get_policy_list_usercnt(data)\n        },\n    }\n</script>\n\n<style scoped>\n    .layer_popup {\n        display: inline-block;\n    }\n</style>\n"]}]}