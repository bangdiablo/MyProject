{"remainingRequest":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/src/views/main/before_login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/src/views/main/before_login.vue","mtime":1576561387433},{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["before_login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA","file":"before_login.vue","sourceRoot":"src/views/main","sourcesContent":["<!--    메인 표시되는 화면은 폴더명 == 파일명으로 사용바랍니다.            -->\n<template>\n    <div id=\"member_container\">\n        <section id=\"member_info\">\n            <before-login-header/>\n            <div class=\"member_form\">\n                <h2>{{$t('before_login.button_login')}}</h2>\n                <div class=\"visual\">\n                    <img src=\"@/assets/images/member/visual_login.png\" alt=\"\"/>\n                </div>\n                <fieldset>\n                    <legend>로그인정보 입력</legend>\n                    <p class=\"field\">\n                        <label for=\"memberId\">{{ $t('before_login.input_email') }}</label>\n                        <input type=\"text\" :placeholder=\"$t('before_login.input_email')\" id=\"memberId\" :class=\"{'has-value':valid.email['has-value'], 'has-error':valid.email['has-error']}\" v-model=\"email\" @change=\"checkEmail\"/>\n                        <span class=\"input-image green\" v-if=\"validEmail\">{{ $t('common.comment.valid') }}</span>\n                    </p>\n                    <div class=\"input-error\">\n                        <span class=\"red\" ref=\"commentToEmail\"></span>\n                    </div>\n\n                    <p class=\"field\">\n                        <label for=\"memberPw\">{{ $t('before_login.input_password') }}</label>\n                        <input type=\"password\" :placeholder=\"$t('before_login.input_password')\" id=\"memberPw\" :class=\"{'has-value':valid.password['has-value'], 'has-error':valid.password['has-error']}\" v-model=\"password\" @keyup.enter=\"onLogin\" @change=\"checkPassword\" />\n                        <span class=\"input-image green\" v-if=\"validPassword\">{{ $t('common.comment.valid') }}</span>\n                    </p>\n                    <div class=\"input-error\">\n                        <span class=\"red\" ref=\"commentToPassword\"></span>\n                    </div>\n\n                    <p class=\"save_login_info\">\n                        <label><input type=\"checkbox\" v-model=\"remember\"/>{{ $t('before_login.checkbox_memory') }}</label>\n                    </p>\n                    <p class=\"error_msg red\" v-if=\"invalidEmailOrPassword\">{{ failLoginMessage }}</p>\n                    <p class=\"btn_set\">\n                        <button type=\"button\" @click=\"onLogin\" ref=\"btnLogin\">{{$t('before_login.button_login')}}\n                        </button>\n                    </p>\n                    <p class=\"find_password\">\n                        {{ $t('before_login.msg_password') }}<router-link to=\"/find_password\">{{ $t('before_login.msg_click') }}</router-link>\n                    </p>\n                </fieldset>\n            </div>\n            <before-login-footer/>\n        </section>\n    </div>\n</template>\n\n<script>\n\n    import constants from '../../plugins/constants'\n    import before_login_header from '../../components/header/before_login_header'\n    import before_login_footer from '../../components/footer/before_login_footer'\n    import sjcl from 'sjcl'\n\n    export default {\n        data() {\n            return {\n                email: '',\n                password: '',\n                remember: false,\n                language: 'KO',\n                valid : {\n                    email: {\n                        'has-value': false,\n                        'has-error': false\n                    },\n                    password: {\n                        'has-value': false,\n                        'has-error': false\n                    }\n                },\n                invalidEmailOrPassword : false,\n                encryptPassword: 'legaltech',\n                failLoginMessage : this.$t('common.comment.invalidEmail')\n            }\n        },\n        computed: {\n            validEmail () {\n\n                return this.valid.email['has-value'] && !this.valid.email['has-error'];\n            },\n            validPassword () {\n\n              return this.valid.password['has-value'] && !this.valid.password['has-error'];\n          }\n        },\n        components: {\n            'before-login-header': before_login_header,\n            'before-login-footer': before_login_footer,\n        },\n        methods: {\n            onLogin() {\n\n                 if (this.validEmail && this.validPassword) {\n\n                    // 기억하기 시, 쿠키 생성\n                    if (this.remember) {\n\n                        this.$cookies.set(\"cvv_t\", sjcl.encrypt(this.encryptPassword, this.email), Infinity);\n\n                    } else {\n\n                        this.$cookies.remove(\"cvv_t\");\n                    }\n\n                    // 로그인 시도\n                    let qs = require('qs');\n\n                    axios.post('/main/login/',\n                        qs.stringify({\n                        'email': this.email,\n                        'password': this.password,\n                        'language': this.language\n\n                        })).then(result => {\n                        // request.getResponseHeader('some_header')\n\n                            let data = result.data;\n\n                            // 성공 시\n                            if (data.code == 1000) {\n\n                                this.$store.dispatch('main/setAdmin', data.isAdmin);    // 관리자 여부 설정\n                                this.$router.push('/');                                 // 메인화면 이동\n\n                            // 실패 시\n                            } else {\n\n                                // 비활성화 유저 (-2002)\n                                if (data.code == -2002) {\n\n                                    this.failLoginMessage = this.$t('common.comment.failToLogin_inactive');\n\n                                } else {\n\n                                    this.failLoginMessage = this.$t('common.comment.failToLogin');\n                                }\n\n                                this.invalidEmailOrPassword = true;\n                            }\n\n                         }).catch(ex => {\n                             console.log(ex);\n                    });\n                }\n            },\n\n            // check email adress\n            checkEmail() {\n\n                let comment = \"\";\n\n                // email이 비어있는지 확인\n                if (this.email == \"\") {\n\n                    comment = this.$t('common.comment.essential');\n                    this.valid.email[\"has-error\"] = true;\n\n                // email이 유효한지 확인\n                } else if (!checkEmail(this.email)) {\n\n                    comment = this.$t('common.comment.invalidEmail');\n                    this.valid.email[\"has-error\"] = true;\n\n                } else {\n\n                    this.valid.email[\"has-error\"] = false;\n                }\n\n                this.valid.email[\"has-value\"] = true;\n                this.$refs.commentToEmail.innerHTML = \"\";\n\n                if (this.valid.email[\"has-error\"]) {\n\n                    this.$refs.commentToEmail.innerHTML = comment;\n                }\n            },\n\n            // check password\n            checkPassword() {\n\n                let comment = \"\";\n\n                // password가 비어있는지 확인\n                if (this.password == \"\") {\n\n                    comment = this.$t('common.comment.essential');\n                    this.valid.password[\"has-error\"] = true;\n\n                // password가 6자리 이상인지 확인\n                } else if (this.password.length < 6) {\n\n                    comment = this.$t('common.comment.tooShortPassword');\n                    this.valid.password[\"has-error\"] = true;\n\n                } else {\n\n                    this.valid.password[\"has-error\"] = false;\n                }\n\n                this.valid.password[\"has-value\"] = true;\n                this.$refs.commentToPassword.innerHTML = \"\";\n\n                if (this.valid.password[\"has-error\"]) {\n\n                    this.$refs.commentToPassword.innerHTML = comment;\n                }\n            }\n        },\n        mounted() {\n\n            // TEST 계정\n            if (constants.TEST) {\n                this.email = 'test02@test.com';\n                this.password = '1234';\n            }\n\n            // if (this.email == '' || this.password == '') {\n            //     this.$refs.btnLogin.style.backgroundColor = '#585858';\n            //     this.$refs.btnLogin.disabled = true;\n            // } else {\n            //     this.$refs.btnLogin.style.backgroundColor = '#53A9E4';\n            //     this.$refs.btnLogin.disabled = false;\n            // }\n\n            console.log(this.$i18n.locale)\n\n            // let ciphertext = sjcl.encrypt(\"legaltech\", \"Hello World!\")\n\n            // console.log(ciphertext)\n            // console.log(plaintext)\n\n            // 이메일, 기억하기 세팅\n            let cvv_t = this.$cookies.get(\"cvv_t\");\n\n            if (cvv_t != undefined) {\n\n                this.email = sjcl.decrypt(this.encryptPassword, JSON.stringify(cvv_t));\n                this.remember = true;\n                this.checkEmail();\n            }\n        }\n    }\n\n    function checkEmail(email) {\n\n        let regex=/([\\w-.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/;\n\n        return (email != '' && email != 'undefined' && regex.test(email));\n    }\n</script>\n<style scoped>\n\n</style>\n"]}]}