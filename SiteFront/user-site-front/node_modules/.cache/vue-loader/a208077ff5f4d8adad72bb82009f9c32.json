{"remainingRequest":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/src/views/management/user_server/csv_invitation.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/src/views/management/user_server/csv_invitation.vue","mtime":1578875064844},{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7c2F2ZUFzfSBmcm9tICdmaWxlLXNhdmVyJwoKZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogImNzdl9pbnZpdGF0aW9uIiwKICAgIGRhdGEoKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgICBzaG93OiB7CiAgICAgICAgICAgICAgbW9kYWw6IGZhbHNlLAogICAgICAgICAgICAgIGZhaWxGaWxlVXBsb2FkTGF5ZXI6IGZhbHNlLAogICAgICAgICAgICAgIHN1Y2Nlc3NGaWxlVXBsb2FkTGF5ZXI6IGZhbHNlCiAgICAgICAgICB9LAogICAgICAgICAgZmlsZXM6IFtdCiAgICAgIH0KICAgIH0sCiAgICBtZXRob2RzOiB7CgogICAgICAgIC8vIGNzdiDsg5jtlIzrs7TquLAKICAgICAgICBzaG93VGhlU2FtcGxlKCkgewoKICAgICAgICAgICAgLy8gVE9ETyDtjJ3sl4Ug7IOd7ISxCiAgICAgICAgfSwKCiAgICAgICAgLy8gY3N2IOyDmO2UjCDri6TsmrTroZzrk5wKICAgICAgICBkb3dubG9hZFRoZVNhbXBsZSgpIHsKCiAgICAgICAgICAgIHRoaXMuc2hvdy5zdWNjZXNzRmlsZVVwbG9hZExheWVyID0gdHJ1ZTsKICAgICAgICAgICAgLy8gc2F2ZUFzKCdodHRwOi8vMTI3LjAuMC4xOjgwODAvQWRkTXVsdGlwbGVVc2VyLmNzdicsICdBZGRNdWx0aXBsZVVzZXIuY3N2Jyk7CiAgICAgICAgfSwKCiAgICAgICAgLy8gbGF5ZXIg64ur6riwCiAgICAgICAgY2xvc2VMYXllcigpIHsKCiAgICAgICAgICAgIGxldCBzaG93ID0gdGhpcy5zaG93OwoKICAgICAgICAgICAgZm9yIChsZXQgcHJvcCBpbiBzaG93KSB7CgogICAgICAgICAgICAgICAgc2hvd1twcm9wXSA9IGZhbHNlOwogICAgICAgICAgICB9CiAgICAgICAgfSwKCiAgICAgICAgY2hlY2tGaWxlcyhmaWxlcykgewoKICAgICAgICAgICAgbGV0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCksCiAgICAgICAgICAgICAgICBpbmRleCA9IDAsCiAgICAgICAgICAgICAgICB2YWxpZCA9IHRydWUsCiAgICAgICAgICAgICAgICB0aGF0ID0gdGhpcywKICAgICAgICAgICAgICAgIGZpbGUsCiAgICAgICAgICAgICAgICBpOwoKICAgICAgICAgICAgLyoKICAgICAgICAgICAgICog65Oc66Gt64uk7Jq0IOuQnCDtjIzsnbzsnbQg7Jis67CU66W4IENTVu2MjOydvOyduOyngCDqsoDsgqwKICAgICAgICAgICAgICogMS4gQ1NWIO2MjOydvOyduOyngCDqsoDsgqwKICAgICAgICAgICAgICogMi4gQ1NWIOuCtOyaqSDtmJXsi53snbQg66ee64qU7KeAIOqygOyCrAogICAgICAgICAgICAgKi8KICAgICAgICAgICAgLy8gMQogICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgZmlsZXMubGVuZ3RoOyBpKyspIHsKCiAgICAgICAgICAgICAgICBsZXQgZmlsZSA9IGZpbGVzW2ldOwoKICAgICAgICAgICAgICAgIGlmIChmaWxlLm5hbWUubGFzdEluZGV4T2YoIi4iKSA9PSAtMSB8fCBmaWxlLm5hbWUuc2xpY2UoZmlsZS5uYW1lLmxhc3RJbmRleE9mKCIuIikgKyAxKS50b0xvd2VyQ2FzZSgpICE9PSAnY3N2JykgewoKICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3cuZmFpbEZpbGVVcGxvYWRMYXllciA9IHRydWU7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93Lm1vZGFsID0gdHJ1ZTsKICAgICAgICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmIChmaWxlcy5sZW5ndGggPT0gMCkgcmV0dXJuOwoKICAgICAgICAgICAgcmVhZGVyLnJlYWRBc0JpbmFyeVN0cmluZyhmaWxlc1tpbmRleF0pOwoKICAgICAgICAgICAgcmVhZGVyLm9ubG9hZCA9IGZ1bmN0aW9uKGUpIHsKCiAgICAgICAgICAgICAgICBsZXQgZGF0YSA9IGUudGFyZ2V0LnJlc3VsdDsKCiAgICAgICAgICAgICAgICBsZXQgZGF0YUFyciA9IGRhdGEuc3BsaXQoIlxyXG4iKTsKCiAgICAgICAgICAgICAgICBmb3IgKGxldCBqID0gMDsgaiA8IGRhdGFBcnIubGVuZ3RoOyBqKyspIHsKCiAgICAgICAgICAgICAgICAgICAgaWYgKGogPT09IDApIGNvbnRpbnVlOwoKICAgICAgICAgICAgICAgICAgICBsZXQgaW1wbERhdGEgPSBkYXRhQXJyW2pdOwoKICAgICAgICAgICAgICAgICAgICBpZiAoaW1wbERhdGEgPT09ICcnKSBicmVhazsKCiAgICAgICAgICAgICAgICAgICAgbGV0IGltcGxEYXRhQXJyID0gaW1wbERhdGEuc3BsaXQoIiwiKTsKCiAgICAgICAgICAgICAgICAgICAgbGV0IGVtYWlsID0gaW1wbERhdGFBcnJbMl07CgogICAgICAgICAgICAgICAgICAgIGlmICghdmFsaWRFbWFpbChlbWFpbCkpIHsKCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvdy5mYWlsRmlsZVVwbG9hZExheWVyID0gdHJ1ZTsKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93Lm1vZGFsID0gdHJ1ZTsKICAgICAgICAgICAgICAgICAgICAgICAgdmFsaWQgPSBmYWxzZTsKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHJlYWRlci5vbmxvYWRlbmQgPSBmdW5jdGlvbiAoZSkgewoKICAgICAgICAgICAgICAgIGlmICh2YWxpZCkgewoKICAgICAgICAgICAgICAgICAgICBpZiAoKytpbmRleCAhPSBmaWxlcy5sZW5ndGgpIHsKCiAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRlci5yZWFkQXNCaW5hcnlTdHJpbmcoZmlsZXNbaW5kZXhdKTsKCiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKCiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCBmaWxlcy5sZW5ndGg7IGkrKykgewoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpbGUgPSBmaWxlc1tpXTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpbGUuaWQgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkqIDEwMDAwKSArICJfIiArIG5ldyBEYXRlKCkuZ2V0VGltZSgpICsgIl8iICsgZmlsZS5uYW1lOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhhdC5maWxlcy5wdXNoKGZpbGUpOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0sCgogICAgICAgIGRlbGV0ZUZpbGUoZmlsZUlkKSB7CgogICAgICAgICAgICBsZXQgZmlsZXMgPSB0aGlzLmZpbGVzLAogICAgICAgICAgICAgICAgZmlsZTsKCiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZmlsZXMubGVuZ3RoOyBpKyspIHsKCiAgICAgICAgICAgICAgICBmaWxlID0gZmlsZXNbaV07CgogICAgICAgICAgICAgICAgaWYgKGZpbGVJZCA9PT0gZmlsZS5pZCkKICAgICAgICAgICAgICAgICAgICB0aGlzLmZpbGVzLnNwbGljZShpLCAxKTsKICAgICAgICAgICAgfQoKICAgICAgICB9LAoKICAgICAgICAvLyDstpTqsIAKICAgICAgICByZWdpc3RNZW1iZXJzKCkgewoKICAgICAgICAgICAgbGV0IGZpbGVzID0gdGhpcy5maWxlczsKCiAgICAgICAgICAgIC8vIOyXheuhnOuTnO2VoCDtjIzsnbzsnbQg7J6I64qU7KeAIO2ZleyduCDtm4QsIOynhO2WiQogICAgICAgICAgICBpZiAodGhpcy5maWxlcy5sZW5ndGggPT09IDApIHJldHVybjsKCiAgICAgICAgICAgIGNvbnN0IGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKCk7CiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZmlsZXMubGVuZ3RoOyBpKyspIHsKCiAgICAgICAgICAgICAgICBmb3JtRGF0YS5hcHBlbmQoJ2ZpbGVzWycgKyBpICsgJ10nLCB0aGlzLmZpbGVzW2ldLCB0aGlzLmZpbGVzW2ldLmlkKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgYXhpb3MucG9zdCgnL21hbmFnZW1lbnQvcmVnaXN0TWVtYmVycy8nLCBmb3JtRGF0YSwgewogICAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnbXVsdGlwYXJ0L2Zvcm0tZGF0YScKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSkudGhlbihyZXN1bHQgPT4gewoKICAgICAgICAgICAgICAgIGxldCBkYXRhID0gcmVzdWx0LmRhdGE7CgogICAgICAgICAgICAgICAgaWYgKGRhdGEuY29kZSA9PSAxMDAwKSB7CgogICAgICAgICAgICAgICAgICAgIGFsZXJ0KCfsnKDsoIAg65Ox66Gd7J20IOyZhOujjOuQmOyXiOyKteuLiOuLpC4nKTsKICAgICAgICAgICAgICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCgiL21hbmFnZW1lbnQvdXNlcl9zZXJ2ZXIiKTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgIH0pLmNhdGNoKGV4ID0+IHsKCiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhleCk7CiAgICAgICAgICAgIH0pOwogICAgICAgIH0KCiAgICB9LAogICAgbW91bnRlZCgpIHsKCiAgICAgICAgbGV0ICRkcm9wWm9uZSA9ICQodGhpcy4kcmVmcy5kcmFnQW5kRHJvcCksCiAgICAgICAgICAgICRmaWxlID0gJCh0aGlzLiRyZWZzLmZpbGUpLAogICAgICAgICAgICB0aGF0ID0gdGhpczsKCiAgICAgICAgLy9EcmFn6riw64qlCiAgICAgICAgJGRyb3Bab25lLm9uKCdkcmFnZW50ZXInLGZ1bmN0aW9uKGUpewoKICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTsKICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpOwoKICAgICAgICAgICAgLy8g65Oc66Gt64uk7Jq0IOyYgeyXrSBjc3MKICAgICAgICAgICAgJGRyb3Bab25lLmNzcygnYmFja2dyb3VuZC1jb2xvcicsJyNFM0YyRkMnKTsKCiAgICAgICAgfSkub24oJ2RyYWdsZWF2ZScsZnVuY3Rpb24oZSl7CgogICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpOwogICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7CgogICAgICAgICAgICAvLyDrk5zroa3ri6TsmrQg7JiB7JetIGNzcwogICAgICAgICAgICAkZHJvcFpvbmUuY3NzKCdiYWNrZ3JvdW5kLWNvbG9yJywnI0ZGRkZGRicpOwoKICAgICAgICB9KS5vbignZHJhZ292ZXInLGZ1bmN0aW9uKGUpewoKICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTsKICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpOwoKICAgICAgICAgICAgLy8g65Oc66Gt64uk7Jq0IOyYgeyXrSBjc3MKICAgICAgICAgICAgJGRyb3Bab25lLmNzcygnYmFja2dyb3VuZC1jb2xvcicsJyNFM0YyRkMnKTsKCiAgICAgICAgfSkub24oJ2Ryb3AnLGZ1bmN0aW9uKGUpewoKICAgICAgICAgICAgbGV0IGZpbGVzID0gZS5vcmlnaW5hbEV2ZW50LmRhdGFUcmFuc2Zlci5maWxlczsKCiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKGZpbGVzKQoKICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpOwoKICAgICAgICAgICAgLy8g65Oc66Gt64uk7Jq0IOyYgeyXrSBjc3MKICAgICAgICAgICAgJGRyb3Bab25lLmNzcygnYmFja2dyb3VuZC1jb2xvcicsJyNGRkZGRkYnKTsKCiAgICAgICAgICAgIC8vIOyyqOu2gO2VnCDtjIzsnbwg7LK07YGsICYg7LKo67aAIO2MjOydvCDtkZzsi5wKICAgICAgICAgICAgdGhhdC5jaGVja0ZpbGVzKGZpbGVzKTsKCiAgICAgICAgfSkub24oJ2NsaWNrJywgZnVuY3Rpb24oZSl7CgogICAgICAgICAgICAkZmlsZS5jbGljaygpOwogICAgICAgIH0pOwoKICAgICAgICAvLyDtjIzsnbwg7ISg7YOdIOyLnAogICAgICAgICRmaWxlLm9uKCdjaGFuZ2UnLCBmdW5jdGlvbihlKXsKCiAgICAgICAgICAgIGxldCBmaWxlcyA9IGUudGFyZ2V0LmZpbGVzOwoKICAgICAgICAgICAgLy8g7LKo67aA7ZWcIO2MjOydvCDssrTtgawgJiDssqjrtoAg7YyM7J28IO2RnOyLnAogICAgICAgICAgICB0aGF0LmNoZWNrRmlsZXMoZmlsZXMpOwogICAgICAgIH0pOwogICAgfQp9CgpmdW5jdGlvbiB2YWxpZEVtYWlsKGVtYWlsKSB7CgogICAgbGV0IHJlZ2V4PS8oW1x3LS5dKylAKChcW1swLTldezEsM31cLlswLTldezEsM31cLlswLTldezEsM31cLil8KChbXHctXStcLikrKSkoW2EtekEtWl17Miw0fXxbMC05XXsxLDN9KShcXT8pJC87CgogICAgcmV0dXJuIChlbWFpbCAhPSAnJyAmJiBlbWFpbCAhPSAndW5kZWZpbmVkJyAmJiByZWdleC50ZXN0KGVtYWlsKSk7Cn0KCmZ1bmN0aW9uIGRvd25sb2FkKHN0ckRhdGEsIHN0ckZpbGVOYW1lLCBzdHJNaW1lVHlwZSkgewogICAgbGV0IEQgPSBkb2N1bWVudCwKICAgICAgICBhID0gRC5jcmVhdGVFbGVtZW50KCJhIik7CiAgICAgICAgc3RyTWltZVR5cGU9IHN0ck1pbWVUeXBlIHx8ICJhcHBsaWNhdGlvbi9vY3RldC1zdHJlYW0iOwoKCiAgICBpZiAobmF2aWdhdG9yLm1zU2F2ZUJsb2IpIHsgLy8gSUUxMAogICAgICAgIHJldHVybiBuYXZpZ2F0b3IubXNTYXZlQmxvYihuZXcgQmxvYihbc3RyRGF0YV0sIHt0eXBlOiBzdHJNaW1lVHlwZX0pLCBzdHJGaWxlTmFtZSk7CiAgICB9IC8qIGVuZCBpZihuYXZpZ2F0b3IubXNTYXZlQmxvYikgKi8KCgogICAgaWYgKCdkb3dubG9hZCcgaW4gYSkgeyAvL2h0bWw1IEFbZG93bmxvYWRdCiAgICAgICAgYS5ocmVmID0gImRhdGE6IiArIHN0ck1pbWVUeXBlICsgIiwiICsgZW5jb2RlVVJJQ29tcG9uZW50KHN0ckRhdGEpOwogICAgICAgIGEuc2V0QXR0cmlidXRlKCJkb3dubG9hZCIsIHN0ckZpbGVOYW1lKTsKICAgICAgICBhLmlubmVySFRNTCA9ICJkb3dubG9hZGluZy4uLiI7CiAgICAgICAgRC5ib2R5LmFwcGVuZENoaWxkKGEpOwogICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7CiAgICAgICAgICAgIGEuY2xpY2soKTsKICAgICAgICAgICAgRC5ib2R5LnJlbW92ZUNoaWxkKGEpOwogICAgICAgIH0sIDY2KTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0gLyogZW5kIGlmKCdkb3dubG9hZCcgaW4gYSkgKi8KCgogICAgLy9kbyBpZnJhbWUgZGF0YVVSTCBkb3dubG9hZCAob2xkIGNoK0ZGKToKICAgIGxldCBmID0gRC5jcmVhdGVFbGVtZW50KCJpZnJhbWUiKTsKICAgIEQuYm9keS5hcHBlbmRDaGlsZChmKTsKICAgIGYuc3JjID0gImRhdGE6IiArICBzdHJNaW1lVHlwZSAgICsgIiwiICsgZW5jb2RlVVJJQ29tcG9uZW50KHN0ckRhdGEpOwoKICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7CiAgICAgICAgRC5ib2R5LnJlbW92ZUNoaWxkKGYpOwogICAgfSwgMzMzKTsKICAgIHJldHVybiB0cnVlOwp9IC8qIGVuZCBkb3dubG9hZCgpICovCg=="},{"version":3,"sources":["csv_invitation.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"csv_invitation.vue","sourceRoot":"src/views/management/user_server","sourcesContent":["<template>\n    <article id=\"contents\" class=\"sub\">\n\t\t<location/>\n\n\t\t<div class=\"content\">\n\t\t\t<p class=\"intro_guide\">샘플 CSV 파일을 다운로드하고 편집하세요.</p>\n\t\t\t<table class=\"board_view\">\n\t\t\t\t<caption>수동으로 초대</caption>\n\t\t\t\t<colgroup>\n\t\t\t\t\t<col style=\"width:180px\" />\n\t\t\t\t\t<col style=\"width:*\" />\n\t\t\t\t</colgroup>\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th scope=\"row\">csv 파일 업로드</th>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<button type=\"button\" class=\"btn_basic\" @click=\"showTheSample\"><img src=\"@/assets/images/sub/ico_csv.png\" alt=\"\" class=\"ico\" />csv 샘플보기</button>\n\t\t\t\t\t\t\t<button type=\"button\" class=\"btn_basic\" @click=\"downloadTheSample\"><img src=\"@/assets/images/sub/ico_csv_download.png\" alt=\"\" class=\"ico\" />csv 샘플 다운로드</button>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td colspan=\"2\" style=\"height:400px;\">\n                            <div class=\"dragAndDrop\" ref=\"dragAndDrop\">\n                                <div class=\"text\">파일 드래그 엔 드랍 영역</div>\n                            </div>\n                            <input type=\"file\" class=\"hide\" ref=\"file\" multiple>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n<!--                    <tr v-show=\"files.length\">-->\n<!--                        <td colspan=\"2\" >-->\n<!--                            <div v-for=\"file in files\">-->\n<!--                                {{file.name}} <span class=\"pointer\" @click=\"deleteFile(file.id)\">X</span>-->\n<!--                            </div>-->\n<!--                        </td>-->\n<!--                    </tr>-->\n\t\t\t\t</tbody>\n\t\t\t</table>\n            <div class=\"board_btn_set\">\n                <button type=\"button\" class=\"btn_basic submit\" @click=\"registMembers\">추가</button>\n                <router-link to=\"/management/user_server\"><button type=\"button\" class=\"btn_basic cancel\">취소</button></router-link>\n            </div>\n\t\t\t<ul class=\"desc_list\">\n\t\t\t\t<li>AOSBOX AI plus에 사용자를 초청하려면 <router-link to=\"/management/user_server/mail_invitation\">메일로 초대</router-link>를 사용합니다.</li>\n\t\t\t\t<li>수동으로 유저를 추가하려면 <router-link to=\"/management/user_server/manual_invitation\">수동으로 추가</router-link>를 사용합니다.</li>\n\t\t\t</ul>\n\t\t</div>\n\n        <!-- 가져오기 - 실패 -->\n        <div class=\"layer_popup\" v-show=\"show.failFileUploadLayer\">\n            <h3>가져오기</h3>\n            <div class=\"msg warning\">\n                <h4><img src=\"@/assets/images/component/ico_lp_warning.png\" alt=\"가져오기\" /></h4>\n                <p>\n                    <strong>\n                        파일의 형식이 맞지 않습니다.<br />\n                        올바른 CSV 파일의 형식을 선택하십시오.\n                    </strong>\n                </p>\n            </div>\n\n            <div class=\"btn_set\">\n                <button type=\"button\" class=\"btn_basic cancel\" @click=\"closeLayer\">닫기</button>\n            </div>\n            <button class=\"btn_close\"><img src=\"@/assets/images/component/btn_popup_close.png\" alt=\"닫기\" @click=\"closeLayer\" /></button>\n        </div>\n\n        <!-- 가져오기 - 성공 -->\n        <div class=\"layer_popup\" v-show=\"show.successFileUploadLayer\">\n            <h3>가져오기</h3>\n            <div class=\"msg success\">\n                <h4><img src=\"@/assets/images/component/ico_lp_success.png\" alt=\"가져오기\" /></h4>\n                <p>\n                    <strong>가져오기에 성공하였습니다.</strong>\n                </p>\n            </div>\n\n            <div class=\"btn_set\">\n                <button type=\"button\" class=\"btn_basic cancel\" @click=\"closeLayer\">닫기</button>\n            </div>\n            <button class=\"btn_close\"><img src=\"@/assets/images/component/btn_popup_close.png\" alt=\"닫기\" @click=\"closeLayer\" /></button>\n        </div>\n\n        <!-- 모달 배경 -->\n        <div class=\"modal_bg\" v-show=\"show.modal\"></div>\n\t</article>\n</template>\n\n<script>\n    import {saveAs} from 'file-saver'\n\n    export default {\n        name: \"csv_invitation\",\n        data() {\n          return {\n              show: {\n                  modal: false,\n                  failFileUploadLayer: false,\n                  successFileUploadLayer: false\n              },\n              files: []\n          }\n        },\n        methods: {\n\n            // csv 샘플보기\n            showTheSample() {\n\n                // TODO 팝업 생성\n            },\n\n            // csv 샘플 다운로드\n            downloadTheSample() {\n\n                this.show.successFileUploadLayer = true;\n                // saveAs('http://127.0.0.1:8080/AddMultipleUser.csv', 'AddMultipleUser.csv');\n            },\n\n            // layer 닫기\n            closeLayer() {\n\n                let show = this.show;\n\n                for (let prop in show) {\n\n                    show[prop] = false;\n                }\n            },\n\n            checkFiles(files) {\n\n                let reader = new FileReader(),\n                    index = 0,\n                    valid = true,\n                    that = this,\n                    file,\n                    i;\n\n                /*\n                 * 드롭다운 된 파일이 올바른 CSV파일인지 검사\n                 * 1. CSV 파일인지 검사\n                 * 2. CSV 내용 형식이 맞는지 검사\n                 */\n                // 1\n                for (i = 0; i < files.length; i++) {\n\n                    let file = files[i];\n\n                    if (file.name.lastIndexOf(\".\") == -1 || file.name.slice(file.name.lastIndexOf(\".\") + 1).toLowerCase() !== 'csv') {\n\n                        this.show.failFileUploadLayer = true;\n                        this.show.modal = true;\n                        return;\n                    }\n                }\n\n                if (files.length == 0) return;\n\n                reader.readAsBinaryString(files[index]);\n\n                reader.onload = function(e) {\n\n                    let data = e.target.result;\n\n                    let dataArr = data.split(\"\\r\\n\");\n\n                    for (let j = 0; j < dataArr.length; j++) {\n\n                        if (j === 0) continue;\n\n                        let implData = dataArr[j];\n\n                        if (implData === '') break;\n\n                        let implDataArr = implData.split(\",\");\n\n                        let email = implDataArr[2];\n\n                        if (!validEmail(email)) {\n\n                            this.show.failFileUploadLayer = true;\n                            this.show.modal = true;\n                            valid = false;\n                            return false;\n                        }\n\n                    }\n                }\n\n                reader.onloadend = function (e) {\n\n                    if (valid) {\n\n                        if (++index != files.length) {\n\n                            reader.readAsBinaryString(files[index]);\n\n                        } else {\n\n                            for (i = 0; i < files.length; i++) {\n\n                                file = files[i];\n                                file.id = Math.floor(Math.random()* 10000) + \"_\" + new Date().getTime() + \"_\" + file.name;\n                                that.files.push(file);\n                            }\n                        }\n\n                    }\n                }\n            },\n\n            deleteFile(fileId) {\n\n                let files = this.files,\n                    file;\n\n                for (let i = 0; i < files.length; i++) {\n\n                    file = files[i];\n\n                    if (fileId === file.id)\n                        this.files.splice(i, 1);\n                }\n\n            },\n\n            // 추가\n            registMembers() {\n\n                let files = this.files;\n\n                // 업로드할 파일이 있는지 확인 후, 진행\n                if (this.files.length === 0) return;\n\n                const formData = new FormData();\n                for (let i = 0; i < files.length; i++) {\n\n                    formData.append('files[' + i + ']', this.files[i], this.files[i].id);\n                }\n\n                axios.post('/management/registMembers/', formData, {\n                    headers: {\n                        'Content-Type': 'multipart/form-data'\n                    }\n                }).then(result => {\n\n                    let data = result.data;\n\n                    if (data.code == 1000) {\n\n                        alert('유저 등록이 완료되었습니다.');\n                        this.$router.push(\"/management/user_server\");\n                    }\n\n                }).catch(ex => {\n\n                    console.log(ex);\n                });\n            }\n\n        },\n        mounted() {\n\n            let $dropZone = $(this.$refs.dragAndDrop),\n                $file = $(this.$refs.file),\n                that = this;\n\n            //Drag기능\n            $dropZone.on('dragenter',function(e){\n\n                e.stopPropagation();\n                e.preventDefault();\n\n                // 드롭다운 영역 css\n                $dropZone.css('background-color','#E3F2FC');\n\n            }).on('dragleave',function(e){\n\n                e.stopPropagation();\n                e.preventDefault();\n\n                // 드롭다운 영역 css\n                $dropZone.css('background-color','#FFFFFF');\n\n            }).on('dragover',function(e){\n\n                e.stopPropagation();\n                e.preventDefault();\n\n                // 드롭다운 영역 css\n                $dropZone.css('background-color','#E3F2FC');\n\n            }).on('drop',function(e){\n\n                let files = e.originalEvent.dataTransfer.files;\n\n                // console.log(files)\n\n                e.preventDefault();\n\n                // 드롭다운 영역 css\n                $dropZone.css('background-color','#FFFFFF');\n\n                // 첨부한 파일 체크 & 첨부 파일 표시\n                that.checkFiles(files);\n\n            }).on('click', function(e){\n\n                $file.click();\n            });\n\n            // 파일 선택 시\n            $file.on('change', function(e){\n\n                let files = e.target.files;\n\n                // 첨부한 파일 체크 & 첨부 파일 표시\n                that.checkFiles(files);\n            });\n        }\n    }\n\n    function validEmail(email) {\n\n        let regex=/([\\w-.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/;\n\n        return (email != '' && email != 'undefined' && regex.test(email));\n    }\n\n    function download(strData, strFileName, strMimeType) {\n        let D = document,\n            a = D.createElement(\"a\");\n            strMimeType= strMimeType || \"application/octet-stream\";\n\n\n        if (navigator.msSaveBlob) { // IE10\n            return navigator.msSaveBlob(new Blob([strData], {type: strMimeType}), strFileName);\n        } /* end if(navigator.msSaveBlob) */\n\n\n        if ('download' in a) { //html5 A[download]\n            a.href = \"data:\" + strMimeType + \",\" + encodeURIComponent(strData);\n            a.setAttribute(\"download\", strFileName);\n            a.innerHTML = \"downloading...\";\n            D.body.appendChild(a);\n            setTimeout(function() {\n                a.click();\n                D.body.removeChild(a);\n            }, 66);\n            return true;\n        } /* end if('download' in a) */\n\n\n        //do iframe dataURL download (old ch+FF):\n        let f = D.createElement(\"iframe\");\n        D.body.appendChild(f);\n        f.src = \"data:\" +  strMimeType   + \",\" + encodeURIComponent(strData);\n\n        setTimeout(function() {\n            D.body.removeChild(f);\n        }, 333);\n        return true;\n    } /* end download() */\n</script>\n\n<style scoped>\n.board_btn_set {\n    text-align: left;\n}\n.dragAndDrop {\n    display: table;\n    height: 100%;\n    width: 100%;\n    text-align: center;\n    border: gray solid 1px;\n}\n.dragAndDrop .text {\n    display: table-cell;\n    vertical-align: middle;\n}\n.hide {\n    display: none;\n}\n.layer_popup, .modal_bg {\n    display: block;\n}\n</style>\n"]}]}