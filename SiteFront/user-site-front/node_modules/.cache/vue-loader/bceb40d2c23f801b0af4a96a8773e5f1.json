{"remainingRequest":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/src/views/before_login/FindPassword.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/src/views/before_login/FindPassword.vue","mtime":1583887584468},{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7Y29tbW9uTWV0aG9kc01peGlufSBmcm9tICcuLi8uLi9jb21tb24vY29tbW9uTWV0aG9kc01peGluJwppbXBvcnQgYmVmb3JlX2xvZ2luX2hlYWRlciBmcm9tICcuLi8uLi9jb21wb25lbnRzL2hlYWRlci9iZWZvcmVfbG9naW5faGVhZGVyJwppbXBvcnQgYmVmb3JlX2xvZ2luX2Zvb3RlciBmcm9tICcuLi8uLi9jb21wb25lbnRzL2Zvb3Rlci9iZWZvcmVfbG9naW5fZm9vdGVyJwoKZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogJ0xvZ2luJywKICAgIG1peGluczogW2NvbW1vbk1ldGhvZHNNaXhpbl0sCiAgICBkYXRhKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIGVtYWlsOiAnJywKICAgICAgICAgICAgdmFsaWQgOiB7CiAgICAgICAgICAgICAgICBlbWFpbDogewogICAgICAgICAgICAgICAgICAgICdoYXMtdmFsdWUnOiBmYWxzZSwKICAgICAgICAgICAgICAgICAgICAnaGFzLWVycm9yJzogZmFsc2UKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgaW52YWxpZEVtYWlsIDogZmFsc2UKICAgICAgICB9CiAgICB9LAogICAgY29tcHV0ZWQ6IHsKICAgICAgICB2YWxpZEVtYWlsICgpIHsKCiAgICAgICAgICAgIHJldHVybiB0aGlzLnZhbGlkLmVtYWlsWydoYXMtdmFsdWUnXSAmJiAhdGhpcy52YWxpZC5lbWFpbFsnaGFzLWVycm9yJ107CiAgICAgICAgfQogICAgfSwKICAgIGNvbXBvbmVudHM6IHsKICAgICAgICAnYmVmb3JlLWxvZ2luLWhlYWRlcic6IGJlZm9yZV9sb2dpbl9oZWFkZXIsCiAgICAgICAgJ2JlZm9yZS1sb2dpbi1mb290ZXInOiBiZWZvcmVfbG9naW5fZm9vdGVyLAogICAgfSwKICAgIG1ldGhvZHM6IHsKCiAgICAgICAgLy8gYXR0ZW1wdCB0byBmaW5kIGVtYWlsCiAgICAgICAgc2VuZEVtYWlsKCkgewoKICAgICAgICAgICAgdGhpcy5jaGVja0VtYWlsRm9ybSgpOwogICAgICAgICAgICBjb25zb2xlLmxvZyh0aGlzLnZhbGlkRW1haWwpCgogICAgICAgICAgICBpZiAodGhpcy52YWxpZEVtYWlsKSB7CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIC8vIOyeheugpe2VnCDrqZTsnbwg7KO87IaM66W8IOqwgOyngOuKlCDqs4TsoJXsnbQg7J6I64qU7KeAIO2ZleyduAogICAgICAgICAgICAgICAgYXhpb3MucG9zdCgnL2JlZm9yZV9sb2dpbi9zZW5kRW1haWxUb1Jlc2V0UGFzc3dvcmQvJywgewogICAgICAgICAgICAgICAgICAgICAgICAnZW1haWwnOiB0aGlzLmVtYWlsLAogICAgICAgICAgICAgICAgICAgICAgICAnbGFuZ1R5cGUnOiB0aGlzLiRzdG9yZS5zdGF0ZS5tYWluLmxhbmdUeXBlCiAgICAgICAgICAgICAgICAgICAgfSkudGhlbihyZXN1bHQgPT4gewoKICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGRhdGEgPSByZXN1bHQuZGF0YTsKCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkYXRhLmNvZGUgPT0gMTAwMCkgewoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsZXJ0KHRoaXMuJHQoJ2NvbW1vbi5jb21tZW50LmNoZWNrWW91ckVtYWlsJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy4kcm91dGVyLnB1c2goJy9iZWZvcmVfbG9naW4vbG9naW4nKTsKCiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5pbnZhbGlkRW1haWwgPSB0cnVlOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIOu5hO2ZnOyEse2ZlCDsnKDsoIAgKC0yMDAyKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGEuY29kZSA9PSAtMjAwMikgewoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLiRyZWZzLmNvbW1lbnRUb0VtYWlsLmlubmVySFRNTCA9IHRoaXMuJHQoJ2NvbW1vbi5jb21tZW50LmZhaWxUb0xvZ2luX2luYWN0aXZlJyk7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy4kcmVmcy5jb21tZW50VG9FbWFpbC5pbm5lckhUTUwgPSB0aGlzLiR0KCdjb21tb24uY29tbWVudC5ub0V4aXN0RW1haWwnKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGEpOwoKICAgICAgICAgICAgICAgICAgICB9KS5jYXRjaChleCA9PiB7CgogICAgICAgICAgICAgICAgICAgICAgICBhbGVydChleCk7CiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0KICAgICAgICB9LAoKICAgICAgICAvLyDsnbTrqZTsnbwg7ZiV7IudIOqygOyCrCAo67mE7JeI64qU7KeAIG9yIO2Yle2DnCkKICAgICAgICBjaGVja0VtYWlsRm9ybSgpIHsKCiAgICAgICAgICAgIGxldCBjb21tZW50ID0gIiI7CgogICAgICAgICAgICAvLyBlbWFpbOydtCDruYTslrTsnojripTsp4Ag7ZmV7J24CiAgICAgICAgICAgIGlmICh0aGlzLmVtYWlsID09ICIiKSB7CgogICAgICAgICAgICAgICAgY29tbWVudCA9IHRoaXMuJHQoJ2NvbW1vbi5jb21tZW50LmVzc2VudGlhbCcpOwogICAgICAgICAgICAgICAgdGhpcy52YWxpZC5lbWFpbFsiaGFzLWVycm9yIl0gPSB0cnVlOwogICAgICAgICAgICAgICAgdGhpcy5pbnZhbGlkRW1haWwgPSB0cnVlOwoKICAgICAgICAgICAgLy8gZW1haWzsnbQg7Jyg7Zqo7ZWc7KeAIO2ZleyduAogICAgICAgICAgICB9IGVsc2UgaWYgKCF0aGlzLmNoZWNrVmFsaWRFbWFpbCh0aGlzLmVtYWlsKSkgewoKICAgICAgICAgICAgICAgIGNvbW1lbnQgPSB0aGlzLiR0KCdjb21tb24uY29tbWVudC5pbnZhbGlkRW1haWwnKTsKICAgICAgICAgICAgICAgIHRoaXMudmFsaWQuZW1haWxbImhhcy1lcnJvciJdID0gdHJ1ZTsKICAgICAgICAgICAgICAgIHRoaXMuaW52YWxpZEVtYWlsID0gdHJ1ZTsKCiAgICAgICAgICAgIH0gZWxzZSB7CgogICAgICAgICAgICAgICAgdGhpcy52YWxpZC5lbWFpbFsiaGFzLWVycm9yIl0gPSBmYWxzZTsKICAgICAgICAgICAgICAgIHRoaXMuaW52YWxpZEVtYWlsID0gZmFsc2U7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHRoaXMudmFsaWQuZW1haWxbImhhcy12YWx1ZSJdID0gdHJ1ZTsKCiAgICAgICAgICAgIGlmICh0aGlzLmludmFsaWRFbWFpbCA9PSB0cnVlKSB7CgogICAgICAgICAgICAgICAgdGhpcy4kcmVmcy5jb21tZW50VG9FbWFpbC5pbm5lckhUTUwgPSAiIjsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKHRoaXMudmFsaWQuZW1haWxbImhhcy1lcnJvciJdKSB7CgogICAgICAgICAgICAgICAgdGhpcy4kcmVmcy5jb21tZW50VG9FbWFpbC5pbm5lckhUTUwgPSBjb21tZW50OwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQp9Cg=="},{"version":3,"sources":["FindPassword.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA","file":"FindPassword.vue","sourceRoot":"src/views/before_login","sourcesContent":["<!--    메인 표시되는 화면은 폴더명 == 파일명으로 사용바랍니다.            -->\n<template>\n    <div id=\"member_container\">\n        <section id=\"member_info\">\n            <before-login-header/>\n            <div class=\"member_form\">\n                <h2>{{$t('find_password.title')}}</h2>\n                <div class=\"visual\">\n                    <img src=\"@/assets/images/member/visual_login.png\" alt=\"\"/>\n                </div>\n                <p class=\"ask_msg\">\n                    {{ $t('find_password.subTitle1') }}<br />\n                    {{ $t('find_password.subTitle2') }}\n                </p>\n\n                <fieldset>\n                    <legend>이메일 입력</legend>\n                    <p class=\"field\">\n                        <label for=\"findEmail\">{{ $t('find_password.text_email') }}</label>\n                        <input type=\"text\" :placeholder=\"$t('find_password.text_email')\" v-model=\"email\" id=\"findEmail\" :class=\"{'has-value':valid.email['has-value'], 'has-error':valid.email['has-error']}\" @keyup.enter=\"sendEmail\"/>\n                        <span class=\"input-image green\" v-if=\"validEmail\">{{ $t('common.comment.valid') }}</span>\n                    </p>\n                    <p class=\"error_msg red\" v-show=\"invalidEmail\" ref=\"commentToEmail\">유효한 메일 주소를 입력하세요.</p>\n                    <p class=\"btn_set\">\n                        <button type=\"button\" @click=\"sendEmail\" ref=\"btnSend\">{{$t('find_password.button_send')}}</button>\n                    </p>\n                </fieldset>\n            </div>\n            <before-login-footer/>\n        </section>\n    </div>\n</template>\n\n<script>\n    import {commonMethodsMixin} from '../../common/commonMethodsMixin'\n    import before_login_header from '../../components/header/before_login_header'\n    import before_login_footer from '../../components/footer/before_login_footer'\n\n    export default {\n        name: 'Login',\n        mixins: [commonMethodsMixin],\n        data() {\n            return {\n                email: '',\n                valid : {\n                    email: {\n                        'has-value': false,\n                        'has-error': false\n                    }\n                },\n                invalidEmail : false\n            }\n        },\n        computed: {\n            validEmail () {\n\n                return this.valid.email['has-value'] && !this.valid.email['has-error'];\n            }\n        },\n        components: {\n            'before-login-header': before_login_header,\n            'before-login-footer': before_login_footer,\n        },\n        methods: {\n\n            // attempt to find email\n            sendEmail() {\n\n                this.checkEmailForm();\n                console.log(this.validEmail)\n\n                if (this.validEmail) {\n                    \n                    // 입력한 메일 주소를 가지는 계정이 있는지 확인\n                    axios.post('/before_login/sendEmailToResetPassword/', {\n                            'email': this.email,\n                            'langType': this.$store.state.main.langType\n                        }).then(result => {\n\n                            let data = result.data;\n\n                            if (data.code == 1000) {\n\n                                alert(this.$t('common.comment.checkYourEmail'));\n                                this.$router.push('/before_login/login');\n\n                            } else {\n\n                                this.invalidEmail = true;\n\n                                // 비활성화 유저 (-2002)\n                                if (data.code == -2002) {\n\n                                    this.$refs.commentToEmail.innerHTML = this.$t('common.comment.failToLogin_inactive');\n\n                                } else {\n\n                                    this.$refs.commentToEmail.innerHTML = this.$t('common.comment.noExistEmail');\n                                }\n\n                            }\n\n                            console.log(data);\n\n                        }).catch(ex => {\n\n                            alert(ex);\n                        });\n                }\n            },\n\n            // 이메일 형식 검사 (비었는지 or 형태)\n            checkEmailForm() {\n\n                let comment = \"\";\n\n                // email이 비어있는지 확인\n                if (this.email == \"\") {\n\n                    comment = this.$t('common.comment.essential');\n                    this.valid.email[\"has-error\"] = true;\n                    this.invalidEmail = true;\n\n                // email이 유효한지 확인\n                } else if (!this.checkValidEmail(this.email)) {\n\n                    comment = this.$t('common.comment.invalidEmail');\n                    this.valid.email[\"has-error\"] = true;\n                    this.invalidEmail = true;\n\n                } else {\n\n                    this.valid.email[\"has-error\"] = false;\n                    this.invalidEmail = false;\n                }\n\n                this.valid.email[\"has-value\"] = true;\n\n                if (this.invalidEmail == true) {\n\n                    this.$refs.commentToEmail.innerHTML = \"\";\n                }\n\n                if (this.valid.email[\"has-error\"]) {\n\n                    this.$refs.commentToEmail.innerHTML = comment;\n                }\n            }\n        }\n    }\n</script>\n<style>\n</style>\n"]}]}