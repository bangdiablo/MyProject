{"remainingRequest":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/src/views/management/policy/policy.vue?vue&type=style&index=0&id=0110a07d&scoped=true&lang=css&","dependencies":[{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/src/views/management/policy/policy.vue","mtime":1579049477810},{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmxpbmsgewogICAgY3Vyc29yOiBwb2ludGVyOwp9Cgo="},{"version":3,"sources":["policy.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmSA;AACA;AACA","file":"policy.vue","sourceRoot":"src/views/management/policy","sourcesContent":["<template>\n    <article id=\"contents\" class=\"sub\">\n        <location/>\n        <div class=\"content\">\n            <div class=\"admin_list\">\n                <div class=\"board_search_edit\">\n                    <fieldset class=\"search_form left\">\n                        <legend>정책검색</legend>\n                        <p>{{ userinfo.id +\"==\"+ userinfo.email }}\n                            <input type=\"text\" title=\"검색어 입력\"/>\n                            <button type=\"button\" class=\"btn_search\"><img\n                                    src=\"@/assets/images/component/btn_bse_search.png\"\n                                    alt=\"검색\"/></button>\n                        </p>\n                    </fieldset>\n                    <div class=\"btn_edit right\">\n                        <button type=\"button\"><img src=\"@/assets/images/component/btn_edit_policy.png\" alt=\"\"\n                                                   class=\"ico\"/>\n                            <router-link to=\"/management/regist_policy\"><span\n                                    class=\"txt\">{{ $t('policy.policy_create') }}</span></router-link>\n                        </button>\n                    </div>\n                </div>\n                <table class=\"board_list\">\n                    <caption>파일리스트</caption>\n                    <colgroup>\n                        <col style=\"width:70px\"/>\n                        <col style=\"width:*px\"/>\n                        <col style=\"width:150px\"/>\n                        <col style=\"width:150px\"/>\n                        <col style=\"width:200px\"/>\n                        <col style=\"width:150px\"/>\n                    </colgroup>\n                    <thead>\n                    <tr>\n                        <th scope=\"col\"><input type=\"checkbox\" :title=\"$t('policy.check_all')\" v-model=\"selectAll\"\n                                               @click=\"select\"/>\n                        </th>\n                        <th scope=\"col\"><a href=\"javascript:void(0)\" class=\"sorting\"\n                                           @click=\"sorting('bp_name'), isActive1 = !isActive1\"\n                                           :class=\"[isActive1 ? 'on' : ''] \">{{ $t('policy.policy_name') }}</a>\n                        </th>\n                        <th scope=\"col\"><a href=\"javascript:void(0)\" class=\"sorting\"\n                                           @click=\"sorting('usercnt'), isActive2 = !isActive2\"\n                                           :class=\"[isActive2 ? 'on' : '']\">{{ $t('policy.user_cnt') }}</a>\n                        </th>\n                        <th scope=\"col\"><a href=\"javascript:void(0)\" class=\"sorting\"\n                                           @click=\"sorting('servercnt'), isActive3 = !isActive3\"\n                                           :class=\"[isActive3 ? 'on' : '']\">{{ $t('policy.server_cnt') }}</a>\n                        </th>\n                        <th scope=\"col\"><a href=\"javascript:void(0)\" class=\"sorting\"\n                                           @click=\"sorting('bp_createdate'), isActive4 = !isActive4\"\n                                           :class=\"[isActive4 ? 'on' : '']\">{{ $t('policy.create_date') }}</a>\n                        </th>\n                        <th scope=\"col\">{{ $t('policy.etc') }}</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    <tr v-for=\"(item, index) in policyList\" :key=\"index\" :class=\"{on: item.on}\">\n                        <td><input type=\"checkbox\" :title=\"$t('policy.check')\" v-model=\"selected\" :value=\"item.bp_id\"/>\n                        </td>\n                        <td class=\"left\">{{item.bp_name}}</td>\n                        <td class=\"link\"><a @click=\"policyUserPopup(item.bp_id, 'U')\">{{item.usercnt}}</a></td>\n                        <td class=\"link\"><a @click=\"policyUserPopup(item.bp_id, 'S')\">{{item.servercnt}}</a></td>\n                        <td>{{item.bp_createdate | formatDate}}</td>\n                        <td class=\"item_edit\">\n                            <button type=\"button\"><router-link v-bind:to=\"`/management/regist_policy/${item.bp_id}/`\"><i class=\"modify\">수정</i></router-link></button>\n                            <button type=\"button\"><i class=\"delete\">삭제</i></button>\n                        </td>\n                    </tr>\n                    </tbody>\n                </table>\n                <div class=\"page_navi\">\n                    <a @click=\"prevPage\" class=\"guide prev\"><img src=\"@/assets/images/component/btn_page_prev.png\"\n                                                                 alt=\"Prev\"\n                                                                 class=\"ico\"></a>\n                    <a v-for=\"Page in Pages\" @click=\"selectPage(Page)\" class=\"num\"\n                       :class=\"{ active: Page == pageNum+1 }\">{{Page}}</a>\n\n                    <a @click=\"nextPage\" class=\"guide next\"><img src=\"@/assets/images/component/btn_page_next.png\"\n                                                                 alt=\"Next\"\n                                                                 class=\"ico\"></a>\n                </div>\n                <!--<div class=\"board_empty\">\n                  <img src=\"@/assets/images/component/ico_admin_empty.png\" alt=\"\" class=\"ico\" />\n                  <p>정책이 없습니다.</p>\n                </div>-->\n            </div>\n            <modals-container/>\n        </div>\n    </article>\n</template>\n\n<script>\n    import moment from 'moment'\n    import policyUserPopup from './policy_popup'\n    import $ from \"jquery\";\n    import {mapState} from 'vuex'\n\n    export default {\n        data() {\n            return {\n                policy_list: [],\n                list: [],\n                firstList: \"\",\n                pageNum: 0,\n                pageSize: 5,\n                currentSortDir: 'desc',\n                currentSort: \"\",\n                selectAll: false,\n                selected: [],\n                active_el: undefined,\n                isActive: false,\n                isActive1: false,\n                isActive2: false,\n                isActive3: false,\n                isActive4: false,\n                bp_id: '',\n                bp_div: '',\n            }\n        },\n        components: {\n            appMyModal: policyUserPopup,\n        },\n        computed: {\n            userinfo() {\n                return this.$store.state.header.user;\n            },\n            policyList() {\n                let start = this.pageNum * Number(this.pageSize),\n                    end = start + Number(this.pageSize);\n\n                return this.policy_list.slice(start, end)\n                    .sort(function (a, b) {\n                        let modifier = 1;\n                        if (this.currentSortDir === 'desc') modifier = -1;\n                        if (a[this.currentSort] < b[this.currentSort]) return -1 * modifier;\n                        if (a[this.currentSort] > b[this.currentSort]) return 1 * modifier;\n                        return 0;\n                    }.bind(this));\n            },\n            policySize() {\n                return this.policy_list.length;\n            },\n            setPolicyData(){\n                return this.$store.state.management.policy.setPolicy\n            },\n            Pages() {\n                let page = []\n                let maxpage = Math.ceil(this.policySize / this.pageSize);\n                let Num = this.pageNum;\n                let start = 0;\n                let end = 0;\n                if (Num < 3) {\n                    start = 1\n                    if (start + 4 < maxpage) {\n                        end = start + 4\n                    } else {\n                        end = maxpage\n                    }\n                } else {\n                    start = Num - 1\n                    if (start + 4 < maxpage) {\n                        end = start + 4\n                    } else {\n                        end = maxpage\n                        start = end - 4\n                    }\n                }\n                for (let index = start; index <= end; index++) {\n                    page.push(index);\n                }\n                return page\n            },\n        },\n        watch: {\n            pageSize() {\n                this.pageNum = 0\n            }\n        },\n        methods: {\n            /* 정책리스트 */\n            get_policy_list(data) {\n                axios.get('/management/policy_list/',\n                    {\n                        params: {\n                            userid: data.userid,\n                            email: data.email,\n                            accountid: data.accountid\n                        }\n                    }\n                )\n                    .then((response) => {\n                        // console.log(\"response.data===\", response.data)\n                        this.policy_list = response.data\n                    })\n            },\n            nextPage() {\n                if (this.pageNum < Math.ceil(this.policySize / this.pageSize) - 1) {\n                    this.pageNum += 1;\n                } else {\n                    //alert(\"마지막 페이지 입니다.\");\n                }\n            },\n            prevPage() {\n                if (this.pageNum > 0) {\n                    this.pageNum -= 1;\n                } else {\n                    // alert(\"첫번째 페이지 입니다.\");\n                }\n            },\n            selectPage(num) {\n                this.pageNum = num - 1\n            },\n            select() {\n                this.selected = [];\n                if (!this.selectAll) {\n                    for (let i in this.policy_list) {\n                        this.selected.push(this.policy_list[i].bp_id);\n                    }\n                }\n            },\n            sorting(key) {\n                this.currentSort = key\n                this.currentSortDir = this.currentSortDir === 'asc' ? 'desc' : 'asc';\n                this.isActive = !this.isActive\n                // return this.active_el = key\n            },\n            policyUserPopup(bp_id, div) {\n                console.log(\"div====\", div)\n                //MODAL\n                this.$modal.show(policyUserPopup, {\n                    bp_id: bp_id,\n                    bp_div: div,\n                    modal: this.$modal\n                }, {\n                    name: 'dynamic-modal',\n                    width: '330px',\n                    height: '130px',\n                    draggable: false,\n                })\n            },\n            save() {\n\n            }\n        },\n        created() {\n            const userid = this.$store.state.header.user.id\n            const email = this.$store.state.header.user.email\n            // const accountid = this.$store.state.header.user.accountid\n\n            //임시-START\n            var accountid;\n            if (undefined !== accountid) {\n                accountid = 9\n            } else {\n                accountid = this.$store.state.header.user.accountid\n            }\n            //임시-END\n\n            let data = {\n                userid: userid,\n                email: email,\n                accountid: accountid\n            }\n\n            this.get_policy_list(data)\n        },\n        filters: {\n            formatDate: function (value) {\n                if (value) {\n                    return moment(String(value)).format('YYYY-MM-DD')\n                }\n            }\n        },\n        mounted() {\n            // $(document).ready(function ($) {\n            //   jQuery(\"article#contents.sub .content\").mCustomScrollbar({\n            //     theme: \"minimal-dark\"\n            //   });\n            //\n            //   //셀렉트박스 UI\n            //   jQuery(\".selectbox_ui\").each(function () {\n            //     initSelectBox(jQuery(this)) //비동기로 셀렉트 박스를 만들었을 경우 initSelectBox(jQuery(\"#아이디\")) 로 실행시켜줘야 함\n            //   })\n            // });\n        }\n    }\n</script>\n\n<style scoped>\n    .link {\n        cursor: pointer;\n    }\n\n</style>\n"]}]}