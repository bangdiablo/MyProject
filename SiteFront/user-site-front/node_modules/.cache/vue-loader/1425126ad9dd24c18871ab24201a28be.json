{"remainingRequest":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/src/views/management/policy/policy_coldfilter_popup.vue?vue&type=style&index=0&id=b8e5908a&scoped=true&lang=css&","dependencies":[{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/src/views/management/policy/policy_coldfilter_popup.vue","mtime":1584082522958},{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoubGF5ZXJfcG9wdXAgewogICAgZGlzcGxheTogYmxvY2s7Cn0K"},{"version":3,"sources":["policy_coldfilter_popup.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwVA;AACA;AACA","file":"policy_coldfilter_popup.vue","sourceRoot":"src/views/management/policy","sourcesContent":["<template>\n    <div class=\"layer_popup preview\" v-if=\"visible\">\n        <h3>필터 추가</h3>\n        <ul class=\"policy_filter_add\">\n            <li>\n                <h4><label><input type=\"checkbox\" v-model=\"bf_extensionchk\"/>확장자나 조건식에서 필터</label></h4>\n                <fieldset class=\"extension_condition\" :disabled=\"bf_extensionchk == false\">\n                    <legend>확장자나 조건식 필터</legend>\n                    <p class=\"ec_field\">\n                        <label for=\"efInclude\">\n                            <input type=\"radio\" value=\"Y\" v-model=\"bf_filetypechk\"/>다음 파일 유형이나 표현식만을 대상으로 하는\n                        </label>\n                        <textarea name=\"\" id=\"efInclude\" v-model=\"efInclude\" cols=\"30\" rows=\"10\"\n                                  :disabled=\"bf_filetypechk == 'N'\"\n                                  placeholder=\"확장자는 세미 콜론으로 구분하여 주세요. 예(*, exe; *.html;* .doc)\"></textarea>\n                        <label><input type=\"checkbox\" v-model=\"efIncludechk\"\n                                      :disabled=\"bf_filetypechk == 'N'\"/>정규식</label>\n                    </p>\n                    </p>\n                    <p class=\"ec_field\">\n                        <label for=\"efExclude\">\n                            <input type=\"radio\" value=\"N\" v-model=\"bf_filetypechk\"/>다음 파일 유형이나 표현식을 제외\n                        </label>\n                        <textarea name=\"\" id=\"efExclude\" v-model=\"efExclude\" cols=\"30\" rows=\"10\"\n                                  :disabled=\"bf_filetypechk == 'Y'\"\n                                  placeholder=\"확장자는 세미 콜론으로 구분하여 주세요. 예(*, exe; *.html;* .doc)\"></textarea>\n                        <label><input type=\"checkbox\" v-model=\"efExcludechk\"\n                                      :disabled=\"bf_filetypechk == 'Y'\"/>정규식</label>\n                    </p>\n                </fieldset>\n            </li>\n            <li>\n                <h4>\n                    <label id=\"falFileSize\">\n                        <input type=\"checkbox\" v-model=\"bf_filebackchk\"/>큰 사이즈의 파일을 백업하지 않는\n                    </label>\n                </h4>\n                <p class=\"limit_field size\">\n                    <input type=\"text\" id=\"falFileSize\" v-model=\"bf_size\" @keyup=\"onKeyup\"\n                           :disabled=\"bf_filebackchk == false\"/>\n                    <span class=\"basic_select selectbox_ui\">\n\t\t\t\t\t<b class=\"selected_txt\"></b>\n\t\t\t\t\t<select title=\"파일단위\" v-model=\"bf_volumechk\"\n                            v-bind:style=\"{display: bf_filebackchk == true ? 'block' : 'none'}\">\n\t\t\t\t\t\t<option value=\"1\">Byte</option>\n\t\t\t\t\t\t<option value=\"2\">KB</option>\n\t\t\t\t\t\t<option value=\"3\">MB</option>\n\t\t\t\t\t\t<option value=\"4\">GB</option>\n\t\t\t\t\t</select>\n\t\t\t\t</span>\n                </p>\n            </li>\n            <li>\n                <h4><label id=\"falDate\"><input type=\"checkbox\" v-model=\"bf_datebackchk\"/>오래된 날짜의 파일을 백업하지 않는</label>\n                </h4>\n                <p class=\"limit_field date\">\n\t\t\t\t<span class=\"basic_datepicker\">\n                    <datetime ref=\"datePicker\" v-model=\"bf_dateback\" :disabled=\"bf_datebackchk == false\"></datetime>\n\t\t\t\t\t<button type=\"button\" @click=\"openDate\" :disabled=\"bf_datebackchk == false\">\n                        <img src=\"@/assets/images/component/btn_calendar.png\" alt=\"달력\"/>\n                    </button>\n\t\t\t\t</span>\n                </p>\n            </li>\n        </ul>\n        <div class=\"btn_set\">\n            <div class=\"right\">\n                <button type=\"button\" class=\"btn_basic cancel\" @click=\"$emit('update:visible', false)\">취소</button>\n                <button type=\"button\" class=\"btn_basic submit\" @click=\"save\">적용</button>\n            </div>\n        </div>\n        <button class=\"btn_close\" @click=\"$emit('update:visible', false)\"><img\n                src=\"@/assets/images/component/btn_popup_close.png\"\n                alt=\"닫기\"/></button>\n    </div>\n</template>\n\n<script>\n    import $ from \"jquery\";\n    import {Datetime} from 'vue-datetime'\n    import 'vue-datetime/dist/vue-datetime.css'\n    import moment from 'moment'\n    import {EventBus} from \"../../../plugins/event-bus\"\n\n\n    export default {\n        name: \"policy_coldfilter_popup\",\n        props: {\n            visible: {\n                type: Boolean,\n                require: true,\n                default: false\n            },\n            filter_modal: {\n                type: String,\n                require: false\n            },\n            title: {\n                type: String,\n                require: false\n            },\n            filepath: {\n                type: String,\n                require: false\n            },\n            index: {\n                type: Number,\n                require: false\n            },\n            bfid: {\n                type: Number,\n                require: false\n            },\n            insert_div: {\n                type: String,\n                require: false\n            }\n        },\n        data() {\n            return {\n                bf_extensionchk: false,\n                bf_filetypechk: '',\n                efInclude: '',\n                efIncludechk: '',\n                efExclude: '',\n                efExcludechk: '',\n                bf_filebackchk: '',\n                bf_size: '',\n                bf_volumechk: '',\n                bf_datebackchk: '',\n                bf_dateback: '',\n                coldFilter: [],\n                fileserverchk: '',\n                rows: [{bf_filepath: ''}],\n                GfolderList: [],\n                bf_iddiv: '',\n                index_cold: '',\n            }\n        },\n        components: {\n            'datetime': Datetime\n        },\n        computed: {\n            setPolicyData() {\n                return this.$store.state.management.policy.setPolicy\n            },\n            coldFolderList() {\n                // return this.$store.state.management.policy.policyDataList.generalFolder\n                return this.coldFilter\n            },\n        },\n        watch: {\n            bf_extensionchk() {\n                if (!this.fileserverchk) {\n                    if (this.bf_extensionchk)\n                        this.bf_filetypechk = 'Y'\n                    else\n                        this.bf_filetypechk = ''\n                }\n            },\n            bf_filetypechk() {\n                if (this.bf_filetypechk == 'N') {\n                    this.efInclude = ''\n                    this.efIncludechk = false\n                } else {\n                    this.efExclude = ''\n                    this.efExcludechk = false\n                }\n            },\n            bf_filebackchk() {\n                if (!this.bf_filebackchk) {\n                    this.bf_size = ''\n                    this.bf_volumechk = 4\n                }\n            },\n            bfid() {\n                if (this.bfid != undefined && this.bfid != 0) {\n                    if (this.coldFilter[this.index].bf_extensionchk == \"Y\") this.bf_extensionchk = true;\n                    this.bf_filetypechk = this.coldFilter[this.index].bf_filetypechk\n                    this.fileserverchk = this.coldFilter[this.index].bf_filetypechk\n                    if (this.coldFilter[this.index].bf_filetypechk == 'Y') {\n                        if (this.coldFilter[this.index].bf_regexchk == \"Y\") this.efIncludechk = true;\n                        this.efInclude = this.coldFilter[this.index].bf_expression\n                    } else {\n                        if (this.coldFilter[this.index].bf_regexchk == \"Y\") this.efExcludechk = true;\n                        this.efExclude = this.coldFilter[this.index].bf_expression\n                    }\n                    if (this.coldFilter[this.index].bf_filebackchk == \"Y\") this.bf_filebackchk = true;\n                    this.bf_size = this.coldFilter[this.index].bf_size\n                    this.bf_volumechk = this.coldFilter[this.index].bf_volumechk\n                    if (this.coldFilter[this.index].bf_datebackchk == \"Y\") this.bf_datebackchk = true;\n                    this.bf_dateback = this.coldFilter[this.index].bf_dateback\n                }\n            },\n            index() {\n                if (this.insert_div == 'folder') {\n                    this.coldFilter = this.setPolicyData.coldfolderfiles\n                    if (this.setPolicyData.coldfolderfiles[this.index].bf_extensionchk == \"Y\") {\n                        this.bf_extensionchk = true\n                    } else {\n                        this.bf_extensionchk = false\n                    }\n                    this.bf_filetypechk = this.setPolicyData.coldfolderfiles[this.index].bf_filetypechk\n                    // this.fileserverchk = this.setPolicyData.coldfolderfiles[this.ocrfolderindex].bf_filetypechk\n\n                    if (this.setPolicyData.coldfolderfiles[this.index].bf_filetypechk == 'Y') {\n                        //this.bf_filetypechk = 'Y'\n                        // this.bf_filetypechk = this.setPolicyData.coldfolderfiles[this.ocrfolderindex].bf_filetypechk\n                        if (this.setPolicyData.coldfolderfiles[this.index].bf_regexchk == \"Y\") {\n                            this.efIncludechk = true;\n                        } else {\n                            this.efIncludechk = false;\n                        }\n                        this.efInclude = this.setPolicyData.coldfolderfiles[this.index].bf_expression\n                    } else {\n                        //this.bf_filetypechk = 'N'\n                        if (this.setPolicyData.coldfolderfiles[this.index].bf_regexchk == \"Y\") {\n                            this.efExcludechk = true;\n                        } else {\n                            this.efExcludechk = false;\n                        }\n                        this.efExclude = this.setPolicyData.coldfolderfiles[this.index].bf_expression\n                    }\n                    if (this.setPolicyData.coldfolderfiles[this.index].bf_filebackchk == \"Y\") {\n                        this.bf_filebackchk = true\n                    } else {\n                        this.bf_filebackchk = false\n                    }\n                    this.bf_size = this.setPolicyData.coldfolderfiles[this.index].bf_size\n                    this.bf_volumechk = this.setPolicyData.coldfolderfiles[this.index].bf_volumechk\n                    if (this.setPolicyData.coldfolderfiles[this.index].bf_datebackchk == \"Y\") {\n                        this.bf_datebackchk = true;\n                    } else {\n                        this.bf_datebackchk = false;\n                    }\n                    this.bf_dateback = this.setPolicyData.coldfolderfiles[this.index].bf_dateback\n                }\n            }\n        },\n        methods: {\n            openDate() {\n                this.$refs.datePicker.open(event)\n            },\n            save() {\n                // console.log(\"this.coldFilter==\", this.coldFilter)\n                // console.log(\"this.setPolicyData.coldfolderfiles==\", this.setPolicyData.coldfolderfiles)\n                // if (this.bfid != null) {\n                //     this.coldFilter[this.index].bf_extensionchk = this.bf_extensionchk ? 'Y' : 'N'\n                //     this.coldFilter[this.index].bf_filetypechk = this.bf_filetypechk\n                //     this.coldFilter[this.index].bf_folderpath = this.filepath\n                //     if (this.bf_filetypechk == 'Y') {\n                //         this.coldFilter[this.index].bf_regexchk = this.efIncludechk ? 'Y' : 'N'\n                //         this.coldFilter[this.index].bf_expression = this.efInclude\n                //     } else {\n                //         this.coldFilter[this.index].bf_regexchk = this.efExcludechk ? 'Y' : 'N'\n                //         this.coldFilter[this.index].bf_expression = this.efExclude\n                //     }\n                //     this.coldFilter[this.index].bf_filebackchk = this.bf_filebackchk ? 'Y' : 'N'\n                //     this.coldFilter[this.index].bf_size = this.bf_size\n                //     this.coldFilter[this.index].bf_volumechk = this.bf_volumechk\n                //     this.coldFilter[this.index].bf_datebackchk = this.bf_datebackchk ? 'Y' : 'N'\n                //     this.coldFilter[this.index].bf_dateback = this.bf_dateback ? moment(String(this.bf_dateback)).format('YYYY-MM-DD') : null\n                //     this.coldFilter = this.this.setPolicyData.coldfolderfiles\n                //     this.$emit('close')\n                // } else {\n                this.setPolicyData.coldfolderfiles[this.index].bf_extensionchk = this.bf_extensionchk ? 'Y' : 'N'\n                if (this.bf_filetypechk == 'Y') {\n                    this.setPolicyData.coldfolderfiles[this.index].bf_regexchk = this.efIncludechk ? 'Y' : 'N'\n                    this.setPolicyData.coldfolderfiles[this.index].bf_expression = this.efInclude\n                } else {\n                    this.setPolicyData.coldfolderfiles[this.index].bf_regexchk = this.efExcludechk ? 'Y' : 'N'\n                    this.setPolicyData.coldfolderfiles[this.index].bf_expression = this.efExclude\n                }\n                this.setPolicyData.coldfolderfiles[this.index].bf_filebackchk = this.bf_filebackchk ? 'Y' : 'N'\n                this.setPolicyData.coldfolderfiles[this.index].bf_size = this.bf_size\n                this.setPolicyData.coldfolderfiles[this.index].bf_volumechk = this.bf_volumechk\n                this.setPolicyData.coldfolderfiles[this.index].bf_datebackchk = this.bf_datebackchk ? 'Y' : 'N'\n                this.setPolicyData.coldfolderfiles[this.index].bf_dateback = this.bf_dateback ? moment(String(this.bf_dateback)).format('YYYY-MM-DD') : null\n                this.coldFilter = this.setPolicyData.coldfolderfiles\n                this.$emit('update:visible', false);\n                // }\n            },\n            searchList() {\n                console.log(\"responsedata======\", this.$route.params.bp_id)\n                const bpId = this.$route.params.bp_id\n                let requestData = {\n                    bpId: bpId\n\n                }\n                axios.get('/management/policy_editlist/',\n                    {\n                        params: {\n                            bpId: requestData.bpId\n                        }\n                    }\n                ).then((response) => {\n                    this.coldFilter = response.data.coldFolder\n                    this.setPolicyData.coldfolderfiles = response.data.coldFolder\n                    console.log(\"responsedata======\", response.data.coldFolder)\n                })\n            },\n            onKeyup(event) {\n                event.target.value = event.target.value.replace(/[^0-9]/g, '')\n                // console.log(event.target.value)\n                if ((event.keyCode >= 48 && event.keyCode <= 57) || (event.keyCode >= 96 && event.keyCode <= 105)) {\n                    const next = event.target.nextElementSibling\n                    if (next === null) return\n                    event.target.nextElementSibling.focus()\n                }\n                return\n            },\n        },\n        created() {\n            this.bf_volumechk = 4\n\n            EventBus.$on(\"coldpopFilter_bf_id\", data => {\n                this.bf_iddiv = data.bf_id\n            })\n            // this.index_cold = this.index\n            this.searchList()\n        },\n        mounted() {\n            $(document).ready(function ($) {\n                jQuery(\"article#contents.sub .content\").mCustomScrollbar({\n                    theme: \"minimal-dark\"\n                });\n\n                //셀렉트박스 UI\n                jQuery(\".selectbox_ui\").each(function () {\n                    initSelectBox(jQuery(this)) //비동기로 셀렉트 박스를 만들었을 경우 initSelectBox(jQuery(\"#아이디\")) 로 실행시켜줘야 함\n                })\n            });\n        },\n        updated() {\n            // var jQuery = require('jquery')\n            //셀렉트박스 UI\n            jQuery(\".selectbox_ui\").each(function () {\n                initSelectBox(jQuery(this)) //비동기로 셀렉트 박스를 만들었을 경우 initSelectBox(jQuery(\"#아이디\")) 로 실행시켜줘야 함\n            });\n        },\n    }\n</script>\n\n<style scoped>\n    .layer_popup {\n        display: block;\n    }\n</style>\n"]}]}