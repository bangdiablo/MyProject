{"remainingRequest":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/src/views/stroage_service/storage_service.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/src/views/stroage_service/storage_service.vue","mtime":1578875064848},{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgoKaW1wb3J0IHtjb250ZW50TWl4aW59IGZyb20gJy4uLy4uL2NvbW1vbi9jb250ZW50TWl4aW4nCmltcG9ydCAkIGZyb20gImpxdWVyeSI7CgppbXBvcnQgRGV0YWlsSW5mbyBmcm9tICcuL2RldGFpbF9pbmZvLnZ1ZScKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnU2hhcmUnLAogIGNvbXBvbmVudHM6IHsKICAgIERldGFpbEluZm8KICB9LAogIG1peGluczogW2NvbnRlbnRNaXhpbl0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGxpc3Q6IFsKICAgICAgICB7CiAgICAgICAgICBpZDogJycsCiAgICAgICAgICBuYW1lOiAnJywKICAgICAgICAgIG93bmVyOiAnJywKICAgICAgICAgIGRhdGU6ICcnLAogICAgICAgICAgdHlwZTogJycsCiAgICAgICAgICBpY29JbWdVcmw6ICcnLAogICAgICAgICAgUHJldmlld0ltZ1VybDogJycsCiAgICAgICAgICBjaGVja2VkOiBmYWxzZSwKICAgICAgICAgIG9uOiBmYWxzZQogICAgICAgIH0KICAgICAgXSwKICAgICAgZmlsZV9saXN0OiBbXSwKICAgICAgZmlyc3RMaXN0OiAnJywKICAgICAgdGVtcGxhdGVUeXBlOiAnbGlzdCcsCiAgICAgIHNob3dEZWxldGVkRmlsZTogZmFsc2UsCiAgICAgIC8qIOyDgeyEuOygleuztOywvSDqtIDroKggKi8KICAgICAgY3VycmVudEluZm86IHsKICAgICAgICBpZDogJycsIC8vIO2YhOyerCDtkZzsi5zrkJjripQg7KCV67O07J2YIGlkCiAgICAgICAgaXNBY3RpdmU6IGZhbHNlLCAvLyDtmZzshLHtmZQg7Jes67aACiAgICAgICAgY3VycmVudFRhYjogJ2RldGFpbCcsIC8vIO2YhOyerCDtg60KICAgICAgICBmaWxlX25hbWU6ICcnLAogICAgICAgIGRldGFpbF9pbmZvOiBbXQoKICAgICAgfSwKICAgICAgY2hlY2tlZDogZmFsc2UKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CgogICAgaW5mbygpIHsKICAgICAgcmV0dXJuIHRoaXMubGlzdC5nZXRPYmplY3RCeUlkKCdpZCcsIHRoaXMuY3VycmVudEluZm8uaWQpCiAgICB9LAogICAgY2hlY2tlZEFsbDogewoKICAgICAgZ2V0KCkgewogICAgICAgIGxldCBjb3VudCA9IDAKCiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmxpc3QubGVuZ3RoOyBpKyspIHsKICAgICAgICAgIGlmICh0aGlzLmxpc3RbaV0uY2hlY2tlZCkgY291bnQrKwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIHRoaXMubGlzdC5sZW5ndGggPT09IGNvdW50CiAgICAgIH0sCiAgICAgIHNldCh2YWwpIHsKICAgICAgICBpZiAodmFsKSB7CiAgICAgICAgICB0aGlzLmxpc3Quc2V0QWxsT2JqUHJvcCgnY2hlY2tlZCcsIHRydWUpCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHRoaXMubGlzdC5zZXRBbGxPYmpQcm9wKCdjaGVja2VkJywgZmFsc2UpCiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgZmlsZVNlbGVjdGVkKCkgewogICAgICByZXR1cm4gdGhpcy5saXN0LmNvdW50T2JqUHJvcCgnY2hlY2tlZCcsIHRydWUpID4gMAogICAgfQogIH0sCiAgY3JlYXRlZCgpIHsKICAgIGF4aW9zLmdldCgnL3N0b3JhZ2Vfc2VydmljZS9nb29nbGVfZHJpdmUvJykudGhlbihyZXNvcG5zZSA9PiB7CgogICAgICB0aGlzLmxpc3QgPSByZXNvcG5zZS5kYXRhLmRhdGEuZmlsZV9saXN0OwogICAgICBjb25zb2xlLmxvZygiZmlsZV9saXN0PT09PT09PiIsIHRoaXMubGlzdCkKCiAgICB9KTsKCgogICAgbGV0IGxpc3QgPSB0aGlzLmxpc3Q7CiAgICBsZXQgaTsKCgogICAgZm9yIChpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHsKICAgICAgbGlzdFtpXS5pY29JbWdVcmwgPSB0aGlzLmdldEZpbGVVcmwoJ2ljb19mdF8nICsgbGlzdFtpXS50eXBlICsgJy5wbmcnKQogICAgICBsaXN0W2ldLnByZXZpZXdJbWdVcmwgPSB0aGlzLmdldEZpbGVVcmwoJ3ByZXZpZXdfZnRfJyArIGxpc3RbaV0udHlwZSArICcucG5nJykKICAgIH0KCiAgICBsaXN0ID0gbGlzdC5jb25jYXQoSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShsaXN0KSkpCgogICAgZm9yIChpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHsKICAgICAgbGlzdFtpXS5pZCA9IGkgKyAxCgogICAgICBpZiAobGlzdFtpXS5pZCA+IDUpIHsKICAgICAgICBsaXN0W2ldLm5hbWUgPSBsaXN0W2ldLm5hbWUucmVwbGFjZSgvWzEtOV0vLCBsaXN0W2ldLmlkKQogICAgICB9CiAgICB9CiAgICAvLwogICAgdGhpcy5saXN0ID0gbGlzdAogICAgdGhpcy5maXJzdExpc3QgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KGxpc3QpKQogIH0sCiAgbW91bnRlZCgpIHsKICAgICQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uICgkKSB7CgogICAgICBqUXVlcnkoImFydGljbGUjY29udGVudHMuc3ViIC5jb250ZW50IikubUN1c3RvbVNjcm9sbGJhcih7CiAgICAgICAgdGhlbWU6ICJtaW5pbWFsLWRhcmsiCiAgICAgIH0pOwoKICAgICAgLy/shYDroIntirjrsJXsiqQgVUkKICAgICAgalF1ZXJ5KCIuc2VsZWN0Ym94X3VpIikuZWFjaChmdW5jdGlvbiAoKSB7CiAgICAgICAgaW5pdFNlbGVjdEJveChqUXVlcnkodGhpcykpIC8v67mE64+Z6riw66GcIOyFgOugie2KuCDrsJXsiqTrpbwg66eM65Ok7JeI7J2EIOqyveyasCBpbml0U2VsZWN0Qm94KGpRdWVyeSgiI+yVhOydtOuUlCIpKSDroZwg7Iuk7ZaJ7Iuc7Lyc7KSY7JW8IO2VqAogICAgICB9KQogICAgfSk7CgogICAgLy8g7IOI66Gc6rOg7LmoIOyLnCwg7ISg7YOd65CcIOuplOuJtOydmCDsg4HsnIQg66mU64m0IG9wZW5lZAogICAgaWYgKHRoaXMuY3VycmVudFVwcGVyTWVudSAhPSB1bmRlZmluZWQpIHsKCiAgICAgIHRoaXMuaXNPcGVuZWRbdGhpcy5jdXJyZW50VXBwZXJNZW51XSA9IHRydWU7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CgogICAgaXNQaG90byh0eXBlKSB7CiAgICAgIHJldHVybiB0eXBlID09PSAncGhvdG8nCiAgICB9LAoKICAgIC8qIOyDgeuLqCDri6TsmrTroZzrk5wg7YG066atICovCiAgICBjbGlja0J0bkRvd25sb2FkKCkgewoKICAgICAgY29uc3QgY291bnQgPSB0aGlzLmxpc3QuY291bnRPYmpQcm9wKCdjaGVja2VkJywgdHJ1ZSk7CgogICAgICBhbGVydChgJHtjb3VudH3qsJzqsIAg7ISg7YOd65CY7JeI7Iq164uI64ukLiDri6TsmrTroZzrk5w/YCk7CgogICAgICAvLyBUT0RPCiAgICAgIC8vIOuqqOuLrOywvSDtjJ3sl4Ug7JiI7KCVCiAgICAgIC8vIOupgO2LsCDshKDtg53si5wsIFpJUO2MjOydvOuhnCDri6TsmrTroZzrk5wg7KeE7ZaJCiAgICB9LAoKICAgIC8qIOyDgeuLqCDqs7XsnKAg7YG066atICovCiAgICBjbGlja0J0blNoYXJlKCkgewoKICAgICAgY29uc3QgY291bnQgPSB0aGlzLmxpc3QuY291bnRPYmpQcm9wKCdjaGVja2VkJywgdHJ1ZSk7CgogICAgICBhbGVydChgJHtjb3VudH3qsJzqsIAg7ISg7YOd65CY7JeI7Iq164uI64ukLiDqs7XsnKA/YCk7CgogICAgICAvLyBUT0RPCiAgICAgIC8vIOuqqOuLrOywvSDtjJ3sl4Ug7JiI7KCVCiAgICB9LAoKICAgIC8qIOyDgeuLqCDsgq3soJwg7YG066atICovCiAgICBjbGlja0J0bkRlbGV0ZSgpIHsKCiAgICAgIGNvbnN0IGNvdW50ID0gdGhpcy5saXN0LmNvdW50T2JqUHJvcCgnY2hlY2tlZCcsIHRydWUpOwoKICAgICAgYWxlcnQoYCR7Y291bnR96rCc6rCAIOyEoO2DneuQmOyXiOyKteuLiOuLpC4g7IKt7KCcP2ApOwoKICAgICAgLy8gVE9ETwogICAgICAvLyDrqqjri6zssL0g7Yyd7JeFIOyYiOyglQogICAgfSwKCiAgICAvKiDsg4Hri6gg7IOI66Gc6rOg7LmoIO2BtOumrSAqLwogICAgcmVmcmVzaExpc3QoKSB7CiAgICAgIHRoaXMubGlzdCA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkodGhpcy5maXJzdExpc3QpKQogICAgfSwKCiAgICAvKiByb3cg7YG066atICovCiAgICBjbGlja1JvdyhrZXkpIHsKICAgICAgdGhpcy5vbmx5T25lT25Ub0xpc3Qoa2V5KSAvLyBvbgogICAgICB0aGlzLmN1cnJlbnRJbmZvLmlkID0ga2V5IC8vIGRldGFpbCDsoJXrs7Trs4Dqsr0KICAgIH0sCgogICAgLyogcm93IO2VmOuCmOyXkOunjCBvbiAqLwogICAgb25seU9uZU9uVG9MaXN0KGtleSkgewogICAgICB0aGlzLmxpc3Quc2V0QWxsT2JqUHJvcCgnb24nLCBmYWxzZSkKICAgICAgdGhpcy5saXN0LmdldE9iamVjdEJ5SWQoJ2lkJywga2V5KS5vbiA9IHRydWUKICAgIH0sCgogICAgLyogdG9nZ2xlIHJvdyBjaGVja2VkICovCiAgICB0b2dnbGVDaGVja2VkVG9MaXN0KGtleSkgewogICAgICBjb25zdCBpdGVtID0gdGhpcy5saXN0LmdldE9iamVjdEJ5SWQoJ2lkJywga2V5KQogICAgICBpdGVtLmNoZWNrZWQgPSAhaXRlbS5jaGVja2VkCiAgICB9LAoKICAgIC8qIOuLpOyatOuhnOuTnCDtgbTrpq0gKi8KICAgIGNsaWNrQnRuRG93bmxvYWRPbmUoa2V5KSB7CiAgICAgIHRoaXMub25seU9uZU9uVG9MaXN0KGtleSkgLy8gb24KICAgICAgdGhpcy5jdXJyZW50SW5mby5pZCA9IGtleSAvLyBkZXRhaWwg7KCV67O067OA6rK9CiAgICAgIGFsZXJ0KCfri6TsmrTroZzrk5w/JykKCiAgICAgIC8vIFRPRE8KICAgICAgLy8g66qo64us7LC9IO2MneyXhSDsmIjsoJUKICAgIH0sCgogICAgLyog6rO17JygIO2BtOumrSAqLwogICAgY2xpY2tCdG5TaGFyZU9uZShrZXkpIHsKICAgICAgdGhpcy5vbmx5T25lT25Ub0xpc3Qoa2V5KSAvLyBvbgogICAgICB0aGlzLmN1cnJlbnRJbmZvLmlkID0ga2V5IC8vIGRldGFpbCDsoJXrs7Trs4Dqsr0KICAgICAgYWxlcnQoJ+qzteycoD8nKQoKICAgICAgLy8gVE9ETwogICAgICAvLyDrqqjri6zssL0g7Yyd7JeFIOyYiOyglQogICAgfSwKCiAgICAvKiDsg4HshLjrs7TquLAg7YG066atICovCiAgICBjbGlja0J0bkRldGFpbChrZXkpIHsKCiAgICAgIGNvbnNvbGUubG9nKCJrZXk9PT4iLCBrZXkpCgogICAgICBpZiAoIXRoaXMuY3VycmVudEluZm8uaXNBY3RpdmUpIHsKICAgICAgICB0aGlzLmN1cnJlbnRJbmZvLmN1cnJlbnRUYWIgPSAnZGV0YWlsJwogICAgICB9CgogICAgICBsZXQgaXRlbSA9IHRoaXMubGlzdC5nZXRPYmplY3RCeUlkKCdmaV9pZCcsIGtleSk7CgogICAgICBjb25zb2xlLmxvZygiZGV0YWlsX2luZm8iLCBpdGVtKQogICAgICB0aGlzLmN1cnJlbnRJbmZvLmRldGFpbF9pbmZvID0gaXRlbQoKCiAgICAgIHRoaXMuY3VycmVudEluZm8uaXNBY3RpdmUgPSB0aGlzLmN1cnJlbnRJbmZvLmlkID09IGtleSA/ICF0aGlzLmN1cnJlbnRJbmZvLmlzQWN0aXZlIDogdHJ1ZQoKICAgICAgdGhpcy5vbmx5T25lT25Ub0xpc3Qoa2V5KSAvLyBvbgogICAgICB0aGlzLmN1cnJlbnRJbmZvLmlkID0ga2V5IC8vIGRldGFpbCDsoJXrs7Trs4Dqsr0KICAgIH0sCgogICAgY2xpY2tCdG5FdGMoa2V5KSB7CiAgICAgIHRoaXMub25seU9uZU9uVG9MaXN0KGtleSkgLy8gb24KICAgICAgdGhpcy5jdXJyZW50SW5mby5pZCA9IGtleSAvLyBkZXRhaWwg7KCV67O067OA6rK9CiAgICAgIGFsZXJ0KCfsu6jthY3siqTtirgg66mU64m0IO2RnOyLnCDsmIjsoJUnKQogICAgICAvLyBUT0RPCiAgICAgIC8vIOy7qO2FjeyKpO2KuCDrqZTribQg7ZGc7IucIOyYiOyglQogICAgICAvLyDrr7jrpqzrs7TquLAgLyDtgbTrnbzsmrDrk5wg65Oc65287J2067iM7JeQIOuzteyCrCAvIOymkOqyqOywvuq4sCDrk7HroZ0gLyDtg5zqt7gg7LaU6rCAIC8g67KE7KCEIO2RnOyLnCAvIOyCreygnAogICAgfQogIH0KfQo="},{"version":3,"sources":["storage_service.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgHA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;AAGA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"storage_service.vue","sourceRoot":"src/views/stroage_service","sourcesContent":["<template>\n  <article id=\"contents\" class=\"sub\">\n    <location/>\n\n    <div class=\"content\">\n      <div class=\"file_folder_list\">\n        <div class=\"board_search_edit\">\n          <div class=\"btn_edit left\">\n            <button type=\"button\" v-show=\"fileSelected\" @click=\"clickBtnDownload\">\n              <img src=\"@/assets/images/sub/btn_affe_download.png\" alt=\"\" class=\"ico\"/>\n              <span class=\"txt\">다운로드</span>\n            </button>\n            <button type=\"button\" v-show=\"fileSelected\" @click=\"clickBtnShare\">\n              <img src=\"@/assets/images/sub/btn_affe_share.png\" alt=\"\" class=\"ico\"/>\n              <span class=\"txt\">공유</span>\n            </button>\n            <button type=\"button\" v-show=\"fileSelected\" @click=\"clickBtnDelete\">\n              <img src=\"@/assets/images/sub/btn_affe_delete.png\" alt=\"\" class=\"ico\"/>\n              <span class=\"txt\">삭제</span>\n            </button>\n          </div>\n          <div class=\"ico_btn_edit right\">\n            <button type=\"button\" @click=\"templateType='list'\" v-show=\"templateType === 'thumbnail'\">\n              <img src=\"@/assets/images/sub/btn_affe_list.png\" alt=\"리스트형태\"/>\n            </button>\n            <button type=\"button\" @click=\"templateType='thumbnail'\" v-show=\"templateType === 'list'\">\n              <img src=\"@/assets/images/sub/btn_affe_thumbnail.png\" alt=\"썸네일형태\"/>\n            </button>\n            <button type=\"button\" @click=\"showDeletedFile = !showDeletedFile\" v-show=\"!showDeletedFile\">\n              <img src=\"@/assets/images/sub/ico_affe_delete_show.png\" alt=\"삭제된 파일 표시\"/>\n            </button>\n            <button type=\"button\" @click=\"showDeletedFile = !showDeletedFile\" v-show=\"showDeletedFile\">\n              <img src=\"@/assets/images/sub/ico_affe_delete_hide.png\" alt=\"삭제된 파일 감추기\"/>\n            </button>\n            <button type=\"button\" @click=\"refreshList\">\n              <img src=\"@/assets/images/sub/ico_affe_reload.png\" alt=\"새로고침\"/>\n            </button>\n          </div>\n        </div>\n\n        <!-- list -->\n        <table class=\"board_list\" v-if=\"templateType == 'list'\">\n          <caption>파일리스트</caption>\n          <colgroup>\n            <col style=\"width:70px\"/>\n            <col style=\"width:*px\"/>\n            <col style=\"width:150px\"/>\n            <col style=\"width:150px\"/>\n            <col style=\"width:200px\"/>\n          </colgroup>\n          <thead>\n          <tr>\n            <th scope=\"col\"><input type=\"checkbox\" title=\"전체선택\" v-model=\"checkedAll\"/></th>\n            <th scope=\"col\"><a href=\"javascript:void(0)\" class=\"sorting\">이름</a></th>\n            <th scope=\"col\"><a href=\"javascript:void(0)\" class=\"sorting on\">오너</a></th>\n            <th scope=\"col\"><a href=\"javascript:void(0)\" class=\"sorting\">변경일</a></th>\n            <th scope=\"col\">기타</th>\n          </tr>\n          </thead>\n          <tbody>\n          <tr v-for=\"item in list\" @click=\"clickRow(item.fi_id);toggleCheckedToList(item.fi_id);\" :key=\"item.fi_id\"\n              :class=\"{on: item.on}\">\n            <td>\n              <input type=\"checkbox\" title=\"선택\" v-model:cheked=\"item.checked\"/>\n            </td>\n            <td class=\"left\">\n              <img v-bind:src=\"item.icoImgUrl\" class=\"file_type\"/>\n              <a href=\"#\">{{ item.fi_name }}</a>\n            </td>\n            <td>{{ item.owner }} {{ item.fi_id }}</td>\n            <td>{{ fmtDate(item.fi_modifydate) }}</td>\n            <td class=\"item_edit\">\n              <button type=\"button\" @click.stop=\"clickBtnDownloadOne(item.fi_id)\"><i class=\"download\">다운로드</i></button>\n              <button type=\"button\" @click.stop=\"clickBtnShareOne(item.fi_id)\"><i class=\"share\">공유</i></button>\n              <button type=\"button\" @click.stop=\"clickBtnDetail(item.fi_id)\"><i class=\"detail\">상세보기</i></button>\n              <button type=\"button\" @click.stop=\"clickBtnEtc(item.fi_id)\"><i class=\"more\">더 많은</i></button>\n            </td>\n          </tr>\n          </tbody>\n        </table>\n\n        <!-- thumbnail -->\n        <ul class=\"board_thumbnail\" v-else-if=\"templateType == 'thumbnail'\">\n          <li v-for=\"item in list\" :key=\"item.fi_id\">\n            <label :class=\"{on: item.on}\">\n              <input type=\"checkbox\" v-model:cheked=\"item.checked\"/>\n              <span class=\"screen_shot\">\n                                <img v-bind:src=\"item.previewImgUrl\" alt=\"\" class=\"none_photo\"/>\n\n                <!-- 미리보기 있을 때 -->\n                <!--                                <img v-bind:src=\"item.previewImgUrl\" alt=\"\" :class=\"{none_photo: !isPhoto(item.type), photo: isPhoto(item.type)}\"/>-->\n                            </span>\n              <span class=\"file_name\">\n                                <img v-bind:src=\"item.icoImgUrl\" alt=\"\" class=\"ico\"/>{{ item.fi_name }}\n                            </span>\n            </label>\n          </li>\n        </ul>\n      </div>\n    </div>\n    <!-- 상세정보  Start -->\n    <DetailInfo :visible=\"currentInfo.isActive\" :currentTab=\"currentInfo.currentTab\"\n                :file_name=\"currentInfo.file_name\" :detail_info=\"currentInfo.detail_info\"/>\n    <!-- 상세정보  End -->\n    <!-- 모달 배경 -->\n    <div class=\"modal_bg\"></div>\n  </article>\n</template>\n\n<script>\n\n\n  import {contentMixin} from '../../common/contentMixin'\n  import $ from \"jquery\";\n\n  import DetailInfo from './detail_info.vue'\n\n  export default {\n    name: 'Share',\n    components: {\n      DetailInfo\n    },\n    mixins: [contentMixin],\n    data() {\n      return {\n        list: [\n          {\n            id: '',\n            name: '',\n            owner: '',\n            date: '',\n            type: '',\n            icoImgUrl: '',\n            PreviewImgUrl: '',\n            checked: false,\n            on: false\n          }\n        ],\n        file_list: [],\n        firstList: '',\n        templateType: 'list',\n        showDeletedFile: false,\n        /* 상세정보창 관련 */\n        currentInfo: {\n          id: '', // 현재 표시되는 정보의 id\n          isActive: false, // 활성화 여부\n          currentTab: 'detail', // 현재 탭\n          file_name: '',\n          detail_info: []\n\n        },\n        checked: false\n      }\n    },\n    computed: {\n\n      info() {\n        return this.list.getObjectById('id', this.currentInfo.id)\n      },\n      checkedAll: {\n\n        get() {\n          let count = 0\n\n          for (let i = 0; i < this.list.length; i++) {\n            if (this.list[i].checked) count++\n          }\n\n          return this.list.length === count\n        },\n        set(val) {\n          if (val) {\n            this.list.setAllObjProp('checked', true)\n          } else {\n            this.list.setAllObjProp('checked', false)\n          }\n        }\n      },\n      fileSelected() {\n        return this.list.countObjProp('checked', true) > 0\n      }\n    },\n    created() {\n      axios.get('/storage_service/google_drive/').then(resopnse => {\n\n        this.list = resopnse.data.data.file_list;\n        console.log(\"file_list======>\", this.list)\n\n      });\n\n\n      let list = this.list;\n      let i;\n\n\n      for (i = 0; i < list.length; i++) {\n        list[i].icoImgUrl = this.getFileUrl('ico_ft_' + list[i].type + '.png')\n        list[i].previewImgUrl = this.getFileUrl('preview_ft_' + list[i].type + '.png')\n      }\n\n      list = list.concat(JSON.parse(JSON.stringify(list)))\n\n      for (i = 0; i < list.length; i++) {\n        list[i].id = i + 1\n\n        if (list[i].id > 5) {\n          list[i].name = list[i].name.replace(/[1-9]/, list[i].id)\n        }\n      }\n      //\n      this.list = list\n      this.firstList = JSON.parse(JSON.stringify(list))\n    },\n    mounted() {\n      $(document).ready(function ($) {\n\n        jQuery(\"article#contents.sub .content\").mCustomScrollbar({\n          theme: \"minimal-dark\"\n        });\n\n        //셀렉트박스 UI\n        jQuery(\".selectbox_ui\").each(function () {\n          initSelectBox(jQuery(this)) //비동기로 셀렉트 박스를 만들었을 경우 initSelectBox(jQuery(\"#아이디\")) 로 실행시켜줘야 함\n        })\n      });\n\n      // 새로고침 시, 선택된 메뉴의 상위 메뉴 opened\n      if (this.currentUpperMenu != undefined) {\n\n        this.isOpened[this.currentUpperMenu] = true;\n      }\n    },\n    methods: {\n\n      isPhoto(type) {\n        return type === 'photo'\n      },\n\n      /* 상단 다운로드 클릭 */\n      clickBtnDownload() {\n\n        const count = this.list.countObjProp('checked', true);\n\n        alert(`${count}개가 선택되었습니다. 다운로드?`);\n\n        // TODO\n        // 모달창 팝업 예정\n        // 멀티 선택시, ZIP파일로 다운로드 진행\n      },\n\n      /* 상단 공유 클릭 */\n      clickBtnShare() {\n\n        const count = this.list.countObjProp('checked', true);\n\n        alert(`${count}개가 선택되었습니다. 공유?`);\n\n        // TODO\n        // 모달창 팝업 예정\n      },\n\n      /* 상단 삭제 클릭 */\n      clickBtnDelete() {\n\n        const count = this.list.countObjProp('checked', true);\n\n        alert(`${count}개가 선택되었습니다. 삭제?`);\n\n        // TODO\n        // 모달창 팝업 예정\n      },\n\n      /* 상단 새로고침 클릭 */\n      refreshList() {\n        this.list = JSON.parse(JSON.stringify(this.firstList))\n      },\n\n      /* row 클릭 */\n      clickRow(key) {\n        this.onlyOneOnToList(key) // on\n        this.currentInfo.id = key // detail 정보변경\n      },\n\n      /* row 하나에만 on */\n      onlyOneOnToList(key) {\n        this.list.setAllObjProp('on', false)\n        this.list.getObjectById('id', key).on = true\n      },\n\n      /* toggle row checked */\n      toggleCheckedToList(key) {\n        const item = this.list.getObjectById('id', key)\n        item.checked = !item.checked\n      },\n\n      /* 다운로드 클릭 */\n      clickBtnDownloadOne(key) {\n        this.onlyOneOnToList(key) // on\n        this.currentInfo.id = key // detail 정보변경\n        alert('다운로드?')\n\n        // TODO\n        // 모달창 팝업 예정\n      },\n\n      /* 공유 클릭 */\n      clickBtnShareOne(key) {\n        this.onlyOneOnToList(key) // on\n        this.currentInfo.id = key // detail 정보변경\n        alert('공유?')\n\n        // TODO\n        // 모달창 팝업 예정\n      },\n\n      /* 상세보기 클릭 */\n      clickBtnDetail(key) {\n\n        console.log(\"key==>\", key)\n\n        if (!this.currentInfo.isActive) {\n          this.currentInfo.currentTab = 'detail'\n        }\n\n        let item = this.list.getObjectById('fi_id', key);\n\n        console.log(\"detail_info\", item)\n        this.currentInfo.detail_info = item\n\n\n        this.currentInfo.isActive = this.currentInfo.id == key ? !this.currentInfo.isActive : true\n\n        this.onlyOneOnToList(key) // on\n        this.currentInfo.id = key // detail 정보변경\n      },\n\n      clickBtnEtc(key) {\n        this.onlyOneOnToList(key) // on\n        this.currentInfo.id = key // detail 정보변경\n        alert('컨텍스트 메뉴 표시 예정')\n        // TODO\n        // 컨텍스트 메뉴 표시 예정\n        // 미리보기 / 클라우드 드라이브에 복사 / 즐겨찾기 등록 / 태그 추가 / 버전 표시 / 삭제\n      }\n    }\n  }\n</script>\n\n<style>\n</style>\n"]}]}