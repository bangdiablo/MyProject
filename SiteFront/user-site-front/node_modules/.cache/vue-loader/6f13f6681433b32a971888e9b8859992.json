{"remainingRequest":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/src/views/management/user_server/MailInvitation.vue?vue&type=style&index=0&id=014e7d6c&scoped=true&lang=css&","dependencies":[{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/src/views/management/user_server/MailInvitation.vue","mtime":1582876129757},{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmJvYXJkX2J0bl9zZXQgewogICAgdGV4dC1hbGlnbjogbGVmdDsKfQo="},{"version":3,"sources":["MailInvitation.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6IA;AACA;AACA","file":"MailInvitation.vue","sourceRoot":"src/views/management/user_server","sourcesContent":["<template>\n\n    <article id=\"contents\" class=\"sub\">\n      <location/>\n\n      <div class=\"content\">\n        <p class=\"intro_guide\">사용자는 발송된 초대 메일의 링크에서 AOSBOX AI plus의 이용 개시 절차를 실시합니다.</p>\n        <table class=\"board_view\">\n          <caption>메일로 초대</caption>\n          <colgroup>\n            <col style=\"width:180px\"/>\n            <col style=\"width:*\"/>\n          </colgroup>\n          <tbody>\n          <tr>\n            <th scope=\"row\"><label for=\"mailAdress\">메일 주소</label></th>\n            <td>\n<!--                <div class=\"bootstrap-tagsinput\"></div>-->\n                <input id=\"savedInput\" type=\"text\" ref=\"emails\">\n<!--                <input id=\"savedInput\" type=\"text\" value=\"\" data-role=\"tagsinput\" style=\"display: none;\">-->\n<!--              <input type=\"email\" id=\"mailAdress\" style=\"width: 340px\"/>-->\n<!--              <p class=\"error_msg\">이름을 입력해주세요.</p>-->\n              <p class=\"add_option\">메일 주소는 쉼표, 세미 콜론 또는 공백으로 구분합니다</p>\n            </td>\n          </tr>\n          <tr>\n            <th scope=\"row\"><label for=\"mailSubject\">제목</label></th>\n            <td>\n              <input type=\"text\" id=\"mailSubject\" style=\"width:100%\" ref=\"subject\"/>\n            </td>\n          </tr>\n          <tr>\n            <th scope=\"row\"><label for=\"mailMessege\">메시지</label></th>\n            <td>\n              <textarea name=\"\" id=\"\" cols=\"30\" rows=\"10\" style=\"width:100%; height:276px\" ref=\"message\"></textarea>\n              <p class=\"add_option\">AOSBOX AI plus를 셋업 하는 방법을 지시하기 위한 글을 추가합니다</p>\n            </td>\n          </tr>\n          </tbody>\n        </table>\n        <div class=\"board_btn_set\">\n          <button type=\"button\" class=\"btn_basic submit\" @click=\"requestSendEmail\">보내기</button>\n          <router-link to=\"/management/user_server\"><button type=\"button\" class=\"btn_basic cancel\">취소</button></router-link>\n        </div>\n        <ul class=\"desc_list\">\n          <li>수동으로 유저를 추가하려면 <router-link to=\"/management/user_server/manual_invitation\">수동으로 추가</router-link>를 사용합니다.</li>\n          <li>복수의 유저를 일괄적으로 추가하려면 <router-link to=\"/management/user_server/csv_invitation\">CSV파일에서 일괄 추가</router-link>를 사용합니다.</li>\n        </ul>\n      </div>\n    </article>\n\n</template>\n\n<script>\n    import '@/plugins/bootstrap-tagsinput.js';\n\n    export default {\n        name: \"MailInvitation\",\n        methods: {\n\n            // 메일로 초대 보내기\n            requestSendEmail() {\n\n                let qs = require('qs'),\n                    emails = this.$refs.emails.value,\n                    subject = this.$refs.subject.value.trim(),\n                    message = this.$refs.message.value.trim();\n\n                if (emails === \"\") {\n\n                    alert(\"이메일을 입력해주세요.\");\n                    return;\n                }\n\n                if (subject === \"\") {\n\n                    alert(\"제목을 입력해주세요.\");\n                    return;\n                }\n\n                if (message === \"\") {\n\n                    alert(\"메시지를 입력해주세요.\");\n                    return;\n                }\n\n                axios.post(\"/management/sendEmail/\", qs.stringify({\n                    'emails': emails,\n                    'subject': subject,\n                    'message': message\n                })).then(result => {\n\n                    let data = result.data;\n\n                    if (data.code === 1000) {\n\n                        alert(\"메일이 발송되었습니다.\");\n                        $(this.$refs.emails).tagsinput('removeAll');\n                        this.$refs.subject.value = '';\n                        this.$refs.message.value = '';\n                    }\n\n                }).catch(ex => {\n\n                    console.log(ex);\n                });\n            }\n        },\n        mounted() {\n\n            let emailTags = $('#savedInput').on('beforeItemAdd', function (event) {\n\n                event.cancel = !IsValidEmailAddress(event.item);\n\n            }).on('itemAdded itemRemoved', function (event) {\n\n                // AffectCapacity();\n\n            }).tagsinput({\n                delimiterRegex: /[;,\\s]+/,\n                trimValue: true\n            });\n\n            function IsValidEmailAddress(emailAddress) {\n\n                if (!isAsciiString(emailAddress) || emailAddress.length > 64) {\n                    return false;\n                }\n                let pattern = new RegExp(/^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,15}(?:\\.[a-z]{2})?)$/i);\n\n                return pattern.test($.trim(emailAddress));\n            }\n\n            function isAsciiString(str) {\n                return (/^[\\x00-\\x7F]*$/).test(str);\n            }\n        }\n    }\n</script>\n\n<style scoped>\n.board_btn_set {\n    text-align: left;\n}\n</style>\n"]}]}