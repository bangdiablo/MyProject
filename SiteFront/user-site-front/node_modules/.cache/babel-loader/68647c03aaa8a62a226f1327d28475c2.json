{"remainingRequest":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/babel-loader/lib/index.js!/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/src/common/commonMethodsMixin.js","dependencies":[{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/src/common/commonMethodsMixin.js","mtime":1582876129739},{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZXhwb3J0IGNvbnN0IGNvbW1vbk1ldGhvZHNNaXhpbiA9IHsKICBtZXRob2RzOiB7CiAgICAvLyDsiKvsnpAg7IS4IOyekOumrOyImCDsu7Trp4goLCkKICAgIG51bWJlcldpdGhDb21tYXMoeCkgewogICAgICBsZXQgdmFsdWU7CgogICAgICB0cnkgewogICAgICAgIHZhbHVlID0geC50b1N0cmluZygpLnJlcGxhY2UoL1xCKD89KFxkezN9KSsoPyFcZCkpL2csICIsIik7CiAgICAgIH0gY2F0Y2ggKGV4KSB7CiAgICAgICAgY29uc29sZS5sb2coZXgpOwogICAgICAgIGNvbnNvbGUubG9nKHgpOwogICAgICB9CgogICAgICByZXR1cm4gdmFsdWU7CiAgICB9LAoKICAgIC8vIOyKpO2GoOumrOyngCDsgqzsmqkg7KSRIOyaqeufiSDtkZzsi5wKICAgIGV4cHJlc3NVc2VkKHZhbHVlLCB1bml0KSB7CiAgICAgIGxldCByZXN1bHQ7CiAgICAgIHVuaXQgPSB1bml0ID09PSB1bmRlZmluZWQgPyAiIEdCIiA6ICIg7Y6Y7J207KeAIjsKICAgICAgaWYgKHZhbHVlID09IG51bGwpIHZhbHVlID0gMDsKICAgICAgcmVzdWx0ID0gdGhpcy5udW1iZXJXaXRoQ29tbWFzKHZhbHVlKSArIHVuaXQ7CiAgICAgIDsKICAgICAgcmV0dXJuIHJlc3VsdDsKICAgIH0sCgogICAgLy8g7Iqk7Yag66as7KeAIOyaqeufiSDsoJztlZwg7ZGc7IucCiAgICBleHByZXNzTGltaXQodmFsdWUsIHVuaXQpIHsKICAgICAgbGV0IHJlc3VsdDsKICAgICAgdW5pdCA9IHVuaXQgPT09IHVuZGVmaW5lZCA/ICIgR0IiIDogIiDtjpjsnbTsp4AiOwogICAgICBpZiAodmFsdWUgPT0gMCB8fCB2YWx1ZSA9PT0gdW5kZWZpbmVkIHx8IHZhbHVlID09PSBudWxsKSByZXN1bHQgPSAi7KCc7ZWc7JeG7J2MIjtlbHNlIHJlc3VsdCA9IHRoaXMubnVtYmVyV2l0aENvbW1hcyh2YWx1ZSkgKyB1bml0OwogICAgICByZXR1cm4gcmVzdWx0OwogICAgfSwKCiAgICAvLyDrgqDsp5wg7ZGc7IucCiAgICBleHByZXNzRGF0ZSh2YWx1ZSwgZGl2aWRlQ2hhcikgewogICAgICBsZXQgZGF0ZUFyciA9IFsneXl5eScsICdNTScsICdkZCddLAogICAgICAgICAgZGF0ZUZvcm1hdDsKICAgICAgaWYgKHZhbHVlID09PSBudWxsKSByZXR1cm4gIi0iOwogICAgICBpZiAoZGl2aWRlQ2hhcikgZGF0ZUZvcm1hdCA9IGRhdGVBcnIuam9pbihkaXZpZGVDaGFyKTtlbHNlIGRhdGVGb3JtYXQgPSBkYXRlQXJyLmpvaW4oJy4nKTsKICAgICAgcmV0dXJuIG5ldyBEYXRlKHZhbHVlKS5mb3JtYXQoZGF0ZUZvcm1hdCk7CiAgICB9CgogIH0KfTs="},{"version":3,"sources":["/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/src/common/commonMethodsMixin.js"],"names":["commonMethodsMixin","methods","numberWithCommas","x","value","toString","replace","ex","console","log","expressUsed","unit","result","undefined","expressLimit","expressDate","divideChar","dateArr","dateFormat","join","Date","format"],"mappings":"AAAA,OAAO,MAAMA,kBAAkB,GAAG;AAE9BC,EAAAA,OAAO,EAAE;AAEL;AACAC,IAAAA,gBAAgB,CAACC,CAAD,EAAI;AAEhB,UAAIC,KAAJ;;AAEA,UAAI;AAEAA,QAAAA,KAAK,GAAED,CAAC,CAACE,QAAF,GAAaC,OAAb,CAAqB,uBAArB,EAA8C,GAA9C,CAAP;AACH,OAHD,CAGE,OAAOC,EAAP,EAAW;AAETC,QAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYN,CAAZ;AACH;;AAGD,aAAOC,KAAP;AACH,KAlBI;;AAoBL;AACAM,IAAAA,WAAW,CAACN,KAAD,EAAQO,IAAR,EAAc;AAErB,UAAIC,MAAJ;AACAD,MAAAA,IAAI,GAAGA,IAAI,KAAKE,SAAT,GAAqB,KAArB,GAA6B,MAApC;AAEA,UAAIT,KAAK,IAAI,IAAb,EACIA,KAAK,GAAG,CAAR;AAEJQ,MAAAA,MAAM,GAAG,KAAKV,gBAAL,CAAsBE,KAAtB,IAA+BO,IAAxC;AAA6C;AAE7C,aAAOC,MAAP;AACH,KAhCI;;AAkCL;AACAE,IAAAA,YAAY,CAACV,KAAD,EAAQO,IAAR,EAAc;AAEtB,UAAIC,MAAJ;AACAD,MAAAA,IAAI,GAAGA,IAAI,KAAKE,SAAT,GAAqB,KAArB,GAA6B,MAApC;AAEA,UAAIT,KAAK,IAAI,CAAT,IAAcA,KAAK,KAAKS,SAAxB,IAAqCT,KAAK,KAAK,IAAnD,EACIQ,MAAM,GAAG,MAAT,CADJ,KAGIA,MAAM,GAAG,KAAKV,gBAAL,CAAsBE,KAAtB,IAA+BO,IAAxC;AAEJ,aAAOC,MAAP;AACH,KA9CI;;AAgDL;AACAG,IAAAA,WAAW,CAACX,KAAD,EAAQY,UAAR,EAAoB;AAE3B,UAAIC,OAAO,GAAG,CAAC,MAAD,EAAS,IAAT,EAAe,IAAf,CAAd;AAAA,UACIC,UADJ;AAGA,UAAId,KAAK,KAAK,IAAd,EACI,OAAO,GAAP;AAEJ,UAAIY,UAAJ,EACIE,UAAU,GAAGD,OAAO,CAACE,IAAR,CAAaH,UAAb,CAAb,CADJ,KAGIE,UAAU,GAAGD,OAAO,CAACE,IAAR,CAAa,GAAb,CAAb;AAEJ,aAAO,IAAIC,IAAJ,CAAShB,KAAT,EAAgBiB,MAAhB,CAAuBH,UAAvB,CAAP;AACH;;AA/DI;AAFqB,CAA3B","sourcesContent":["export const commonMethodsMixin = {\n\n    methods: {\n\n        // 숫자 세 자리수 컴마(,)\n        numberWithCommas(x) {\n\n            let value;\n\n            try {\n\n                value= x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n            } catch (ex) {\n\n                console.log(ex)\n                console.log(x)\n            }\n\n\n            return value;\n        },\n\n        // 스토리지 사용 중 용량 표시\n        expressUsed(value, unit) {\n\n            let result;\n            unit = unit === undefined ? \" GB\" : \" 페이지\";\n\n            if (value == null)\n                value = 0;\n\n            result = this.numberWithCommas(value) + unit;;\n\n            return result;\n        },\n\n        // 스토리지 용량 제한 표시\n        expressLimit(value, unit) {\n\n            let result;\n            unit = unit === undefined ? \" GB\" : \" 페이지\";\n\n            if (value == 0 || value === undefined || value === null)\n                result = \"제한없음\";\n            else\n                result = this.numberWithCommas(value) + unit;\n\n            return result;\n        },\n\n        // 날짜 표시\n        expressDate(value, divideChar) {\n\n            let dateArr = ['yyyy', 'MM', 'dd'],\n                dateFormat;\n\n            if (value === null)\n                return \"-\";\n\n            if (divideChar)\n                dateFormat = dateArr.join(divideChar);\n            else\n                dateFormat = dateArr.join('.');\n\n            return new Date(value).format(dateFormat);\n        },\n    }\n}"]}]}