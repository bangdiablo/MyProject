{"remainingRequest":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/babel-loader/lib/index.js!/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/src/views/main/before_login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/src/views/main/before_login.vue","mtime":1576561387433},{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGNvbnN0YW50cyBmcm9tICcuLi8uLi9wbHVnaW5zL2NvbnN0YW50cyc7CmltcG9ydCBiZWZvcmVfbG9naW5faGVhZGVyIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvaGVhZGVyL2JlZm9yZV9sb2dpbl9oZWFkZXInOwppbXBvcnQgYmVmb3JlX2xvZ2luX2Zvb3RlciBmcm9tICcuLi8uLi9jb21wb25lbnRzL2Zvb3Rlci9iZWZvcmVfbG9naW5fZm9vdGVyJzsKaW1wb3J0IHNqY2wgZnJvbSAnc2pjbCc7CmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZW1haWw6ICcnLAogICAgICBwYXNzd29yZDogJycsCiAgICAgIHJlbWVtYmVyOiBmYWxzZSwKICAgICAgbGFuZ3VhZ2U6ICdLTycsCiAgICAgIHZhbGlkOiB7CiAgICAgICAgZW1haWw6IHsKICAgICAgICAgICdoYXMtdmFsdWUnOiBmYWxzZSwKICAgICAgICAgICdoYXMtZXJyb3InOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgcGFzc3dvcmQ6IHsKICAgICAgICAgICdoYXMtdmFsdWUnOiBmYWxzZSwKICAgICAgICAgICdoYXMtZXJyb3InOiBmYWxzZQogICAgICAgIH0KICAgICAgfSwKICAgICAgaW52YWxpZEVtYWlsT3JQYXNzd29yZDogZmFsc2UsCiAgICAgIGVuY3J5cHRQYXNzd29yZDogJ2xlZ2FsdGVjaCcsCiAgICAgIGZhaWxMb2dpbk1lc3NhZ2U6IHRoaXMuJHQoJ2NvbW1vbi5jb21tZW50LmludmFsaWRFbWFpbCcpCiAgICB9OwogIH0sCgogIGNvbXB1dGVkOiB7CiAgICB2YWxpZEVtYWlsKCkgewogICAgICByZXR1cm4gdGhpcy52YWxpZC5lbWFpbFsnaGFzLXZhbHVlJ10gJiYgIXRoaXMudmFsaWQuZW1haWxbJ2hhcy1lcnJvciddOwogICAgfSwKCiAgICB2YWxpZFBhc3N3b3JkKCkgewogICAgICByZXR1cm4gdGhpcy52YWxpZC5wYXNzd29yZFsnaGFzLXZhbHVlJ10gJiYgIXRoaXMudmFsaWQucGFzc3dvcmRbJ2hhcy1lcnJvciddOwogICAgfQoKICB9LAogIGNvbXBvbmVudHM6IHsKICAgICdiZWZvcmUtbG9naW4taGVhZGVyJzogYmVmb3JlX2xvZ2luX2hlYWRlciwKICAgICdiZWZvcmUtbG9naW4tZm9vdGVyJzogYmVmb3JlX2xvZ2luX2Zvb3RlcgogIH0sCiAgbWV0aG9kczogewogICAgb25Mb2dpbigpIHsKICAgICAgaWYgKHRoaXMudmFsaWRFbWFpbCAmJiB0aGlzLnZhbGlkUGFzc3dvcmQpIHsKICAgICAgICAvLyDquLDslrXtlZjquLAg7IucLCDsv6DtgqQg7IOd7ISxCiAgICAgICAgaWYgKHRoaXMucmVtZW1iZXIpIHsKICAgICAgICAgIHRoaXMuJGNvb2tpZXMuc2V0KCJjdnZfdCIsIHNqY2wuZW5jcnlwdCh0aGlzLmVuY3J5cHRQYXNzd29yZCwgdGhpcy5lbWFpbCksIEluZmluaXR5KTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGhpcy4kY29va2llcy5yZW1vdmUoImN2dl90Iik7CiAgICAgICAgfSAvLyDroZzqt7jsnbgg7Iuc64+ECgoKICAgICAgICBsZXQgcXMgPSByZXF1aXJlKCdxcycpOwoKICAgICAgICBheGlvcy5wb3N0KCcvbWFpbi9sb2dpbi8nLCBxcy5zdHJpbmdpZnkoewogICAgICAgICAgJ2VtYWlsJzogdGhpcy5lbWFpbCwKICAgICAgICAgICdwYXNzd29yZCc6IHRoaXMucGFzc3dvcmQsCiAgICAgICAgICAnbGFuZ3VhZ2UnOiB0aGlzLmxhbmd1YWdlCiAgICAgICAgfSkpLnRoZW4ocmVzdWx0ID0+IHsKICAgICAgICAgIC8vIHJlcXVlc3QuZ2V0UmVzcG9uc2VIZWFkZXIoJ3NvbWVfaGVhZGVyJykKICAgICAgICAgIGxldCBkYXRhID0gcmVzdWx0LmRhdGE7IC8vIOyEseqztSDsi5wKCiAgICAgICAgICBpZiAoZGF0YS5jb2RlID09IDEwMDApIHsKICAgICAgICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ21haW4vc2V0QWRtaW4nLCBkYXRhLmlzQWRtaW4pOyAvLyDqtIDrpqzsnpAg7Jes67aAIOyEpOyglQoKICAgICAgICAgICAgdGhpcy4kcm91dGVyLnB1c2goJy8nKTsgLy8g66mU7J247ZmU66m0IOydtOuPmQogICAgICAgICAgICAvLyDsi6TtjKgg7IucCiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAvLyDruYTtmZzshLHtmZQg7Jyg7KCAICgtMjAwMikKICAgICAgICAgICAgaWYgKGRhdGEuY29kZSA9PSAtMjAwMikgewogICAgICAgICAgICAgIHRoaXMuZmFpbExvZ2luTWVzc2FnZSA9IHRoaXMuJHQoJ2NvbW1vbi5jb21tZW50LmZhaWxUb0xvZ2luX2luYWN0aXZlJyk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgdGhpcy5mYWlsTG9naW5NZXNzYWdlID0gdGhpcy4kdCgnY29tbW9uLmNvbW1lbnQuZmFpbFRvTG9naW4nKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgdGhpcy5pbnZhbGlkRW1haWxPclBhc3N3b3JkID0gdHJ1ZTsKICAgICAgICAgIH0KICAgICAgICB9KS5jYXRjaChleCA9PiB7CiAgICAgICAgICBjb25zb2xlLmxvZyhleCk7CiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0sCgogICAgLy8gY2hlY2sgZW1haWwgYWRyZXNzCiAgICBjaGVja0VtYWlsKCkgewogICAgICBsZXQgY29tbWVudCA9ICIiOyAvLyBlbWFpbOydtCDruYTslrTsnojripTsp4Ag7ZmV7J24CgogICAgICBpZiAodGhpcy5lbWFpbCA9PSAiIikgewogICAgICAgIGNvbW1lbnQgPSB0aGlzLiR0KCdjb21tb24uY29tbWVudC5lc3NlbnRpYWwnKTsKICAgICAgICB0aGlzLnZhbGlkLmVtYWlsWyJoYXMtZXJyb3IiXSA9IHRydWU7IC8vIGVtYWls7J20IOycoO2aqO2VnOyngCDtmZXsnbgKICAgICAgfSBlbHNlIGlmICghY2hlY2tFbWFpbCh0aGlzLmVtYWlsKSkgewogICAgICAgIGNvbW1lbnQgPSB0aGlzLiR0KCdjb21tb24uY29tbWVudC5pbnZhbGlkRW1haWwnKTsKICAgICAgICB0aGlzLnZhbGlkLmVtYWlsWyJoYXMtZXJyb3IiXSA9IHRydWU7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy52YWxpZC5lbWFpbFsiaGFzLWVycm9yIl0gPSBmYWxzZTsKICAgICAgfQoKICAgICAgdGhpcy52YWxpZC5lbWFpbFsiaGFzLXZhbHVlIl0gPSB0cnVlOwogICAgICB0aGlzLiRyZWZzLmNvbW1lbnRUb0VtYWlsLmlubmVySFRNTCA9ICIiOwoKICAgICAgaWYgKHRoaXMudmFsaWQuZW1haWxbImhhcy1lcnJvciJdKSB7CiAgICAgICAgdGhpcy4kcmVmcy5jb21tZW50VG9FbWFpbC5pbm5lckhUTUwgPSBjb21tZW50OwogICAgICB9CiAgICB9LAoKICAgIC8vIGNoZWNrIHBhc3N3b3JkCiAgICBjaGVja1Bhc3N3b3JkKCkgewogICAgICBsZXQgY29tbWVudCA9ICIiOyAvLyBwYXNzd29yZOqwgCDruYTslrTsnojripTsp4Ag7ZmV7J24CgogICAgICBpZiAodGhpcy5wYXNzd29yZCA9PSAiIikgewogICAgICAgIGNvbW1lbnQgPSB0aGlzLiR0KCdjb21tb24uY29tbWVudC5lc3NlbnRpYWwnKTsKICAgICAgICB0aGlzLnZhbGlkLnBhc3N3b3JkWyJoYXMtZXJyb3IiXSA9IHRydWU7IC8vIHBhc3N3b3Jk6rCAIDbsnpDrpqwg7J207IOB7J247KeAIO2ZleyduAogICAgICB9IGVsc2UgaWYgKHRoaXMucGFzc3dvcmQubGVuZ3RoIDwgNikgewogICAgICAgIGNvbW1lbnQgPSB0aGlzLiR0KCdjb21tb24uY29tbWVudC50b29TaG9ydFBhc3N3b3JkJyk7CiAgICAgICAgdGhpcy52YWxpZC5wYXNzd29yZFsiaGFzLWVycm9yIl0gPSB0cnVlOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMudmFsaWQucGFzc3dvcmRbImhhcy1lcnJvciJdID0gZmFsc2U7CiAgICAgIH0KCiAgICAgIHRoaXMudmFsaWQucGFzc3dvcmRbImhhcy12YWx1ZSJdID0gdHJ1ZTsKICAgICAgdGhpcy4kcmVmcy5jb21tZW50VG9QYXNzd29yZC5pbm5lckhUTUwgPSAiIjsKCiAgICAgIGlmICh0aGlzLnZhbGlkLnBhc3N3b3JkWyJoYXMtZXJyb3IiXSkgewogICAgICAgIHRoaXMuJHJlZnMuY29tbWVudFRvUGFzc3dvcmQuaW5uZXJIVE1MID0gY29tbWVudDsKICAgICAgfQogICAgfQoKICB9LAoKICBtb3VudGVkKCkgewogICAgLy8gVEVTVCDqs4TsoJUKICAgIGlmIChjb25zdGFudHMuVEVTVCkgewogICAgICB0aGlzLmVtYWlsID0gJ3Rlc3QwMkB0ZXN0LmNvbSc7CiAgICAgIHRoaXMucGFzc3dvcmQgPSAnMTIzNCc7CiAgICB9IC8vIGlmICh0aGlzLmVtYWlsID09ICcnIHx8IHRoaXMucGFzc3dvcmQgPT0gJycpIHsKICAgIC8vICAgICB0aGlzLiRyZWZzLmJ0bkxvZ2luLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICcjNTg1ODU4JzsKICAgIC8vICAgICB0aGlzLiRyZWZzLmJ0bkxvZ2luLmRpc2FibGVkID0gdHJ1ZTsKICAgIC8vIH0gZWxzZSB7CiAgICAvLyAgICAgdGhpcy4kcmVmcy5idG5Mb2dpbi5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAnIzUzQTlFNCc7CiAgICAvLyAgICAgdGhpcy4kcmVmcy5idG5Mb2dpbi5kaXNhYmxlZCA9IGZhbHNlOwogICAgLy8gfQoKCiAgICBjb25zb2xlLmxvZyh0aGlzLiRpMThuLmxvY2FsZSk7IC8vIGxldCBjaXBoZXJ0ZXh0ID0gc2pjbC5lbmNyeXB0KCJsZWdhbHRlY2giLCAiSGVsbG8gV29ybGQhIikKICAgIC8vIGNvbnNvbGUubG9nKGNpcGhlcnRleHQpCiAgICAvLyBjb25zb2xlLmxvZyhwbGFpbnRleHQpCiAgICAvLyDsnbTrqZTsnbwsIOq4sOyWte2VmOq4sCDshLjtjIUKCiAgICBsZXQgY3Z2X3QgPSB0aGlzLiRjb29raWVzLmdldCgiY3Z2X3QiKTsKCiAgICBpZiAoY3Z2X3QgIT0gdW5kZWZpbmVkKSB7CiAgICAgIHRoaXMuZW1haWwgPSBzamNsLmRlY3J5cHQodGhpcy5lbmNyeXB0UGFzc3dvcmQsIEpTT04uc3RyaW5naWZ5KGN2dl90KSk7CiAgICAgIHRoaXMucmVtZW1iZXIgPSB0cnVlOwogICAgICB0aGlzLmNoZWNrRW1haWwoKTsKICAgIH0KICB9Cgp9OwoKZnVuY3Rpb24gY2hlY2tFbWFpbChlbWFpbCkgewogIGxldCByZWdleCA9IC8oW1x3LS5dKylAKChcW1swLTldezEsM31cLlswLTldezEsM31cLlswLTldezEsM31cLil8KChbXHctXStcLikrKSkoW2EtekEtWl17Miw0fXxbMC05XXsxLDN9KShcXT8pJC87CiAgcmV0dXJuIGVtYWlsICE9ICcnICYmIGVtYWlsICE9ICd1bmRlZmluZWQnICYmIHJlZ2V4LnRlc3QoZW1haWwpOwp9"},{"version":3,"sources":["before_login.vue"],"names":[],"mappings":"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","sourcesContent":["<!--    메인 표시되는 화면은 폴더명 == 파일명으로 사용바랍니다.            -->\n<template>\n    <div id=\"member_container\">\n        <section id=\"member_info\">\n            <before-login-header/>\n            <div class=\"member_form\">\n                <h2>{{$t('before_login.button_login')}}</h2>\n                <div class=\"visual\">\n                    <img src=\"@/assets/images/member/visual_login.png\" alt=\"\"/>\n                </div>\n                <fieldset>\n                    <legend>로그인정보 입력</legend>\n                    <p class=\"field\">\n                        <label for=\"memberId\">{{ $t('before_login.input_email') }}</label>\n                        <input type=\"text\" :placeholder=\"$t('before_login.input_email')\" id=\"memberId\" :class=\"{'has-value':valid.email['has-value'], 'has-error':valid.email['has-error']}\" v-model=\"email\" @change=\"checkEmail\"/>\n                        <span class=\"input-image green\" v-if=\"validEmail\">{{ $t('common.comment.valid') }}</span>\n                    </p>\n                    <div class=\"input-error\">\n                        <span class=\"red\" ref=\"commentToEmail\"></span>\n                    </div>\n\n                    <p class=\"field\">\n                        <label for=\"memberPw\">{{ $t('before_login.input_password') }}</label>\n                        <input type=\"password\" :placeholder=\"$t('before_login.input_password')\" id=\"memberPw\" :class=\"{'has-value':valid.password['has-value'], 'has-error':valid.password['has-error']}\" v-model=\"password\" @keyup.enter=\"onLogin\" @change=\"checkPassword\" />\n                        <span class=\"input-image green\" v-if=\"validPassword\">{{ $t('common.comment.valid') }}</span>\n                    </p>\n                    <div class=\"input-error\">\n                        <span class=\"red\" ref=\"commentToPassword\"></span>\n                    </div>\n\n                    <p class=\"save_login_info\">\n                        <label><input type=\"checkbox\" v-model=\"remember\"/>{{ $t('before_login.checkbox_memory') }}</label>\n                    </p>\n                    <p class=\"error_msg red\" v-if=\"invalidEmailOrPassword\">{{ failLoginMessage }}</p>\n                    <p class=\"btn_set\">\n                        <button type=\"button\" @click=\"onLogin\" ref=\"btnLogin\">{{$t('before_login.button_login')}}\n                        </button>\n                    </p>\n                    <p class=\"find_password\">\n                        {{ $t('before_login.msg_password') }}<router-link to=\"/find_password\">{{ $t('before_login.msg_click') }}</router-link>\n                    </p>\n                </fieldset>\n            </div>\n            <before-login-footer/>\n        </section>\n    </div>\n</template>\n\n<script>\n\n    import constants from '../../plugins/constants'\n    import before_login_header from '../../components/header/before_login_header'\n    import before_login_footer from '../../components/footer/before_login_footer'\n    import sjcl from 'sjcl'\n\n    export default {\n        data() {\n            return {\n                email: '',\n                password: '',\n                remember: false,\n                language: 'KO',\n                valid : {\n                    email: {\n                        'has-value': false,\n                        'has-error': false\n                    },\n                    password: {\n                        'has-value': false,\n                        'has-error': false\n                    }\n                },\n                invalidEmailOrPassword : false,\n                encryptPassword: 'legaltech',\n                failLoginMessage : this.$t('common.comment.invalidEmail')\n            }\n        },\n        computed: {\n            validEmail () {\n\n                return this.valid.email['has-value'] && !this.valid.email['has-error'];\n            },\n            validPassword () {\n\n              return this.valid.password['has-value'] && !this.valid.password['has-error'];\n          }\n        },\n        components: {\n            'before-login-header': before_login_header,\n            'before-login-footer': before_login_footer,\n        },\n        methods: {\n            onLogin() {\n\n                 if (this.validEmail && this.validPassword) {\n\n                    // 기억하기 시, 쿠키 생성\n                    if (this.remember) {\n\n                        this.$cookies.set(\"cvv_t\", sjcl.encrypt(this.encryptPassword, this.email), Infinity);\n\n                    } else {\n\n                        this.$cookies.remove(\"cvv_t\");\n                    }\n\n                    // 로그인 시도\n                    let qs = require('qs');\n\n                    axios.post('/main/login/',\n                        qs.stringify({\n                        'email': this.email,\n                        'password': this.password,\n                        'language': this.language\n\n                        })).then(result => {\n                        // request.getResponseHeader('some_header')\n\n                            let data = result.data;\n\n                            // 성공 시\n                            if (data.code == 1000) {\n\n                                this.$store.dispatch('main/setAdmin', data.isAdmin);    // 관리자 여부 설정\n                                this.$router.push('/');                                 // 메인화면 이동\n\n                            // 실패 시\n                            } else {\n\n                                // 비활성화 유저 (-2002)\n                                if (data.code == -2002) {\n\n                                    this.failLoginMessage = this.$t('common.comment.failToLogin_inactive');\n\n                                } else {\n\n                                    this.failLoginMessage = this.$t('common.comment.failToLogin');\n                                }\n\n                                this.invalidEmailOrPassword = true;\n                            }\n\n                         }).catch(ex => {\n                             console.log(ex);\n                    });\n                }\n            },\n\n            // check email adress\n            checkEmail() {\n\n                let comment = \"\";\n\n                // email이 비어있는지 확인\n                if (this.email == \"\") {\n\n                    comment = this.$t('common.comment.essential');\n                    this.valid.email[\"has-error\"] = true;\n\n                // email이 유효한지 확인\n                } else if (!checkEmail(this.email)) {\n\n                    comment = this.$t('common.comment.invalidEmail');\n                    this.valid.email[\"has-error\"] = true;\n\n                } else {\n\n                    this.valid.email[\"has-error\"] = false;\n                }\n\n                this.valid.email[\"has-value\"] = true;\n                this.$refs.commentToEmail.innerHTML = \"\";\n\n                if (this.valid.email[\"has-error\"]) {\n\n                    this.$refs.commentToEmail.innerHTML = comment;\n                }\n            },\n\n            // check password\n            checkPassword() {\n\n                let comment = \"\";\n\n                // password가 비어있는지 확인\n                if (this.password == \"\") {\n\n                    comment = this.$t('common.comment.essential');\n                    this.valid.password[\"has-error\"] = true;\n\n                // password가 6자리 이상인지 확인\n                } else if (this.password.length < 6) {\n\n                    comment = this.$t('common.comment.tooShortPassword');\n                    this.valid.password[\"has-error\"] = true;\n\n                } else {\n\n                    this.valid.password[\"has-error\"] = false;\n                }\n\n                this.valid.password[\"has-value\"] = true;\n                this.$refs.commentToPassword.innerHTML = \"\";\n\n                if (this.valid.password[\"has-error\"]) {\n\n                    this.$refs.commentToPassword.innerHTML = comment;\n                }\n            }\n        },\n        mounted() {\n\n            // TEST 계정\n            if (constants.TEST) {\n                this.email = 'test02@test.com';\n                this.password = '1234';\n            }\n\n            // if (this.email == '' || this.password == '') {\n            //     this.$refs.btnLogin.style.backgroundColor = '#585858';\n            //     this.$refs.btnLogin.disabled = true;\n            // } else {\n            //     this.$refs.btnLogin.style.backgroundColor = '#53A9E4';\n            //     this.$refs.btnLogin.disabled = false;\n            // }\n\n            console.log(this.$i18n.locale)\n\n            // let ciphertext = sjcl.encrypt(\"legaltech\", \"Hello World!\")\n\n            // console.log(ciphertext)\n            // console.log(plaintext)\n\n            // 이메일, 기억하기 세팅\n            let cvv_t = this.$cookies.get(\"cvv_t\");\n\n            if (cvv_t != undefined) {\n\n                this.email = sjcl.decrypt(this.encryptPassword, JSON.stringify(cvv_t));\n                this.remember = true;\n                this.checkEmail();\n            }\n        }\n    }\n\n    function checkEmail(email) {\n\n        let regex=/([\\w-.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/;\n\n        return (email != '' && email != 'undefined' && regex.test(email));\n    }\n</script>\n<style scoped>\n\n</style>\n"],"sourceRoot":"src/views/main"}]}