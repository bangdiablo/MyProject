{"remainingRequest":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/babel-loader/lib/index.js!/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/src/views/before_login/ResetPasswordForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/src/views/before_login/ResetPasswordForm.vue","mtime":1582876129754},{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGJlZm9yZV9sb2dpbl9oZWFkZXIgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9oZWFkZXIvYmVmb3JlX2xvZ2luX2hlYWRlcic7CmltcG9ydCBiZWZvcmVfbG9naW5fZm9vdGVyIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvZm9vdGVyL2JlZm9yZV9sb2dpbl9mb290ZXInOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGs6ICcnLAogICAgICBlbWFpbDogJycsCiAgICAgIHBhc3N3b3JkOiAnJywKICAgICAgcmVQYXNzd29yZDogJycsCiAgICAgIGVycm9yOiBmYWxzZSwKICAgICAgZXJyb3JNZXNzYWdlOiAn67mE67CA67KI7Zi46rCAIOydvOy5mO2VmOyngCDslYrsirXri4jri6QuJwogICAgfTsKICB9LAoKICBjb21wdXRlZDoge30sCiAgY29tcG9uZW50czogewogICAgJ2JlZm9yZS1sb2dpbi1oZWFkZXInOiBiZWZvcmVfbG9naW5faGVhZGVyLAogICAgJ2JlZm9yZS1sb2dpbi1mb290ZXInOiBiZWZvcmVfbG9naW5fZm9vdGVyCiAgfSwKICBtZXRob2RzOiB7CiAgICBjaGVjayhrZXl3b3JkKSB7CiAgICAgIGxldCByZXN1bHQgPSBmYWxzZTsKCiAgICAgIHN3aXRjaCAoa2V5d29yZCkgewogICAgICAgIGNhc2UgJ2VtYWlsJzoKICAgICAgICAgIHJlc3VsdCA9IHRoaXMuY2hlY2tFbWFpbCgpOwogICAgICAgICAgYnJlYWs7CgogICAgICAgIGNhc2UgJ3Bhc3N3b3JkJzoKICAgICAgICAgIHJlc3VsdCA9IHRoaXMuY2hlY2tQYXNzd29yZCgpOwogICAgICAgICAgYnJlYWs7CgogICAgICAgIGNhc2UgJ3JlUGFzc3dvcmQnOgogICAgICAgICAgcmVzdWx0ID0gdGhpcy5jaGVja1JlUGFzc3dvcmQoKTsKICAgICAgICAgIGJyZWFrOwogICAgICB9CgogICAgICByZXR1cm4gcmVzdWx0OwogICAgfSwKCiAgICBjaGVja0VtYWlsKCkgewogICAgICBsZXQgZW1haWwgPSB0aGlzLmVtYWlsLAogICAgICAgICAgbWVzc2FnZSA9ICLsnbTrqZTsnbwg7KO87IaM66W8IOyYrOuwlOultOqyjCDsnoXroKXtlbTso7zshLjsmpQuIjsKCiAgICAgIGlmICghdmFsaWRFbWFpbChlbWFpbCkpIHsKICAgICAgICBpZiAoZW1haWwudHJpbSgpID09ICcnKSBtZXNzYWdlID0gJ+ydtOuplOydvCDso7zshozrpbwg7J6F66Cl7ZW07KO87IS47JqULic7CiAgICAgICAgdGhpcy5zaG93RXJyb3IodHJ1ZSwgbWVzc2FnZSk7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9CgogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0sCgogICAgY2hlY2tQYXNzd29yZCgpIHsKICAgICAgbGV0IHBhc3N3b3JkID0gdGhpcy5wYXNzd29yZC50cmltKCksCiAgICAgICAgICBtZXNzYWdlID0gJyc7CgogICAgICBpZiAocGFzc3dvcmQgPT0gJycpIHsKICAgICAgICBtZXNzYWdlID0gJ+u5hOuwgOuyiO2YuOulvCDsnoXroKXtlbTso7zshLjsmpQuJzsKICAgICAgICB0aGlzLnNob3dFcnJvcih0cnVlLCBtZXNzYWdlKTsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0KCiAgICAgIGlmIChwYXNzd29yZC5sZW5ndGggPCA2KSB7CiAgICAgICAgbWVzc2FnZSA9ICfruYTrsIDrsojtmLjripQgNuyekCDsnbTsg4HsnbTslrTslbwg7ZWp64uI64ukLic7CiAgICAgICAgdGhpcy5zaG93RXJyb3IodHJ1ZSwgbWVzc2FnZSk7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9CgogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0sCgogICAgY2hlY2tSZVBhc3N3b3JkKCkgewogICAgICBsZXQgcmVQYXNzd29yZCA9IHRoaXMucmVQYXNzd29yZC50cmltKCksCiAgICAgICAgICBtZXNzYWdlID0gJ+u5hOuwgOuyiO2YuCDtmZXsnbjsnYQg7J6F66Cl7ZW07KO87IS47JqULic7CgogICAgICBpZiAocmVQYXNzd29yZCA9PSAnJykgewogICAgICAgIHRoaXMuc2hvd0Vycm9yKHRydWUsIG1lc3NhZ2UpOwogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfQoKICAgICAgaWYgKHRoaXMucGFzc3dvcmQudHJpbSgpICE9IHRoaXMucmVQYXNzd29yZC50cmltKCkpIHsKICAgICAgICBtZXNzYWdlID0gJ+u5hOuwgOuyiO2YuOyZgCDruYTrsIDrsojtmLgg7ZmV7J247J20IOqwmeyngCDslYrsirXri4jri6QuJzsKICAgICAgICB0aGlzLnNob3dFcnJvcih0cnVlLCBtZXNzYWdlKTsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0KCiAgICAgIHJldHVybiB0cnVlOwogICAgfSwKCiAgICBzaG93RXJyb3Ioc2hvdywgbWVzc2FnZSA9ICcnKSB7CiAgICAgIHRoaXMuZXJyb3IgPSBzaG93OwogICAgICB0aGlzLmVycm9yTWVzc2FnZSA9IG1lc3NhZ2U7CiAgICB9LAoKICAgIC8vIOuztOuCtOq4sAogICAgc2VuZCgpIHsKICAgICAgaWYgKCF0aGlzLmNoZWNrKCdlbWFpbCcpKSByZXR1cm47CiAgICAgIGlmICghdGhpcy5jaGVjaygncGFzc3dvcmQnKSkgcmV0dXJuOwogICAgICBpZiAoIXRoaXMuY2hlY2soJ3JlUGFzc3dvcmQnKSkgcmV0dXJuOwogICAgICBheGlvcy5wb3N0KCIvbWFpbi9yZXNldFBhc3N3b3JkLyIsIHsKICAgICAgICBrOiB0aGlzLmssCiAgICAgICAgZW1haWw6IHRoaXMuZW1haWwsCiAgICAgICAgcGFzc3dvcmQ6IHRoaXMucGFzc3dvcmQsCiAgICAgICAgcmVQYXNzd29yZDogdGhpcy5yZVBhc3N3b3JkCiAgICAgIH0pLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgIGxldCBkYXRhID0gcmVzcG9uc2UuZGF0YSwKICAgICAgICAgICAgbWVzc2FnZSA9ICcnOyAvLyDquLDsobQg67mE67CAIOuyiO2YuOyZgCDqsJnslYTrj4Qg65CoCgogICAgICAgIGlmIChkYXRhLmNvZGUgPT09IDEwMDApIHsKICAgICAgICAgIGFsZXJ0KCLruYTrsIDrsojtmLjqsIAg67OA6rK965CY7JeI7Iq164uI64ukLiDroZzqt7jsnbjtlbTso7zshLjsmpQuIik7CiAgICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCgiL2JlZm9yZV9sb2dpbi9sb2dpbi8iKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgY29uc29sZS5sb2coZGF0YSk7IC8vIFBBU1NXT1JEX0lTX1dST05HCgogICAgICAgICAgaWYgKGRhdGEuY29kZSA9PT0gLTIwMDEpIHsKICAgICAgICAgICAgbWVzc2FnZSA9ICLruYTrsIDrsojtmLjripQgNuyekCDsnbTsg4HsnbTslrTslbwg7ZWp64uI64ukLiI7IC8vIE5PVF9DT1JSRUNUX1JFX1BBU1NXT1JECiAgICAgICAgICB9IGVsc2UgaWYgKGRhdGEuY29kZSA9PT0gLTIwMTUpIHsKICAgICAgICAgICAgbWVzc2FnZSA9ICfruYTrsIDrsojtmLjsmYAg67mE67CA67KI7Zi4IO2ZleyduOydtCDqsJnsp4Ag7JWK7Iq164uI64ukLic7IC8vIE5PX0FVVEhPUklUWQogICAgICAgICAgfSBlbHNlIGlmIChkYXRhLmNvZGUgPT09IC05MDAzKSB7CiAgICAgICAgICAgIG1lc3NhZ2UgPSAi67O47J247J2YIOydtOuplOydvCDso7zshozrpbwg7J6F66Cl7ZW07KO87IS47JqULiI7IC8vIE5PVF9FWElTVF9VU0VSCiAgICAgICAgICB9IGVsc2UgaWYgKGRhdGEuY29kZSA9PT0gLTIwMTQpIHsKICAgICAgICAgICAgbWVzc2FnZSA9ICLsobTsnqztlZjsp4Ag7JWK64qUIOydtOuplOydvCDso7zshozsnoXri4jri6QuIjsgLy8gSU5WQUxJRF9NQUlMX0xJTksKICAgICAgICAgIH0gZWxzZSBpZiAoZGF0YS5jb2RlID09PSAtOTAwMikgewogICAgICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCgiL3BhZ2VOb3RGb3VuZCIpOwogICAgICAgICAgfQoKICAgICAgICAgIHRoaXMuc2hvd0Vycm9yKHRydWUsIG1lc3NhZ2UpOwogICAgICAgIH0KICAgICAgfSkuY2F0Y2goZXggPT4gewogICAgICAgIGNvbnNvbGUubG9nKGV4KTsKICAgICAgfSk7CiAgICB9CgogIH0sCgogIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmsgPSB0aGlzLiRyb3V0ZS5xdWVyeS5rOyAvLyDsnKDtmqjtlZwg66eB7YGs7J247KeAIO2ZleyduAoKICAgIGF4aW9zLnBvc3QoIi9tYWluL2NoZWNrVmFsaWRLZXkvIiwgewogICAgICBrVHlwZTogJ3Bhc3N3b3JkJywKICAgICAgazogdGhpcy5rCiAgICB9KS50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgbGV0IGRhdGEgPSByZXNwb25zZS5kYXRhOwoKICAgICAgaWYgKGRhdGEuY29kZSA9PT0gMTAwMCkgewogICAgICAgIHRoaXMuZW1haWwgPSBkYXRhLmVtYWlsOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCcvcGFnZU5vdEZvdW5kJyk7CiAgICAgIH0KICAgIH0pLmNhdGNoKGV4ID0+IHsKICAgICAgY29uc29sZS5sb2coZXgpOwogICAgfSk7CiAgfQoKfTsKCmZ1bmN0aW9uIHZhbGlkRW1haWwoZW1haWwpIHsKICBsZXQgcmVnZXggPSAvKFtcdy0uXSspQCgoXFtbMC05XXsxLDN9XC5bMC05XXsxLDN9XC5bMC05XXsxLDN9XC4pfCgoW1x3LV0rXC4pKykpKFthLXpBLVpdezIsNH18WzAtOV17MSwzfSkoXF0/KSQvOwogIHJldHVybiBlbWFpbCAhPSAnJyAmJiBlbWFpbCAhPSAndW5kZWZpbmVkJyAmJiByZWdleC50ZXN0KGVtYWlsKTsKfQ=="},{"version":3,"sources":["ResetPasswordForm.vue"],"names":[],"mappings":"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","sourcesContent":["<!--    메인 표시되는 화면은 폴더명 == 파일명으로 사용바랍니다.            -->\n<template>\n    <div id=\"member_container\">\n        <section id=\"member_info\">\n            <before-login-header/>\n            <div class=\"member_form\">\n                <h2>비밀번호 변경</h2>\n                <div class=\"visual\">\n                    <img src=\"@/assets/images/member/visual_login.png\" alt=\"\" />\n                </div>\n                <p class=\"ask_msg\">\n                    새 비밀번호를 입력하세요.\n                </p>\n                <fieldset>\n                    <legend>정보 입력</legend>\n                    <p class=\"field\"><input type=\"text\" placeholder=\"이메일 주소\" v-model=\"email\" disabled/></p>\n                    <p class=\"field\"><input type=\"password\" placeholder=\"비밀번호\" v-model=\"password\" /></p>\n                    <p class=\"field\"><input type=\"password\" placeholder=\"비밀번호 확인\" v-model=\"rePassword\" /></p>\n                    <p class=\"error_msg\" v-show=\"error\">{{errorMessage}}</p>\n                    <p class=\"btn_set\"><button type=\"button\" @click=\"send\">보내기</button></p>\n                </fieldset>\n            </div>\n            <before-login-footer/>\n        </section>\n    </div>\n</template>\n\n<script>\n\n    import before_login_header from '../../components/header/before_login_header'\n    import before_login_footer from '../../components/footer/before_login_footer'\n\n    export default {\n        data() {\n            return {\n                k: '',\n                email: '',\n                password: '',\n                rePassword: '',\n                error: false,\n                errorMessage: '비밀번호가 일치하지 않습니다.'\n            }\n        },\n        computed: {\n\n        },\n        components: {\n            'before-login-header': before_login_header,\n            'before-login-footer': before_login_footer,\n        },\n        methods: {\n\n            check(keyword) {\n\n                let result = false;\n\n                switch (keyword) {\n\n                    case 'email':\n                        result = this.checkEmail();\n                        break;\n\n                    case 'password':\n                        result = this.checkPassword();\n                        break;\n\n                    case 'rePassword':\n                        result = this.checkRePassword();\n                        break;\n                }\n\n                return result;\n            },\n\n            checkEmail() {\n\n                let email = this.email,\n                    message = \"이메일 주소를 올바르게 입력해주세요.\";\n\n                if (!validEmail(email)) {\n\n                    if (email.trim() == '')\n                        message = '이메일 주소를 입력해주세요.'\n\n                    this.showError(true, message);\n                    return false;\n                }\n\n                return true;\n            },\n\n            checkPassword() {\n\n                let password = this.password.trim(),\n                    message = '';\n\n                if (password == '') {\n\n                    message = '비밀번호를 입력해주세요.';\n                    this.showError(true, message);\n                    return false;\n                }\n\n                if (password.length < 6) {\n\n                    message = '비밀번호는 6자 이상이어야 합니다.';\n                    this.showError(true, message);\n                    return false;\n                }\n\n                return true;\n            },\n\n            checkRePassword() {\n\n                let rePassword = this.rePassword.trim(),\n                    message = '비밀번호 확인을 입력해주세요.';\n\n                if (rePassword == '') {\n\n                    this.showError(true, message);\n                    return false;\n                }\n\n                if (this.password.trim() != this.rePassword.trim()) {\n\n                    message = '비밀번호와 비밀번호 확인이 같지 않습니다.';\n                    this.showError(true, message);\n                    return false;\n                }\n\n                return true;\n            },\n\n            showError(show, message = '') {\n\n                this.error = show;\n                this.errorMessage = message;\n            },\n\n            // 보내기\n            send() {\n\n                if (!this.check('email')) return;\n                if (!this.check('password')) return;\n                if (!this.check('rePassword')) return;\n\n                axios.post(\"/main/resetPassword/\", {\n                    k: this.k,\n                    email: this.email,\n                    password: this.password,\n                    rePassword: this.rePassword,\n                }).then(response => {\n\n                    let data = response.data,\n                        message = '';\n\n                    // 기존 비밀 번호와 같아도 됨\n                    if (data.code === 1000) {\n\n                        alert(\"비밀번호가 변경되었습니다. 로그인해주세요.\");\n                        this.$router.push(\"/before_login/login/\");\n\n                    } else {\n\n                        console.log(data);\n\n                        // PASSWORD_IS_WRONG\n                        if (data.code === -2001) {\n\n                            message = \"비밀번호는 6자 이상이어야 합니다.\";\n\n                        // NOT_CORRECT_RE_PASSWORD\n                        } else if (data.code === -2015)  {\n\n                            message = '비밀번호와 비밀번호 확인이 같지 않습니다.';\n\n                        // NO_AUTHORITY\n                        } else if (data.code === -9003)  {\n\n                            message = \"본인의 이메일 주소를 입력해주세요.\";\n\n                        // NOT_EXIST_USER\n                        } else if (data.code === -2014)  {\n\n                            message = \"존재하지 않는 이메일 주소입니다.\";\n\n                        // INVALID_MAIL_LINK\n                        } else if (data.code === -9002)  {\n\n                            this.$router.push(\"/pageNotFound\");\n                        }\n\n                        this.showError(true, message);\n                    }\n\n                }).catch(ex => {\n\n                    console.log(ex);\n                });\n            }\n        },\n        created() {\n\n            this.k = this.$route.query.k;\n\n            // 유효한 링크인지 확인\n            axios.post(\"/main/checkValidKey/\", {\n                kType: 'password',\n                k: this.k\n            }).then(response => {\n\n                let data = response.data;\n\n                if (data.code === 1000) {\n\n                    this.email = data.email;\n\n                } else {\n\n                    this.$router.push('/pageNotFound');\n                }\n\n            }).catch(ex => {\n\n                console.log(ex);\n            });\n        }\n    }\n\n    function validEmail(email) {\n\n        let regex=/([\\w-.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/;\n\n        return (email != '' && email != 'undefined' && regex.test(email));\n    }\n</script>\n\n<style>\n</style>\n"],"sourceRoot":"src/views/before_login"}]}