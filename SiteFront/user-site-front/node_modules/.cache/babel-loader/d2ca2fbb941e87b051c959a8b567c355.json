{"remainingRequest":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/babel-loader/lib/index.js!/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/src/views/before_login/MemberJoinForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/src/views/before_login/MemberJoinForm.vue","mtime":1582876129754},{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jaehyukbang/db_project_2019/SITE/SiteFront/user-site-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["MemberJoinForm.vue"],"names":[],"mappings":"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","sourcesContent":["<!--    메인 표시되는 화면은 폴더명 == 파일명으로 사용바랍니다.            -->\n<template>\n    <div id=\"member_container\">\n        <section id=\"member_info\">\n            <before-login-header/>\n            <div class=\"member_form\">\n                <h2>회원가입</h2>\n\n                <fieldset>\n                    <legend>로그인정보 입력</legend>\n                    <p class=\"field\"><label for=\"findEmail\">이름:</label><input type=\"text\" v-model=\"user.name\" ref=\"name\" placeholder=\"이름\"  @blur=\"checkField('name')\"/></p>\n                    <p class=\"field\"><label for=\"findEmail\">이메일 주소:</label><input type=\"text\" v-model=\"user.email\" ref=\"email\" placeholder=\"이메일 주소\" @blur=\"checkField('email')\"/></p>\n                    <p class=\"field\"><label for=\"findEmail\">비밀번호:</label><input type=\"password\" v-model=\"user.password\" ref=\"password\" placeholder=\"비밀번호\" @blur=\"checkField('password')\"/></p>\n                    <p class=\"field\"><label for=\"findEmail\">비밀번호 확인:</label><input type=\"password\" v-model=\"user.rePassword\" ref=\"rePassword\" placeholder=\"비밀번호 확인\" @blur=\"checkField('rePassword')\"/></p>\n                    <p class=\"field\"><label for=\"findEmail\">전화번호(임의):</label><input type=\"text\" v-model=\"user.telNumber\" ref=\"telNumber\" placeholder=\"전화번호(임의)\" /></p>\n                    <p class=\"field\"><label for=\"findEmail\">라이센스 키:</label><input type=\"text\" v-model=\"user.licenseKey\" ref=\"licenseKey\" placeholder=\"라이센스 키\" /></p>\n                    <p><input type=\"checkbox\" v-model=\"user.checkAgree\" title=\"선택\">등록함으로써 당신은 이용약관,제품 사용 허락 계약 및 개인정보보호정책에 동의한 것으로 봅니다. </p>\n                    <p class=\"error_msg\" v-show=\"errorMessage.show\">{{errorMessage.value}}</p>\n                    <p class=\"btn_set\"><button type=\"button\" @click=\"clickRegistButton\">등록</button></p>\n                    <p class=\"find_password\">이미 계정을 가지고 있는 경우 <router-link to=\"/before_login/login\">계정에 로그인</router-link></p>\n                </fieldset>\n            </div>\n            <before-login-footer/>\n        </section>\n    </div>\n</template>\n\n<script>\n\n    import before_login_header from '../../components/header/before_login_header'\n    import before_login_footer from '../../components/footer/before_login_footer'\n\n    let isExecutedGrecaptcha = false,\n        intervalGrecaptcha,\n        _token;\n\n    export default {\n        data() {\n            return {\n                user : {\n\t\t\t\t\tname: \t\t'',     // 이름\n\t\t\t\t\temail: \t\t'',     // 메일주소\n\t\t\t\t\tpassword: \t'',     // 비밀번호\n\t\t\t\t\trePassword: '',   \t// 비밀번호 확인\n                    telNumber:  '',     // 전화번호\n                    licenseKey: '',     // 라이센스 키,\n                    checkAgree: false,  // 동의 체크\n\t\t\t\t},\n                errorMessage: {\n                    value: '',\n                    show: false\n                }\n            }\n        },\n        computed: {\n\n        },\n        components: {\n            'before-login-header': before_login_header,\n            'before-login-footer': before_login_footer,\n        },\n        methods: {\n\n            checkAllField() {\n\n                let user = this.user,\n                    validForm = false;\n\n                for (let prop in user) {\n\n                    if (prop === 'telNumber') continue;\n\n                    validForm = this.checkField(prop);\n\n                    if (!validForm) {\n\n                        if (this.$refs[prop] !== undefined)\n                            this.$refs[prop].focus();\n\n                        break;\n                    }\n                }\n\n                return validForm;\n            },\n\n            checkField(prop, callback) {\n\n        \t\tlet value = this.user[prop],\n\t\t\t\t\tshow = false,\n\t\t\t\t\tmessage;\n\n        \t\t// 항목이 비었는지 검사\n\t\t\t\tif (value === '' || value === false) {\n\n\t\t\t\t    show = true;\n\n        \t\t\tswitch(prop) {\n\n        \t\t\t\tcase 'name':\n\t\t\t\t\t\t\tmessage = \"이름을 입력해주세요.\";\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'email':\n\t\t\t\t\t\t\tmessage = \"메일 주소를 입력해주세요.\";\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'password':\n\t\t\t\t\t\t\tmessage = \"비밀번호를 입력해주세요.\";\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'rePassword':\n\t\t\t\t\t\t\tmessage = \"비밀번호 확인을 입력해주세요.\";\n\t\t\t\t\t\t\tbreak;\n\n                        case 'licenseKey':\n                            message = \"라이센스 키를 입력해주세요.\";\n                            break;\n\n                        case 'checkAgree':\n                            message = \"등록을 원하시면 개인정보보호정책에 동의해주세요.\";\n                            break;\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t    show = false;\n\n\t\t\t\t    // 항목이 유효한지 검사\n                    switch(prop) {\n\n                        case 'email':\n                            if (!validEmail(value)) {\n                                message = \"유효하지 않은 메일 주소입니다. 확인해주세요.\";\n                                show = true;\n                            }\n                            break;\n\n                        case 'password':\n\n                            if (value.length < 6) {\n\n                                message = \"6자리 이상으로 설정해주세요.\";\n                                show = true;\n\n                            } else {\n\n                                if (this.user.rePassword != '' && this.user.rePassword !== this.user.password) {\n\n                                    message = \"비밀번호가 일치하지 않습니다.\";\n                                    show = true;\n                                }\n                            }\n                            break;\n\n                        case 'rePassword':\n                            if (this.user.rePassword != '' && this.user.rePassword !== this.user.password) {\n\n                                message = \"비밀번호가 일치하지 않습니다.\";\n                                show = true;\n                            }\n                            break;\n\n                        case 'licenseKey':\n                            break;\n                    }\n        \t\t}\n\n\t\t\t\tthis.errorMessage.value = message;\n\t\t\t\tthis.errorMessage.show = show;\n\n                return !show;\n\t\t\t},\n\n            checkExistEmail() {\n\n        \t\taxios.post('/management/checkExistEmail/', {email: this.user.email}).then(result => {\n\n                    if (result.data.code == 1000) {\n\n                        // 라이센스 키 유효한지 검사\n\t\t\t\t\t\tthis.checkLicenseKey();\n\n                    } else {\n\n\t\t\t\t\t\tthis.errorMessage.value = \"사용할 수 없는 메일 주소입니다. 확인해주세요.\";\n\t\t\t\t\t\tthis.errorMessage.show = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}).catch(ex => {\n\n\t\t\t\t\tconsole.log(ex);\n\t\t\t\t});\n\t\t\t},\n\n            checkLicenseKey() {\n\n                axios.post('/management/checkLicenseKey/', {licenseKey: this.user.licenseKey}).then(result => {\n\n\t\t\t\t\tif (result.data.code == 1000) {\n\n\t\t\t\t\t    // reCaptcha 검사\n\t\t\t\t\t\tthis.checkRecaptcha();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.errorMessage.value = \"유효하지 않은 라이센스 키입니다. 확인해주세요.\";\n\t\t\t\t\t\tthis.errorMessage.show = true;\n\t\t\t\t\t}\n\n\t\t\t\t}).catch(ex => {\n\n\t\t\t\t\tconsole.log(ex);\n\t\t\t\t});\n            },\n\n            checkRecaptcha() {\n\n                axios.post(\"/management/checkRecaptcha/\", {token: _token}).then(response => {\n\n                    let data = response.data,\n                        recaptchaResult = data.result;\n                    console.log(recaptchaResult)\n                    if (data.code === 1000) {\n\n                        if (recaptchaResult.score > 0.5) {\n\n                            // 회원 가입\n                            this.joinMember();\n\n                        } else {\n\n                            this.errorMessage.value = \"로봇일 가능성이 있습니다. 다시 시도해주세요.\";\n\t\t\t\t\t\t    this.errorMessage.show = true;\n                        }\n\n                    } else {\n\n\t\t\t\t\t\tthis.errorMessage.value = \"reCaptcha에 오류가 있습니다. 다시 시도해주세요.\";\n\t\t\t\t\t\tthis.errorMessage.show = true;\n\t\t\t\t\t}\n\n                }).catch(ex => {\n\n                    console.log(ex);\n                });\n            },\n\n            // 회원 가입\n            joinMember() {\n\n                // 등록\n                axios.post('/management/registMemberWithLicenseKey/', this.user).then(result => {\n\n                    let data = result.data,\n                        code = data.code;\n\n                    if (code === 1000) {\n\n                        alert('유저 등록이 완료되었습니다.');\n                        this.$router.push(\"/before_login/login\");\n\n                    } else if (code === -2013) {\n\n                        alert(\"이미 존재하는 이메일입니다.\");\n                    }\n\n                }).catch(ex => {\n\n                    console.log(ex);\n                });\n            },\n\n            // 등록 버튼 클릭\n            clickRegistButton() {\n\n                // 회원가입 양식 유효성 검사\n                if (this.checkAllField())\n                    this.checkExistEmail(); // 존재하는 이메일인지 확인\n            },\n        },\n        created() {\n\n            // key가 유효한지 확인. 유효하지 않을 경우, error page로 이동\n            let k = this.$route.query.k;\n\n            if (k == undefined) {\n\n                this.$router.push('/pageNotFound');\n\n            } else {\n\n                axios.post(\"/management/checkEmailKey/\", {k: k}).then(response => {\n\n                    let data = response.data;\n\n                    if (data.code !== 1000) {\n\n                        this.$router.push('/pageNotFound');\n                    }\n\n                }).catch(ex => {\n\n                    console.log(ex);\n                });\n            }\n\n            let recaptchaScript = document.createElement('script');\n            recaptchaScript.setAttribute('src', 'https://www.google.com/recaptcha/api.js?render=6LfkR9wUAAAAAPNEBWg4T-Al3ds98UWzEL_GFKbS');\n            document.head.appendChild(recaptchaScript);\n        },\n        mounted() {\n\n            let self = this;\n\n            $(function () {\n\n               intervalGrecaptcha = setInterval(executeGrecaptcha, 1000);\n            });\n        }\n    }\n\n    function executeGrecaptcha() {\n\n        if (grecaptcha != undefined && !isExecutedGrecaptcha) {\n\n            console.log(\"실행됨\")\n            isExecutedGrecaptcha = true;\n            grecaptcha.ready(function() {\n\n                grecaptcha.execute('6LfkR9wUAAAAAPNEBWg4T-Al3ds98UWzEL_GFKbS', {action: 'homepage'}).then(function(token) {\n\n                    _token = token;\n                });\n            });\n\n        } else {\n\n            if (isExecutedGrecaptcha)\n                clearInterval(intervalGrecaptcha);\n        }\n    }\n\n    function validEmail(email) {\n\n        let regex = /^[a-z0-9_+.-]+@([a-z0-9-]+\\.)+[a-z0-9]{2,4}$/;\n\n        return (email != '' && email != 'undefined' && regex.test(email));\n    }\n</script>\n\n<style scoped>\n.robot {\n    padding: 10px 20px 20px 20px;\n}\n</style>\n"],"sourceRoot":"src/views/before_login"}]}